

******************************************************************
******Dynamic High-Level Synthesis Compiler***********************
******Andrea Guerrieri - Lana Josipovic - EPFL-LAP 2019 **********
******Version 2.0 - Build 1.0 ************************************
******************************************************************

synthesis_optimized.tcl
Done 
set input file: fir.cpp
current input filename: ./src/fir.cpp
Done 
Done 
Synthesize
compile fir.cpp .  -target=5CSEMA4U23C7Andrea: arg1:  fir.cpp arg2: . arg3 -target=5CSEMA4U23C7 arg4
/home/dynamatic/Dynamatic/etc/llvm-6.0/bin/clang -emit-llvm -S   -c src/fir.cpp -o .fir.cpp.ll
rm: cannot remove '*.s': No such file or directory
0Time elapsed: 1e-06s.
; ModuleID = '.fir.cpp_mem2reg_constprop_simplifycfg_die.ll'
source_filename = "src/fir.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind uwtable
define i32 @_Z3firPiS_(i32* %d_i, i32* %idx) #0 {
block1:
  br label %block2

block2:                                           ; preds = %block2, %block1
  %tmp.02 = phi i32 [ 0, %block1 ], [ %add, %block2 ]
  %i.01 = phi i32 [ 0, %block1 ], [ %inc, %block2 ]
  %"2" = zext i32 %i.01 to i64
  %arrayidx = getelementptr inbounds i32, i32* %idx, i64 %"2"
  %"3" = load i32, i32* %arrayidx, align 4
  %sub = sub nsw i32 999, %i.01
  %idxprom1 = sext i32 %sub to i64
  %arrayidx2 = getelementptr inbounds i32, i32* %d_i, i64 %idxprom1
  %"4" = load i32, i32* %arrayidx2, align 4
  %mul = mul nsw i32 %"3", %"4"
  %add = add nsw i32 %tmp.02, %mul
  %inc = add nuw nsw i32 %i.01, 1
  %cmp = icmp ult i32 %inc, 1000
  br i1 %cmp, label %block2, label %block3

block3:                                           ; preds = %block2
  ret i32 %add
}

; Function Attrs: noinline norecurse nounwind uwtable
define i32 @main() #1 {
entry:
  %d_i = alloca [1 x [1000 x i32]], align 16
  %idx = alloca [1 x [1000 x i32]], align 16
  call void @srand(i32 13) #3
  br label %for.body

for.body:                                         ; preds = %for.inc10, %entry
  br label %for.body3

for.body3:                                        ; preds = %for.body3, %for.body
  %j.02 = phi i32 [ 0, %for.body ], [ %inc, %for.body3 ]
  %call = call i32 @rand() #3
  %rem = srem i32 %call, 100
  %0 = zext i32 %j.02 to i64
  %arrayidx4 = getelementptr inbounds [1 x [1000 x i32]], [1 x [1000 x i32]]* %d_i, i64 0, i64 0, i64 %0
  store i32 %rem, i32* %arrayidx4, align 4
  %call5 = call i32 @rand() #3
  %rem6 = srem i32 %call5, 100
  %1 = zext i32 %j.02 to i64
  %arrayidx9 = getelementptr inbounds [1 x [1000 x i32]], [1 x [1000 x i32]]* %idx, i64 0, i64 0, i64 %1
  store i32 %rem6, i32* %arrayidx9, align 4
  %inc = add nuw nsw i32 %j.02, 1
  %cmp2 = icmp ult i32 %inc, 1000
  br i1 %cmp2, label %for.body3, label %for.inc10

for.inc10:                                        ; preds = %for.body3
  br i1 false, label %for.body, label %for.end12

for.end12:                                        ; preds = %for.inc10
  br label %for.body16

for.body16:                                       ; preds = %for.body16, %for.end12
  %arraydecay = getelementptr inbounds [1 x [1000 x i32]], [1 x [1000 x i32]]* %d_i, i64 0, i64 0, i64 0
  %arraydecay19 = getelementptr inbounds [1 x [1000 x i32]], [1 x [1000 x i32]]* %idx, i64 0, i64 0, i64 0
  %call20 = call i32 @_Z3firPiS_(i32* nonnull %arraydecay, i32* nonnull %arraydecay19)
  br i1 false, label %for.body16, label %for.end23

for.end23:                                        ; preds = %for.body16
  ret i32 0
}

; Function Attrs: nounwind
declare void @srand(i32) #2

; Function Attrs: nounwind
declare i32 @rand() #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 6.0.1 (http://llvm.org/git/clang.git 2f27999df400d17b33cdd412fdd606a88208dfcc) (http://llvm.org/git/llvm.git 5136df4d089a086b70d452160ad5451861269498)"}
OptimizeBitwidth : Optimization of function _Z3firPiS_ finished in 2 iterations.
Printing stats (for more details on states for each individual value, use dumpInfos).
Saved bits during forward passes : 66
Saved bits during backward passes : 0
Saved bits in constants : 106
Used bits after OB : 405, vs. Originaly used bits : 577
 => Reduction of used bits : 7.019064e+01


Done 
Done 
Optimize
buffers buffers -filename=./reports/fir -period=4 ****************************************
dataflow graph name: ./reports/fir
milp solver: cbc
delay: 0, period: 4
timeout: 180
set optimization: true
first MG optimization: false
****************************************
===================
READING BB DOT FILE
===================
Reading graph name...
Reading set of nodes...
Reading set of edges between nodes...
Setting entry and exit BB...
	Entry: BB1, Exit: BB3
Setting BB frequencies...
BB1 : 1
BB2 : 1000
BB3 : 1

Adding elastic buffers with period=4 and buffer_delay=0

======================
ADDING ELASTIC BUFFERS
======================
Extracting marked graphs
--------------------------
Iteration 1
ILP time: [ms] 10 
Arcs in the CFDFC:
	2->2:999
Updating frequencies...
Storing CFDFC and corresponding Marked Graph...
--------------------------
Iteration 2
ILP time: [ms] 11 
Arcs in the CFDFC:
No new MG can be extracted to increase coverage.

*******************
Covered Frequency = 999, Total Frequency = 1001, Coverage = 0.998002
*******************

determining buffer from/to MC_LSQ units to/from loads.
----------------------
buffers on MG borders
----------------------
Adding buffer in branch_0:out1 -> phi_1:in2 | slots: 1, trans: 0 | BB1 -> BB2
Adding buffer in branch_1:out1 -> phi_2:in2 | slots: 1, trans: 0 | BB1 -> BB2
Adding buffer in branch_2:out2 -> phi_n0:in1 | slots: 1, trans: 0 | BB2 -> BB3
Adding buffer in branchC_4:out1 -> phiC_1:in1 | slots: 1, trans: 0 | BB1 -> BB2
Adding buffer in branchC_5:out2 -> phiC_2:in1 | slots: 1, trans: 0 | BB2 -> BB3

Calculating disjoint sets of CFDFCs...
	initialize
	union
	get set of unique dsu numbers
	merge and get sub-components
Total number of Extracted Disjoint CFDFCs: 1
Adding Marked Graphs from CFDFCs...

-------------------------------
Initiating MILP for MG number 0
-------------------------------
 creating throughput vars for sub_mg0
Solving MILP for elastic buffers: MG 0
Milp time for MG 0: [ms] 744 

************************
*** Throughput for MG 0 in disjoint MG 0: 0.33 ***
************************
Adding buffer in phi_1:out1 -> add_11:in1 | slots: 1, trans: 0 | BB2 -> BB2 (inner)
Adding buffer in phi_2:out1 -> fork_0:in1 | slots: 1, trans: 0 | BB2 -> BB2 (inner)
Adding buffer in add_11:out1 -> branch_2:in1 | slots: 1, trans: 0 | BB2 -> BB2 (inner)
Adding buffer in add_12:out1 -> fork_2:in1 | slots: 1, trans: 0 | BB2 -> BB2 (inner)
Adding buffer in icmp_13:out1 -> fork_4:in1 | slots: 1, trans: 0 | BB2 -> BB2 (inner)
Adding buffer in fork_2:out2 -> branch_3:in1 | slots: 1, trans: 1 | BB2 -> BB2 (inner)
Adding buffer in fork_4:out2 -> branch_2:in2 | slots: 2, trans: 1 | BB2 -> BB2 (inner)
Adding buffer in phiC_1:out1 -> branchC_5:in1 | slots: 2, trans: 0 | BB2 -> BB2 (inner)
Adding buffer in fork_9:out1 -> phi_1:in1 | slots: 2, trans: 1 | BB2 -> BB2 (inner)

*** Throughput achieved in sub MG 0: 0.33 ***

--------------------------------------
Initiating MILP for remaining channels
--------------------------------------
Solving MILP for channels not covered by MGs
Milp time for remaining channels: [ms] 17 

***************************
Total MILP time: [ms] 761
***************************
INSTANTIATE
cp ./reports/fir_graph_buf.dot ./_input/fir_graph.dot 
cp ./reports/fir_bbgraph_buf.dot ./_input/fir_bbgraph.dot 
cp ./reports/fir_bbgraph_buf.dot ./_tmp/out_bbgraph.dot
Executing min
fir
===================
READING BB DOT FILE
===================
Reading graph name...
Reading set of nodes...
Reading set of edges between nodes...
Setting entry and exit BB...
	Entry: BB1, Exit: BB3
Setting BB frequencies...
BB1 : 1
BB2 : 1000
BB3 : 1

running MILP with timeout : 100
intra set sharing for mul_op
intra set sharing for fmul_op
intra set sharing for fsub_op
intra set sharing for fadd_op
intra set sharing for fdiv_op
intra set sharing for sdiv_op
inter set sharing for mul_op
inter set sharing for fmul_op
inter set sharing for fsub_op
inter set sharing for fadd_op
inter set sharing for fdiv_op
inter set sharing for sdiv_op
checking final throughputs == initial throughputs
checking throughput
===================
READING BB DOT FILE
===================
Reading graph name...
Reading set of nodes...
Reading set of edges between nodes...
Setting entry and exit BB...
	Entry: BB1, Exit: BB3
Setting BB frequencies...
BB1 : 1
BB2 : 1000
BB3 : 1

Merge groups of type OPERATOR
- Shared components in BB 2 : 
	- At index 0, mul_10
Expected to find 1 block of type FORK but found 0 in BB 2
did not find a forkC, creating one 
running MILP with timeout : 300
Throughput unharmed
===================
READING BB DOT FILE
===================
Reading graph name...
Reading set of nodes...
Reading set of edges between nodes...
Setting entry and exit BB...
	Entry: BB1, Exit: BB3
Setting BB frequencies...
BB1 : 1
BB2 : 1000
BB3 : 1

removing additional_fork_cp0
Removing additional_fork_cp0
Merge groups of type OPERATOR
- Shared components in BB 2 : 
	- At index 0, mul_10
Done
resource_minimization min fir
cp ./_output/fir_graph.dot ./reports/fir_area_optimized.dot
Done 
Write hdl
write_hdl  . ./reports/fir_area_optimized

******************************************************************
******Dynamic High-Level Synthesis Compiler **********************
******Andrea Guerrieri - Lana Josipovic - EPFL-LAP 2019 **********
******Dot to VHDL Generator***************************************
******************************************************************
Parsing ./reports/fir_area_optimized.dot

Report Modules 
+--------------------------------------------------------------------------+
|   Node_ID|                Name|         Module_type|    Inputs|   Outputs|
+--------------------------------------------------------------------------+
|         0|        brCst_block1|            Constant|         1|         1|
|         1|               cst_0|            Constant|         1|         1|
|         2|               cst_1|            Constant|         1|         1|
|         3|            branch_0|              Branch|         2|         2|
|         4|            branch_1|              Branch|         2|         2|
|         5|              fork_3|                Fork|         1|         3|
|         6|             start_0|               Entry|         1|         1|
|         7|             forkC_6|                Fork|         1|         4|
|         8|           branchC_4|              Branch|         2|         2|
|         9|            Buffer_3|              Buffer|         1|         1|
|        10|            Buffer_2|              Buffer|         1|         1|
|        11|            Buffer_1|              Buffer|         1|         1|
|        12|           Buffer_14|               tFifo|         1|         1|
|        13|           Buffer_13|              Buffer|         1|         1|
|        14|           Buffer_12|               tFifo|         1|         1|
|        15|               phi_1|                 Mux|         3|         1|
|        16|               phi_2|                 Mux|         3|         1|
|        17|              load_5|            Operator|         2|         2|
|        18|               cst_2|            Constant|         1|         1|
|        19|               sub_6|            Operator|         2|         1|
|        20|              load_9|            Operator|         2|         2|
|        21|              mul_10|            Operator|         2|         1|
|        22|              add_11|            Operator|         2|         1|
|        23|               cst_3|            Constant|         1|         1|
|        24|              add_12|            Operator|         2|         1|
|        25|               cst_4|            Constant|         1|         1|
|        26|             icmp_13|            Operator|         2|         1|
|        27|              fork_0|                Fork|         1|         3|
|        28|              fork_2|                Fork|         1|         2|
|        29|            branch_2|              Branch|         2|         2|
|        30|            branch_3|              Branch|         2|         2|
|        31|              fork_4|                Fork|         1|         3|
|        32|              phiC_1|          CntrlMerge|         2|         2|
|        33|           branchC_5|              Branch|         2|         2|
|        34|            source_0|              Source|         0|         1|
|        35|            source_1|              Source|         0|         1|
|        36|            source_2|              Source|         0|         1|
|        37|              fork_9|                Fork|         1|         2|
|        38|           Buffer_11|              Buffer|         1|         1|
|        39|           Buffer_10|                TEHB|         1|         1|
|        40|            Buffer_9|              Buffer|         1|         1|
|        41|            Buffer_8|              Buffer|         1|         1|
|        42|            Buffer_7|              Buffer|         1|         1|
|        43|            Buffer_6|              Buffer|         1|         1|
|        44|            Buffer_5|              Buffer|         1|         1|
|        45|            Buffer_4|              Buffer|         1|         1|
|        46|               ret_0|            Operator|         1|         1|
|        47|              phi_n0|               Merge|         1|         1|
|        48|              phiC_2|               Merge|         1|         1|
|        49|              MC_idx|                  MC|         4|         2|
|        50|              MC_d_i|                  MC|         4|         2|
|        51|               end_0|                Exit|         3|         1|
|        52|              sink_0|                Sink|         1|         0|
|        53|              sink_1|                Sink|         1|         0|
|        54|              sink_2|                Sink|         1|         0|
|        55|              sink_3|                Sink|         1|         0|
|        56|              sink_4|                Sink|         1|         0|
+--------------------------------------------------------------------------+
Generating ./reports/fir_area_optimized.vhd

Done



Done 
Exit...
Goodbye!


