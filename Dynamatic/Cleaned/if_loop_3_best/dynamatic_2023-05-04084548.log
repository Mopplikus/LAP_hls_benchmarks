

******************************************************************
******Dynamic High-Level Synthesis Compiler***********************
******Andrea Guerrieri - Lana Josipovic - EPFL-LAP 2019 **********
******Version 2.0 - Build 1.0 ************************************
******************************************************************

synthesis_optimized.tcl
Done 
set input file: if_loop_3.cpp
current input filename: ./src/if_loop_3.cpp
Done 
Synthesize
compile if_loop_3.cpp . Andrea: arg1:  if_loop_3.cpp arg2: . arg3 arg4
/home/dynamatic/Dynamatic/etc/llvm-6.0/bin/clang -emit-llvm -S   -c src/if_loop_3.cpp -o .if_loop_3.cpp.ll
rm: cannot remove '*.s': No such file or directory
0Time elapsed: 0s.
; ModuleID = '.if_loop_3.cpp_mem2reg_constprop_simplifycfg_die.ll'
source_filename = "src/if_loop_3.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind uwtable
define i32 @_Z9if_loop_3PiS_iS_(i32* %a, i32* %b, i32 %n, i32* %sum) #0 {
block1:
  %cmp1 = icmp sgt i32 %n, 0
  br i1 %cmp1, label %block2, label %block6

block2:                                           ; preds = %block1
  br label %block3

block3:                                           ; preds = %block5, %block2
  %sum_local.03 = phi i32 [ 1000, %block2 ], [ %sum_local.1, %block5 ]
  %i.02 = phi i32 [ 0, %block2 ], [ %inc, %block5 ]
  %"3" = zext i32 %i.02 to i64
  %arrayidx = getelementptr inbounds i32, i32* %a, i64 %"3"
  %"4" = load i32, i32* %arrayidx, align 4
  %"5" = zext i32 %i.02 to i64
  %arrayidx2 = getelementptr inbounds i32, i32* %b, i64 %"5"
  %"6" = load i32, i32* %arrayidx2, align 4
  %sub = sub nsw i32 %"4", %"6"
  %cmp3 = icmp sgt i32 %sub, -1
  br i1 %cmp3, label %block4, label %block5

block4:                                           ; preds = %block3
  %div = sdiv i32 %sum_local.03, %sub
  %"8" = zext i32 %i.02 to i64
  %arrayidx5 = getelementptr inbounds i32, i32* %sum, i64 %"8"
  store i32 %div, i32* %arrayidx5, align 4
  br label %block5

block5:                                           ; preds = %block4, %block3
  %sum_local.1 = phi i32 [ %div, %block4 ], [ %sum_local.03, %block3 ]
  %inc = add nuw nsw i32 %i.02, 1
  %cmp = icmp slt i32 %inc, %n
  br i1 %cmp, label %block3, label %block6

block6:                                           ; preds = %block5, %block1
  %sum_local.0.lcssa = phi i32 [ 1000, %block1 ], [ %sum_local.1, %block5 ]
  ret i32 %sum_local.0.lcssa
}

; Function Attrs: noinline norecurse nounwind uwtable
define i32 @main() #1 {
entry:
  %a = alloca [1 x [100 x i32]], align 16
  %b = alloca [1 x [100 x i32]], align 16
  %n = alloca [1 x i32], align 4
  %sum = alloca [1 x [100 x i32]], align 16
  call void @srand(i32 13) #3
  br label %for.body

for.body:                                         ; preds = %for.inc13, %entry
  %0 = getelementptr inbounds [1 x i32], [1 x i32]* %n, i64 0, i64 0
  store i32 100, i32* %0, align 4
  br label %for.body3

for.body3:                                        ; preds = %for.body3, %for.body
  %j.01 = phi i32 [ 0, %for.body ], [ %inc, %for.body3 ]
  %call = call i32 @rand() #3
  %rem = srem i32 %call, 10
  %add = add nsw i32 %rem, 5
  %1 = zext i32 %j.01 to i64
  %2 = getelementptr inbounds [1 x [100 x i32]], [1 x [100 x i32]]* %a, i64 0, i64 0, i64 %1
  store i32 %add, i32* %2, align 4
  %add8 = add nsw i32 %rem, 6
  %3 = zext i32 %j.01 to i64
  %4 = getelementptr inbounds [1 x [100 x i32]], [1 x [100 x i32]]* %b, i64 0, i64 0, i64 %3
  store i32 %add8, i32* %4, align 4
  %inc = add nuw nsw i32 %j.01, 1
  %cmp2 = icmp ult i32 %inc, 100
  br i1 %cmp2, label %for.body3, label %for.inc13

for.inc13:                                        ; preds = %for.body3
  br i1 false, label %for.body, label %for.end15

for.end15:                                        ; preds = %for.inc13
  %arraydecay = getelementptr inbounds [1 x [100 x i32]], [1 x [100 x i32]]* %a, i64 0, i64 0, i64 0
  %arraydecay21 = getelementptr inbounds [1 x [100 x i32]], [1 x [100 x i32]]* %b, i64 0, i64 0, i64 0
  %arrayidx23 = getelementptr inbounds [1 x i32], [1 x i32]* %n, i64 0, i64 0
  %5 = load i32, i32* %arrayidx23, align 4
  %arraydecay26 = getelementptr inbounds [1 x [100 x i32]], [1 x [100 x i32]]* %sum, i64 0, i64 0, i64 0
  %call27 = call i32 @_Z9if_loop_3PiS_iS_(i32* nonnull %arraydecay, i32* nonnull %arraydecay21, i32 %5, i32* nonnull %arraydecay26)
  ret i32 0
}

; Function Attrs: nounwind
declare void @srand(i32) #2

; Function Attrs: nounwind
declare i32 @rand() #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 6.0.1 (http://llvm.org/git/clang.git 2f27999df400d17b33cdd412fdd606a88208dfcc) (http://llvm.org/git/llvm.git 5136df4d089a086b70d452160ad5451861269498)"}
OptimizeBitwidth : Optimization of function _Z9if_loop_3PiS_iS_ finished in 2 iterations.
Printing stats (for more details on states for each individual value, use dumpInfos).
Saved bits during forward passes : 5
Saved bits during backward passes : 0
Saved bits in constants : 84
Used bits after OB : 650, vs. Originaly used bits : 739
 => Reduction of used bits : 8.795670e+01


Done 
Optimize
buffers buffers -filename=./reports/if_loop_3 -timeout=60****************************************
dataflow graph name: ./reports/if_loop_3
milp solver: cbc
delay: 0, period: 5
timeout: 60
set optimization: true
first MG optimization: false
****************************************
===================
READING BB DOT FILE
===================
Reading graph name...
Reading set of nodes...
Reading set of edges between nodes...
Setting entry and exit BB...
	Entry: BB1, Exit: BB6
Setting BB frequencies...
BB1 : 1
BB2 : 1
BB3 : 100
BB4 : 0
BB5 : 100
BB6 : 1

Adding elastic buffers with period=5 and buffer_delay=0

======================
ADDING ELASTIC BUFFERS
======================
Extracting marked graphs
--------------------------
Iteration 1
ILP time: [ms] 10 
Arcs in the CFDFC:
	3->5:100
	5->3:99
Updating frequencies...
Storing CFDFC and corresponding Marked Graph...
--------------------------
Iteration 2
ILP time: [ms] 9 
Arcs in the CFDFC:
No new MG can be extracted to increase coverage.

*******************
Covered Frequency = 198, Total Frequency = 202, Coverage = 0.980198
*******************

determining buffer from/to MC_LSQ units to/from loads.
----------------------
buffers on MG borders
----------------------
Adding buffer in branch_2:out1 -> phi_3:in2 | slots: 1, trans: 0 | BB2 -> BB3
Adding buffer in branch_3:out1 -> phi_4:in2 | slots: 1, trans: 0 | BB2 -> BB3
Adding buffer in branch_4:out1 -> phi_n1:in1 | slots: 1, trans: 0 | BB2 -> BB3
Adding buffer in branch_5:out1 -> phi_n4:in1 | slots: 1, trans: 0 | BB3 -> BB4
Adding buffer in branch_6:out1 -> phi_n6:in1 | slots: 1, trans: 0 | BB3 -> BB4
Adding buffer in branch_7:out1 -> phi_n5:in1 | slots: 1, trans: 0 | BB3 -> BB4
Adding buffer in branch_8:out1 -> phi_n7:in1 | slots: 1, trans: 0 | BB3 -> BB4
Adding buffer in branch_9:out1 -> phi_n3:in2 | slots: 1, trans: 0 | BB4 -> BB5
Adding buffer in branch_10:out1 -> phi_18:in3 | slots: 1, trans: 0 | BB4 -> BB5
Adding buffer in branch_11:out1 -> phi_n2:in2 | slots: 1, trans: 0 | BB4 -> BB5
Adding buffer in branch_12:out2 -> phi_22:in3 | slots: 1, trans: 0 | BB5 -> BB6
Adding buffer in branchC_16:out1 -> phiC_9:in1 | slots: 1, trans: 0 | BB2 -> BB3
Adding buffer in branchC_17:out1 -> phiC_10:in1 | slots: 1, trans: 0 | BB3 -> BB4
Adding buffer in branchC_18:out1 -> phiC_11:in2 | slots: 1, trans: 0 | BB4 -> BB5
Adding buffer in branchC_19:out2 -> phiC_12:in2 | slots: 1, trans: 0 | BB5 -> BB6

Calculating disjoint sets of CFDFCs...
	initialize
	union
	get set of unique dsu numbers
	merge and get sub-components
Total number of Extracted Disjoint CFDFCs: 1
Adding Marked Graphs from CFDFCs...

-------------------------------
Initiating MILP for MG number 0
-------------------------------
 creating throughput vars for sub_mg0
Solving MILP for elastic buffers: MG 0
Milp time for MG 0: [ms] 1779 

************************
*** Throughput for MG 0 in disjoint MG 0: 0.33 ***
************************
Adding buffer in phi_3:out1 -> branch_5:in1 | slots: 1, trans: 0 | BB3 -> BB3 (inner)
Adding buffer in phi_18:out1 -> branch_12:in1 | slots: 1, trans: 1 | BB5 -> BB5 (inner)
Adding buffer in phi_n1:out1 -> branch_8:in1 | slots: 1, trans: 0 | BB3 -> BB3 (inner)
Adding buffer in phi_n2:out1 -> add_19:in1 | slots: 1, trans: 0 | BB5 -> BB5 (inner)
Adding buffer in phi_n3:out1 -> fork_8:in1 | slots: 1, trans: 0 | BB5 -> BB5 (inner)
Adding buffer in fork_2:out3 -> branch_6:in1 | slots: 1, trans: 1 | BB3 -> BB3 (inner)
Adding buffer in phiC_9:out1 -> branchC_17:in1 | slots: 1, trans: 0 | BB3 -> BB3 (inner)
Adding buffer in phiC_11:out1 -> branchC_19:in1 | slots: 1, trans: 1 | BB5 -> BB5 (inner)

*** Throughput achieved in sub MG 0: 0.33 ***

--------------------------------------
Initiating MILP for remaining channels
--------------------------------------
Solving MILP for channels not covered by MGs
Milp time for remaining channels: [ms] 18 

INSTANTIATE
Done 
Write hdl
write_hdl  . ./reports/if_loop_3_optimized

******************************************************************
******Dynamic High-Level Synthesis Compiler **********************
******Andrea Guerrieri - Lana Josipovic - EPFL-LAP 2019 **********
******Dot to VHDL Generator***************************************
******************************************************************
Parsing ./reports/if_loop_3_optimized.dot

Report Modules 
+--------------------------------------------------------------------------+
|   Node_ID|                Name|         Module_type|    Inputs|   Outputs|
+--------------------------------------------------------------------------+
|         0|                   n|               Entry|         1|         1|
|         1|               cst_0|            Constant|         1|         1|
|         2|              icmp_0|            Operator|         2|         1|
|         3|               cst_5|            Constant|         1|         1|
|         4|              fork_0|                Fork|         1|         2|
|         5|            branch_0|              Branch|         2|         2|
|         6|            branch_1|              Branch|         2|         2|
|         7|             fork_10|                Fork|         1|         3|
|         8|             start_0|               Entry|         1|         1|
|         9|            forkC_16|                Fork|         1|         2|
|        10|          branchC_15|              Branch|         2|         2|
|        11|            source_0|              Source|         0|         1|
|        12|        brCst_block2|            Constant|         1|         1|
|        13|               cst_1|            Constant|         1|         1|
|        14|               cst_2|            Constant|         1|         1|
|        15|              phi_n0|               Merge|         1|         1|
|        16|            branch_2|              Branch|         2|         2|
|        17|            branch_3|              Branch|         2|         2|
|        18|            branch_4|              Branch|         2|         2|
|        19|             fork_11|                Fork|         1|         4|
|        20|              phiC_8|               Merge|         1|         1|
|        21|            forkC_17|                Fork|         1|         4|
|        22|          branchC_16|              Branch|         2|         2|
|        23|            Buffer_6|              Buffer|         1|         1|
|        24|            Buffer_7|              Buffer|         1|         1|
|        25|            Buffer_8|              Buffer|         1|         1|
|        26|           Buffer_17|              Buffer|         1|         1|
|        27|               phi_3|                 Mux|         3|         1|
|        28|               phi_4|                 Mux|         3|         1|
|        29|              load_7|            Operator|         2|         2|
|        30|             load_10|            Operator|         2|         2|
|        31|              sub_11|            Operator|         2|         1|
|        32|               cst_3|            Constant|         1|         1|
|        33|             icmp_12|            Operator|         2|         1|
|        34|              phi_n1|               Merge|         2|         1|
|        35|              fork_2|                Fork|         1|         3|
|        36|              fork_3|                Fork|         1|         2|
|        37|            branch_5|              Branch|         2|         2|
|        38|            branch_6|              Branch|         2|         2|
|        39|            branch_7|              Branch|         2|         2|
|        40|            branch_8|              Branch|         2|         2|
|        41|             fork_12|                Fork|         1|         5|
|        42|              phiC_9|          CntrlMerge|         2|         2|
|        43|          branchC_17|              Branch|         2|         2|
|        44|            source_1|              Source|         0|         1|
|        45|             fork_22|                Fork|         1|         2|
|        46|            Buffer_1|              Buffer|         1|         1|
|        47|            Buffer_2|              Buffer|         1|         1|
|        48|            Buffer_5|                TEHB|         1|         1|
|        49|            Buffer_9|              Buffer|         1|         1|
|        50|           Buffer_10|              Buffer|         1|         1|
|        51|           Buffer_11|              Buffer|         1|         1|
|        52|           Buffer_12|              Buffer|         1|         1|
|        53|           Buffer_18|              Buffer|         1|         1|
|        54|           Buffer_19|              Buffer|         1|         1|
|        55|             sdiv_14|            Operator|         2|         1|
|        56|             store_0|            Operator|         2|         2|
|        57|        brCst_block4|            Constant|         1|         1|
|        58|              phi_n4|               Merge|         1|         1|
|        59|              phi_n5|               Merge|         1|         1|
|        60|              phi_n6|               Merge|         1|         1|
|        61|              phi_n7|               Merge|         1|         1|
|        62|              fork_4|                Fork|         1|         2|
|        63|              fork_9|                Fork|         1|         2|
|        64|            branch_9|              Branch|         2|         2|
|        65|           branch_10|              Branch|         2|         2|
|        66|           branch_11|              Branch|         2|         2|
|        67|             fork_13|                Fork|         1|         4|
|        68|               cst_6|            Constant|         1|         1|
|        69|             phiC_10|               Merge|         1|         1|
|        70|            forkC_19|                Fork|         1|         3|
|        71|          branchC_18|              Branch|         2|         2|
|        72|           Buffer_13|              Buffer|         1|         1|
|        73|           Buffer_14|              Buffer|         1|         1|
|        74|           Buffer_15|              Buffer|         1|         1|
|        75|           Buffer_20|              Buffer|         1|         1|
|        76|              phi_18|                 Mux|         3|         1|
|        77|               cst_4|            Constant|         1|         1|
|        78|              add_19|            Operator|         2|         1|
|        79|             icmp_20|            Operator|         2|         1|
|        80|              phi_n2|               Merge|         2|         1|
|        81|              phi_n3|               Merge|         2|         1|
|        82|              fork_6|                Fork|         1|         2|
|        83|              fork_8|                Fork|         1|         2|
|        84|           branch_12|              Branch|         2|         2|
|        85|           branch_13|              Branch|         2|         2|
|        86|           branch_14|              Branch|         2|         2|
|        87|             fork_14|                Fork|         1|         4|
|        88|             phiC_11|          CntrlMerge|         2|         2|
|        89|          branchC_19|              Branch|         2|         2|
|        90|            source_2|              Source|         0|         1|
|        91|            Buffer_3|              Buffer|         1|         1|
|        92|            Buffer_4|              Buffer|         1|         1|
|        93|           Buffer_16|              Buffer|         1|         1|
|        94|           Buffer_21|                TEHB|         1|         1|
|        95|           Buffer_22|              Buffer|         1|         1|
|        96|              phi_22|                 Mux|         3|         1|
|        97|               ret_0|            Operator|         1|         1|
|        98|             phiC_12|          CntrlMerge|         2|         2|
|        99|                MC_a|                  MC|         4|         2|
|       100|                MC_b|                  MC|         4|         2|
|       101|              MC_sum|                  MC|         4|         2|
|       102|               end_0|                Exit|         4|         1|
|       103|              sink_0|                Sink|         1|         0|
|       104|              sink_1|                Sink|         1|         0|
|       105|              sink_2|                Sink|         1|         0|
|       106|              sink_3|                Sink|         1|         0|
|       107|              sink_4|                Sink|         1|         0|
|       108|              sink_5|                Sink|         1|         0|
|       109|              sink_6|                Sink|         1|         0|
|       110|              sink_7|                Sink|         1|         0|
|       111|              sink_8|                Sink|         1|         0|
|       112|              sink_9|                Sink|         1|         0|
|       113|             sink_10|                Sink|         1|         0|
|       114|             sink_11|                Sink|         1|         0|
|       115|             sink_12|                Sink|         1|         0|
|       116|             sink_13|                Sink|         1|         0|
+--------------------------------------------------------------------------+
Generating ./reports/if_loop_3_optimized.vhd

Done



Done 
Exit...
Goodbye!


