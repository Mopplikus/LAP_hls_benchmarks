-- ==============================================================
-- Generated by Dot2Vhdl ver. 2.0
-- File created: Tue Jun 13 23:57:42 2023

-- ==============================================================
library IEEE; 
use IEEE.std_logic_1164.all; 
use IEEE.numeric_std.all; 
use work.customTypes.all; 
-- ==============================================================
entity fir is 
port (
	clk:  in std_logic;
	rst:  in std_logic;
	start_in:  in std_logic_vector (0 downto 0);
	start_valid:  in std_logic;
	start_ready:  out std_logic;
	end_out:  out std_logic_vector (31 downto 0);
	end_valid:  out std_logic;
	end_ready:  in std_logic;
	idx_address0 : out std_logic_vector (31 downto 0);
	idx_ce0 : out std_logic;
	idx_we0 : out std_logic;
	idx_dout0 : out std_logic_vector (31 downto 0);
	idx_din0 : in std_logic_vector (31 downto 0);
	idx_address1 : out std_logic_vector (31 downto 0);
	idx_ce1 : out std_logic;
	idx_we1 : out std_logic;
	idx_dout1 : out std_logic_vector (31 downto 0);
	idx_din1 : in std_logic_vector (31 downto 0);
	d_i_address0 : out std_logic_vector (31 downto 0);
	d_i_ce0 : out std_logic;
	d_i_we0 : out std_logic;
	d_i_dout0 : out std_logic_vector (31 downto 0);
	d_i_din0 : in std_logic_vector (31 downto 0);
	d_i_address1 : out std_logic_vector (31 downto 0);
	d_i_ce1 : out std_logic;
	d_i_we1 : out std_logic;
	d_i_dout1 : out std_logic_vector (31 downto 0);
	d_i_din1 : in std_logic_vector (31 downto 0));
end;

architecture behavioral of fir is 

	signal brCst_block1_clk : std_logic;
	signal brCst_block1_rst : std_logic;
	signal brCst_block1_dataInArray_0 : std_logic_vector(0 downto 0);
	signal brCst_block1_pValidArray_0 : std_logic;
	signal brCst_block1_readyArray_0 : std_logic;
	signal brCst_block1_nReadyArray_0 : std_logic;
	signal brCst_block1_validArray_0 : std_logic;
	signal brCst_block1_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal cst_0_clk : std_logic;
	signal cst_0_rst : std_logic;
	signal cst_0_dataInArray_0 : std_logic_vector(0 downto 0);
	signal cst_0_pValidArray_0 : std_logic;
	signal cst_0_readyArray_0 : std_logic;
	signal cst_0_nReadyArray_0 : std_logic;
	signal cst_0_validArray_0 : std_logic;
	signal cst_0_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal cst_1_clk : std_logic;
	signal cst_1_rst : std_logic;
	signal cst_1_dataInArray_0 : std_logic_vector(0 downto 0);
	signal cst_1_pValidArray_0 : std_logic;
	signal cst_1_readyArray_0 : std_logic;
	signal cst_1_nReadyArray_0 : std_logic;
	signal cst_1_validArray_0 : std_logic;
	signal cst_1_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal branch_0_clk : std_logic;
	signal branch_0_rst : std_logic;
	signal branch_0_dataInArray_0 : std_logic_vector(0 downto 0);
	signal branch_0_dataInArray_1 : std_logic_vector (0 downto 0);
	signal branch_0_pValidArray_0 : std_logic;
	signal branch_0_pValidArray_1 : std_logic;
	signal branch_0_readyArray_0 : std_logic;
	signal branch_0_readyArray_1 : std_logic;
	signal branch_0_nReadyArray_0 : std_logic;
	signal branch_0_validArray_0 : std_logic;
	signal branch_0_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal branch_0_nReadyArray_1 : std_logic;
	signal branch_0_validArray_1 : std_logic;
	signal branch_0_dataOutArray_1 : std_logic_vector(0 downto 0);

	signal branch_1_clk : std_logic;
	signal branch_1_rst : std_logic;
	signal branch_1_dataInArray_0 : std_logic_vector(0 downto 0);
	signal branch_1_dataInArray_1 : std_logic_vector (0 downto 0);
	signal branch_1_pValidArray_0 : std_logic;
	signal branch_1_pValidArray_1 : std_logic;
	signal branch_1_readyArray_0 : std_logic;
	signal branch_1_readyArray_1 : std_logic;
	signal branch_1_nReadyArray_0 : std_logic;
	signal branch_1_validArray_0 : std_logic;
	signal branch_1_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal branch_1_nReadyArray_1 : std_logic;
	signal branch_1_validArray_1 : std_logic;
	signal branch_1_dataOutArray_1 : std_logic_vector(0 downto 0);

	signal fork_3_clk : std_logic;
	signal fork_3_rst : std_logic;
	signal fork_3_dataInArray_0 : std_logic_vector(0 downto 0);
	signal fork_3_pValidArray_0 : std_logic;
	signal fork_3_readyArray_0 : std_logic;
	signal fork_3_nReadyArray_0 : std_logic;
	signal fork_3_validArray_0 : std_logic;
	signal fork_3_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal fork_3_nReadyArray_1 : std_logic;
	signal fork_3_validArray_1 : std_logic;
	signal fork_3_dataOutArray_1 : std_logic_vector(0 downto 0);
	signal fork_3_nReadyArray_2 : std_logic;
	signal fork_3_validArray_2 : std_logic;
	signal fork_3_dataOutArray_2 : std_logic_vector(0 downto 0);

	signal start_0_clk : std_logic;
	signal start_0_rst : std_logic;
	signal start_0_dataInArray_0 : std_logic_vector(0 downto 0);
	signal start_0_pValidArray_0 : std_logic;
	signal start_0_readyArray_0 : std_logic;
	signal start_0_nReadyArray_0 : std_logic;
	signal start_0_validArray_0 : std_logic;
	signal start_0_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal forkC_6_clk : std_logic;
	signal forkC_6_rst : std_logic;
	signal forkC_6_dataInArray_0 : std_logic_vector(0 downto 0);
	signal forkC_6_pValidArray_0 : std_logic;
	signal forkC_6_readyArray_0 : std_logic;
	signal forkC_6_nReadyArray_0 : std_logic;
	signal forkC_6_validArray_0 : std_logic;
	signal forkC_6_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal forkC_6_nReadyArray_1 : std_logic;
	signal forkC_6_validArray_1 : std_logic;
	signal forkC_6_dataOutArray_1 : std_logic_vector(0 downto 0);
	signal forkC_6_nReadyArray_2 : std_logic;
	signal forkC_6_validArray_2 : std_logic;
	signal forkC_6_dataOutArray_2 : std_logic_vector(0 downto 0);
	signal forkC_6_nReadyArray_3 : std_logic;
	signal forkC_6_validArray_3 : std_logic;
	signal forkC_6_dataOutArray_3 : std_logic_vector(0 downto 0);

	signal branchC_4_clk : std_logic;
	signal branchC_4_rst : std_logic;
	signal branchC_4_dataInArray_0 : std_logic_vector(0 downto 0);
	signal branchC_4_dataInArray_1 : std_logic_vector (0 downto 0);
	signal branchC_4_pValidArray_0 : std_logic;
	signal branchC_4_pValidArray_1 : std_logic;
	signal branchC_4_readyArray_0 : std_logic;
	signal branchC_4_readyArray_1 : std_logic;
	signal branchC_4_nReadyArray_0 : std_logic;
	signal branchC_4_validArray_0 : std_logic;
	signal branchC_4_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal branchC_4_nReadyArray_1 : std_logic;
	signal branchC_4_validArray_1 : std_logic;
	signal branchC_4_dataOutArray_1 : std_logic_vector(0 downto 0);

	signal phi_1_clk : std_logic;
	signal phi_1_rst : std_logic;
	signal phi_1_dataInArray_0 : std_logic_vector(0 downto 0);
	signal phi_1_dataInArray_1 : std_logic_vector(31 downto 0);
	signal phi_1_dataInArray_2 : std_logic_vector(31 downto 0);
	signal phi_1_pValidArray_0 : std_logic;
	signal phi_1_pValidArray_1 : std_logic;
	signal phi_1_pValidArray_2 : std_logic;
	signal phi_1_readyArray_0 : std_logic;
	signal phi_1_readyArray_1 : std_logic;
	signal phi_1_readyArray_2 : std_logic;
	signal phi_1_nReadyArray_0 : std_logic;
	signal phi_1_validArray_0 : std_logic;
	signal phi_1_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal phi_2_clk : std_logic;
	signal phi_2_rst : std_logic;
	signal phi_2_dataInArray_0 : std_logic_vector(0 downto 0);
	signal phi_2_dataInArray_1 : std_logic_vector(9 downto 0);
	signal phi_2_dataInArray_2 : std_logic_vector(9 downto 0);
	signal phi_2_pValidArray_0 : std_logic;
	signal phi_2_pValidArray_1 : std_logic;
	signal phi_2_pValidArray_2 : std_logic;
	signal phi_2_readyArray_0 : std_logic;
	signal phi_2_readyArray_1 : std_logic;
	signal phi_2_readyArray_2 : std_logic;
	signal phi_2_nReadyArray_0 : std_logic;
	signal phi_2_validArray_0 : std_logic;
	signal phi_2_dataOutArray_0 : std_logic_vector(9 downto 0);

	signal load_5_clk : std_logic;
	signal load_5_rst : std_logic;
	signal load_5_dataInArray_0 : std_logic_vector(31 downto 0);
	signal load_5_dataInArray_1 : std_logic_vector(9 downto 0);
	signal load_5_pValidArray_0 : std_logic;
	signal load_5_pValidArray_1 : std_logic;
	signal load_5_readyArray_0 : std_logic;
	signal load_5_readyArray_1 : std_logic;
	signal load_5_nReadyArray_0 : std_logic;
	signal load_5_validArray_0 : std_logic;
	signal load_5_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal load_5_nReadyArray_1 : std_logic;
	signal load_5_validArray_1 : std_logic;
	signal load_5_dataOutArray_1 : std_logic_vector(9 downto 0);

	signal cst_2_clk : std_logic;
	signal cst_2_rst : std_logic;
	signal cst_2_dataInArray_0 : std_logic_vector(9 downto 0);
	signal cst_2_pValidArray_0 : std_logic;
	signal cst_2_readyArray_0 : std_logic;
	signal cst_2_nReadyArray_0 : std_logic;
	signal cst_2_validArray_0 : std_logic;
	signal cst_2_dataOutArray_0 : std_logic_vector(9 downto 0);

	signal sub_6_clk : std_logic;
	signal sub_6_rst : std_logic;
	signal sub_6_dataInArray_0 : std_logic_vector(31 downto 0);
	signal sub_6_dataInArray_1 : std_logic_vector(31 downto 0);
	signal sub_6_pValidArray_0 : std_logic;
	signal sub_6_pValidArray_1 : std_logic;
	signal sub_6_readyArray_0 : std_logic;
	signal sub_6_readyArray_1 : std_logic;
	signal sub_6_nReadyArray_0 : std_logic;
	signal sub_6_validArray_0 : std_logic;
	signal sub_6_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal load_9_clk : std_logic;
	signal load_9_rst : std_logic;
	signal load_9_dataInArray_0 : std_logic_vector(31 downto 0);
	signal load_9_dataInArray_1 : std_logic_vector(31 downto 0);
	signal load_9_pValidArray_0 : std_logic;
	signal load_9_pValidArray_1 : std_logic;
	signal load_9_readyArray_0 : std_logic;
	signal load_9_readyArray_1 : std_logic;
	signal load_9_nReadyArray_0 : std_logic;
	signal load_9_validArray_0 : std_logic;
	signal load_9_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal load_9_nReadyArray_1 : std_logic;
	signal load_9_validArray_1 : std_logic;
	signal load_9_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal mul_10_clk : std_logic;
	signal mul_10_rst : std_logic;
	signal mul_10_dataInArray_0 : std_logic_vector(31 downto 0);
	signal mul_10_dataInArray_1 : std_logic_vector(31 downto 0);
	signal mul_10_pValidArray_0 : std_logic;
	signal mul_10_pValidArray_1 : std_logic;
	signal mul_10_readyArray_0 : std_logic;
	signal mul_10_readyArray_1 : std_logic;
	signal mul_10_nReadyArray_0 : std_logic;
	signal mul_10_validArray_0 : std_logic;
	signal mul_10_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal add_11_clk : std_logic;
	signal add_11_rst : std_logic;
	signal add_11_dataInArray_0 : std_logic_vector(31 downto 0);
	signal add_11_dataInArray_1 : std_logic_vector(31 downto 0);
	signal add_11_pValidArray_0 : std_logic;
	signal add_11_pValidArray_1 : std_logic;
	signal add_11_readyArray_0 : std_logic;
	signal add_11_readyArray_1 : std_logic;
	signal add_11_nReadyArray_0 : std_logic;
	signal add_11_validArray_0 : std_logic;
	signal add_11_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal cst_3_clk : std_logic;
	signal cst_3_rst : std_logic;
	signal cst_3_dataInArray_0 : std_logic_vector(0 downto 0);
	signal cst_3_pValidArray_0 : std_logic;
	signal cst_3_readyArray_0 : std_logic;
	signal cst_3_nReadyArray_0 : std_logic;
	signal cst_3_validArray_0 : std_logic;
	signal cst_3_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal add_12_clk : std_logic;
	signal add_12_rst : std_logic;
	signal add_12_dataInArray_0 : std_logic_vector(9 downto 0);
	signal add_12_dataInArray_1 : std_logic_vector(9 downto 0);
	signal add_12_pValidArray_0 : std_logic;
	signal add_12_pValidArray_1 : std_logic;
	signal add_12_readyArray_0 : std_logic;
	signal add_12_readyArray_1 : std_logic;
	signal add_12_nReadyArray_0 : std_logic;
	signal add_12_validArray_0 : std_logic;
	signal add_12_dataOutArray_0 : std_logic_vector(9 downto 0);

	signal cst_4_clk : std_logic;
	signal cst_4_rst : std_logic;
	signal cst_4_dataInArray_0 : std_logic_vector(9 downto 0);
	signal cst_4_pValidArray_0 : std_logic;
	signal cst_4_readyArray_0 : std_logic;
	signal cst_4_nReadyArray_0 : std_logic;
	signal cst_4_validArray_0 : std_logic;
	signal cst_4_dataOutArray_0 : std_logic_vector(9 downto 0);

	signal icmp_13_clk : std_logic;
	signal icmp_13_rst : std_logic;
	signal icmp_13_dataInArray_0 : std_logic_vector(9 downto 0);
	signal icmp_13_dataInArray_1 : std_logic_vector(9 downto 0);
	signal icmp_13_pValidArray_0 : std_logic;
	signal icmp_13_pValidArray_1 : std_logic;
	signal icmp_13_readyArray_0 : std_logic;
	signal icmp_13_readyArray_1 : std_logic;
	signal icmp_13_nReadyArray_0 : std_logic;
	signal icmp_13_validArray_0 : std_logic;
	signal icmp_13_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal fork_0_clk : std_logic;
	signal fork_0_rst : std_logic;
	signal fork_0_dataInArray_0 : std_logic_vector(9 downto 0);
	signal fork_0_pValidArray_0 : std_logic;
	signal fork_0_readyArray_0 : std_logic;
	signal fork_0_nReadyArray_0 : std_logic;
	signal fork_0_validArray_0 : std_logic;
	signal fork_0_dataOutArray_0 : std_logic_vector(9 downto 0);
	signal fork_0_nReadyArray_1 : std_logic;
	signal fork_0_validArray_1 : std_logic;
	signal fork_0_dataOutArray_1 : std_logic_vector(9 downto 0);
	signal fork_0_nReadyArray_2 : std_logic;
	signal fork_0_validArray_2 : std_logic;
	signal fork_0_dataOutArray_2 : std_logic_vector(9 downto 0);

	signal fork_2_clk : std_logic;
	signal fork_2_rst : std_logic;
	signal fork_2_dataInArray_0 : std_logic_vector(9 downto 0);
	signal fork_2_pValidArray_0 : std_logic;
	signal fork_2_readyArray_0 : std_logic;
	signal fork_2_nReadyArray_0 : std_logic;
	signal fork_2_validArray_0 : std_logic;
	signal fork_2_dataOutArray_0 : std_logic_vector(9 downto 0);
	signal fork_2_nReadyArray_1 : std_logic;
	signal fork_2_validArray_1 : std_logic;
	signal fork_2_dataOutArray_1 : std_logic_vector(9 downto 0);

	signal branch_2_clk : std_logic;
	signal branch_2_rst : std_logic;
	signal branch_2_dataInArray_0 : std_logic_vector(31 downto 0);
	signal branch_2_dataInArray_1 : std_logic_vector (0 downto 0);
	signal branch_2_pValidArray_0 : std_logic;
	signal branch_2_pValidArray_1 : std_logic;
	signal branch_2_readyArray_0 : std_logic;
	signal branch_2_readyArray_1 : std_logic;
	signal branch_2_nReadyArray_0 : std_logic;
	signal branch_2_validArray_0 : std_logic;
	signal branch_2_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal branch_2_nReadyArray_1 : std_logic;
	signal branch_2_validArray_1 : std_logic;
	signal branch_2_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal branch_3_clk : std_logic;
	signal branch_3_rst : std_logic;
	signal branch_3_dataInArray_0 : std_logic_vector(9 downto 0);
	signal branch_3_dataInArray_1 : std_logic_vector (0 downto 0);
	signal branch_3_pValidArray_0 : std_logic;
	signal branch_3_pValidArray_1 : std_logic;
	signal branch_3_readyArray_0 : std_logic;
	signal branch_3_readyArray_1 : std_logic;
	signal branch_3_nReadyArray_0 : std_logic;
	signal branch_3_validArray_0 : std_logic;
	signal branch_3_dataOutArray_0 : std_logic_vector(9 downto 0);
	signal branch_3_nReadyArray_1 : std_logic;
	signal branch_3_validArray_1 : std_logic;
	signal branch_3_dataOutArray_1 : std_logic_vector(9 downto 0);

	signal fork_4_clk : std_logic;
	signal fork_4_rst : std_logic;
	signal fork_4_dataInArray_0 : std_logic_vector(0 downto 0);
	signal fork_4_pValidArray_0 : std_logic;
	signal fork_4_readyArray_0 : std_logic;
	signal fork_4_nReadyArray_0 : std_logic;
	signal fork_4_validArray_0 : std_logic;
	signal fork_4_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal fork_4_nReadyArray_1 : std_logic;
	signal fork_4_validArray_1 : std_logic;
	signal fork_4_dataOutArray_1 : std_logic_vector(0 downto 0);
	signal fork_4_nReadyArray_2 : std_logic;
	signal fork_4_validArray_2 : std_logic;
	signal fork_4_dataOutArray_2 : std_logic_vector(0 downto 0);

	signal phiC_1_clk : std_logic;
	signal phiC_1_rst : std_logic;
	signal phiC_1_dataInArray_0 : std_logic_vector(0 downto 0);
	signal phiC_1_dataInArray_1 : std_logic_vector(0 downto 0);
	signal phiC_1_pValidArray_0 : std_logic;
	signal phiC_1_pValidArray_1 : std_logic;
	signal phiC_1_readyArray_0 : std_logic;
	signal phiC_1_readyArray_1 : std_logic;
	signal phiC_1_nReadyArray_0 : std_logic;
	signal phiC_1_validArray_0 : std_logic;
	signal phiC_1_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal phiC_1_nReadyArray_1 : std_logic;
	signal phiC_1_validArray_1 : std_logic;
	signal phiC_1_dataOutArray_1 : std_logic_vector(0 downto 0);

	signal branchC_5_clk : std_logic;
	signal branchC_5_rst : std_logic;
	signal branchC_5_dataInArray_0 : std_logic_vector(0 downto 0);
	signal branchC_5_dataInArray_1 : std_logic_vector (0 downto 0);
	signal branchC_5_pValidArray_0 : std_logic;
	signal branchC_5_pValidArray_1 : std_logic;
	signal branchC_5_readyArray_0 : std_logic;
	signal branchC_5_readyArray_1 : std_logic;
	signal branchC_5_nReadyArray_0 : std_logic;
	signal branchC_5_validArray_0 : std_logic;
	signal branchC_5_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal branchC_5_nReadyArray_1 : std_logic;
	signal branchC_5_validArray_1 : std_logic;
	signal branchC_5_dataOutArray_1 : std_logic_vector(0 downto 0);

	signal source_0_clk : std_logic;
	signal source_0_rst : std_logic;
	signal source_0_nReadyArray_0 : std_logic;
	signal source_0_validArray_0 : std_logic;
	signal source_0_dataOutArray_0 : std_logic_vector(9 downto 0);

	signal source_1_clk : std_logic;
	signal source_1_rst : std_logic;
	signal source_1_nReadyArray_0 : std_logic;
	signal source_1_validArray_0 : std_logic;
	signal source_1_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal source_2_clk : std_logic;
	signal source_2_rst : std_logic;
	signal source_2_nReadyArray_0 : std_logic;
	signal source_2_validArray_0 : std_logic;
	signal source_2_dataOutArray_0 : std_logic_vector(9 downto 0);

	signal fork_9_clk : std_logic;
	signal fork_9_rst : std_logic;
	signal fork_9_dataInArray_0 : std_logic_vector(0 downto 0);
	signal fork_9_pValidArray_0 : std_logic;
	signal fork_9_readyArray_0 : std_logic;
	signal fork_9_nReadyArray_0 : std_logic;
	signal fork_9_validArray_0 : std_logic;
	signal fork_9_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal fork_9_nReadyArray_1 : std_logic;
	signal fork_9_validArray_1 : std_logic;
	signal fork_9_dataOutArray_1 : std_logic_vector(0 downto 0);

	signal ret_0_clk : std_logic;
	signal ret_0_rst : std_logic;
	signal ret_0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal ret_0_pValidArray_0 : std_logic;
	signal ret_0_readyArray_0 : std_logic;
	signal ret_0_nReadyArray_0 : std_logic;
	signal ret_0_validArray_0 : std_logic;
	signal ret_0_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal phi_n0_clk : std_logic;
	signal phi_n0_rst : std_logic;
	signal phi_n0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal phi_n0_pValidArray_0 : std_logic;
	signal phi_n0_readyArray_0 : std_logic;
	signal phi_n0_nReadyArray_0 : std_logic;
	signal phi_n0_validArray_0 : std_logic;
	signal phi_n0_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal phiC_2_clk : std_logic;
	signal phiC_2_rst : std_logic;
	signal phiC_2_dataInArray_0 : std_logic_vector(0 downto 0);
	signal phiC_2_pValidArray_0 : std_logic;
	signal phiC_2_readyArray_0 : std_logic;
	signal phiC_2_nReadyArray_0 : std_logic;
	signal phiC_2_validArray_0 : std_logic;
	signal phiC_2_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal MC_idx_clk : std_logic;
	signal MC_idx_rst : std_logic;
	signal MC_idx_dataInArray_0 : std_logic_vector(9 downto 0);
	signal MC_idx_dataInArray_1 : std_logic_vector(31 downto 0);
	signal MC_idx_dataInArray_2 : std_logic_vector(9 downto 0);
	signal MC_idx_dataInArray_3 : std_logic_vector(31 downto 0);
	signal MC_idx_pValidArray_0 : std_logic;
	signal MC_idx_pValidArray_1 : std_logic;
	signal MC_idx_pValidArray_2 : std_logic;
	signal MC_idx_pValidArray_3 : std_logic;
	signal MC_idx_readyArray_0 : std_logic;
	signal MC_idx_readyArray_1 : std_logic;
	signal MC_idx_readyArray_2 : std_logic;
	signal MC_idx_readyArray_3 : std_logic;
	signal MC_idx_nReadyArray_0 : std_logic;
	signal MC_idx_validArray_0 : std_logic;
	signal MC_idx_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal MC_idx_nReadyArray_1 : std_logic;
	signal MC_idx_validArray_1 : std_logic;
	signal MC_idx_dataOutArray_1 : std_logic_vector(0 downto 0);
	signal MC_idx_we0_ce0 : std_logic;

	signal MC_d_i_clk : std_logic;
	signal MC_d_i_rst : std_logic;
	signal MC_d_i_dataInArray_0 : std_logic_vector(31 downto 0);
	signal MC_d_i_dataInArray_1 : std_logic_vector(31 downto 0);
	signal MC_d_i_dataInArray_2 : std_logic_vector(31 downto 0);
	signal MC_d_i_dataInArray_3 : std_logic_vector(31 downto 0);
	signal MC_d_i_pValidArray_0 : std_logic;
	signal MC_d_i_pValidArray_1 : std_logic;
	signal MC_d_i_pValidArray_2 : std_logic;
	signal MC_d_i_pValidArray_3 : std_logic;
	signal MC_d_i_readyArray_0 : std_logic;
	signal MC_d_i_readyArray_1 : std_logic;
	signal MC_d_i_readyArray_2 : std_logic;
	signal MC_d_i_readyArray_3 : std_logic;
	signal MC_d_i_nReadyArray_0 : std_logic;
	signal MC_d_i_validArray_0 : std_logic;
	signal MC_d_i_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal MC_d_i_nReadyArray_1 : std_logic;
	signal MC_d_i_validArray_1 : std_logic;
	signal MC_d_i_dataOutArray_1 : std_logic_vector(0 downto 0);
	signal MC_d_i_we0_ce0 : std_logic;

	signal end_0_clk : std_logic;
	signal end_0_rst : std_logic;
	signal end_0_dataInArray_0 : std_logic_vector(0 downto 0);
	signal end_0_dataInArray_1 : std_logic_vector(0 downto 0);
	signal end_0_dataInArray_2 : std_logic_vector(31 downto 0);
	signal end_0_pValidArray_0 : std_logic;
	signal end_0_pValidArray_1 : std_logic;
	signal end_0_pValidArray_2 : std_logic;
	signal end_0_readyArray_0 : std_logic;
	signal end_0_readyArray_1 : std_logic;
	signal end_0_readyArray_2 : std_logic;
	signal end_0_nReadyArray_0 : std_logic;
	signal end_0_validArray_0 : std_logic;
	signal end_0_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal end_0_validArray_1 :  std_logic;
	signal end_0_dataOutArray_1 :  std_logic_vector (31 downto 0);
	signal end_0_nReadyArray_1 :  std_logic;

	signal sink_0_clk : std_logic;
	signal sink_0_rst : std_logic;
	signal sink_0_dataInArray_0 : std_logic_vector(0 downto 0);
	signal sink_0_pValidArray_0 : std_logic;
	signal sink_0_readyArray_0 : std_logic;

	signal sink_1_clk : std_logic;
	signal sink_1_rst : std_logic;
	signal sink_1_dataInArray_0 : std_logic_vector(0 downto 0);
	signal sink_1_pValidArray_0 : std_logic;
	signal sink_1_readyArray_0 : std_logic;

	signal sink_2_clk : std_logic;
	signal sink_2_rst : std_logic;
	signal sink_2_dataInArray_0 : std_logic_vector(0 downto 0);
	signal sink_2_pValidArray_0 : std_logic;
	signal sink_2_readyArray_0 : std_logic;

	signal sink_3_clk : std_logic;
	signal sink_3_rst : std_logic;
	signal sink_3_dataInArray_0 : std_logic_vector(9 downto 0);
	signal sink_3_pValidArray_0 : std_logic;
	signal sink_3_readyArray_0 : std_logic;

	signal sink_4_clk : std_logic;
	signal sink_4_rst : std_logic;
	signal sink_4_dataInArray_0 : std_logic_vector(0 downto 0);
	signal sink_4_pValidArray_0 : std_logic;
	signal sink_4_readyArray_0 : std_logic;

begin


	brCst_block1_clk <= clk;
	brCst_block1_rst <= rst;
	fork_3_pValidArray_0 <= brCst_block1_validArray_0;
	brCst_block1_nReadyArray_0 <= fork_3_readyArray_0;
	fork_3_dataInArray_0 <= std_logic_vector (resize(unsigned(brCst_block1_dataOutArray_0),fork_3_dataInArray_0'length));

	cst_0_clk <= clk;
	cst_0_rst <= rst;
	branch_0_pValidArray_0 <= cst_0_validArray_0;
	cst_0_nReadyArray_0 <= branch_0_readyArray_0;
	branch_0_dataInArray_0 <= std_logic_vector (resize(unsigned(cst_0_dataOutArray_0),branch_0_dataInArray_0'length));

	cst_1_clk <= clk;
	cst_1_rst <= rst;
	branch_1_pValidArray_0 <= cst_1_validArray_0;
	cst_1_nReadyArray_0 <= branch_1_readyArray_0;
	branch_1_dataInArray_0 <= std_logic_vector (resize(unsigned(cst_1_dataOutArray_0),branch_1_dataInArray_0'length));

	branch_0_clk <= clk;
	branch_0_rst <= rst;
	phi_1_pValidArray_1 <= branch_0_validArray_0;
	branch_0_nReadyArray_0 <= phi_1_readyArray_1;
	phi_1_dataInArray_1 <= std_logic_vector (resize(unsigned(branch_0_dataOutArray_0),phi_1_dataInArray_1'length));
	sink_1_pValidArray_0 <= branch_0_validArray_1;
	branch_0_nReadyArray_1 <= sink_1_readyArray_0;
	sink_1_dataInArray_0 <= std_logic_vector (resize(unsigned(branch_0_dataOutArray_1),sink_1_dataInArray_0'length));

	branch_1_clk <= clk;
	branch_1_rst <= rst;
	phi_2_pValidArray_1 <= branch_1_validArray_0;
	branch_1_nReadyArray_0 <= phi_2_readyArray_1;
	phi_2_dataInArray_1 <= std_logic_vector (resize(unsigned(branch_1_dataOutArray_0),phi_2_dataInArray_1'length));
	sink_2_pValidArray_0 <= branch_1_validArray_1;
	branch_1_nReadyArray_1 <= sink_2_readyArray_0;
	sink_2_dataInArray_0 <= std_logic_vector (resize(unsigned(branch_1_dataOutArray_1),sink_2_dataInArray_0'length));

	fork_3_clk <= clk;
	fork_3_rst <= rst;
	branch_1_pValidArray_1 <= fork_3_validArray_0;
	fork_3_nReadyArray_0 <= branch_1_readyArray_1;
	branch_1_dataInArray_1 <= std_logic_vector (resize(unsigned(fork_3_dataOutArray_0),branch_1_dataInArray_1'length));
	branch_0_pValidArray_1 <= fork_3_validArray_1;
	fork_3_nReadyArray_1 <= branch_0_readyArray_1;
	branch_0_dataInArray_1 <= std_logic_vector (resize(unsigned(fork_3_dataOutArray_1),branch_0_dataInArray_1'length));
	branchC_4_pValidArray_1 <= fork_3_validArray_2;
	fork_3_nReadyArray_2 <= branchC_4_readyArray_1;
	branchC_4_dataInArray_1 <= std_logic_vector (resize(unsigned(fork_3_dataOutArray_2),branchC_4_dataInArray_1'length));

	start_0_clk <= clk;
	start_0_rst <= rst;
	start_0_pValidArray_0 <= start_valid;
	start_ready <= start_0_readyArray_0;
	forkC_6_pValidArray_0 <= start_0_validArray_0;
	start_0_nReadyArray_0 <= forkC_6_readyArray_0;
	forkC_6_dataInArray_0 <= std_logic_vector (resize(unsigned(start_0_dataOutArray_0),forkC_6_dataInArray_0'length));

	forkC_6_clk <= clk;
	forkC_6_rst <= rst;
	cst_0_pValidArray_0 <= forkC_6_validArray_0;
	forkC_6_nReadyArray_0 <= cst_0_readyArray_0;
	cst_0_dataInArray_0 <= "0";
	cst_1_pValidArray_0 <= forkC_6_validArray_1;
	forkC_6_nReadyArray_1 <= cst_1_readyArray_0;
	cst_1_dataInArray_0 <= "0";
	branchC_4_pValidArray_0 <= forkC_6_validArray_2;
	forkC_6_nReadyArray_2 <= branchC_4_readyArray_0;
	branchC_4_dataInArray_0 <= std_logic_vector (resize(unsigned(forkC_6_dataOutArray_2),branchC_4_dataInArray_0'length));
	brCst_block1_pValidArray_0 <= forkC_6_validArray_3;
	forkC_6_nReadyArray_3 <= brCst_block1_readyArray_0;
	brCst_block1_dataInArray_0 <= "1";

	branchC_4_clk <= clk;
	branchC_4_rst <= rst;
	phiC_1_pValidArray_0 <= branchC_4_validArray_0;
	branchC_4_nReadyArray_0 <= phiC_1_readyArray_0;
	phiC_1_dataInArray_0 <= std_logic_vector (resize(unsigned(branchC_4_dataOutArray_0),phiC_1_dataInArray_0'length));
	sink_4_pValidArray_0 <= branchC_4_validArray_1;
	branchC_4_nReadyArray_1 <= sink_4_readyArray_0;
	sink_4_dataInArray_0 <= std_logic_vector (resize(unsigned(branchC_4_dataOutArray_1),sink_4_dataInArray_0'length));

	phi_1_clk <= clk;
	phi_1_rst <= rst;
	add_11_pValidArray_0 <= phi_1_validArray_0;
	phi_1_nReadyArray_0 <= add_11_readyArray_0;
	add_11_dataInArray_0 <= std_logic_vector (resize(unsigned(phi_1_dataOutArray_0),add_11_dataInArray_0'length));

	phi_2_clk <= clk;
	phi_2_rst <= rst;
	fork_0_pValidArray_0 <= phi_2_validArray_0;
	phi_2_nReadyArray_0 <= fork_0_readyArray_0;
	fork_0_dataInArray_0 <= std_logic_vector (resize(unsigned(phi_2_dataOutArray_0),fork_0_dataInArray_0'length));

	load_5_clk <= clk;
	load_5_rst <= rst;
	mul_10_pValidArray_0 <= load_5_validArray_0;
	load_5_nReadyArray_0 <= mul_10_readyArray_0;
	mul_10_dataInArray_0 <= std_logic_vector (resize(unsigned(load_5_dataOutArray_0),mul_10_dataInArray_0'length));
	MC_idx_pValidArray_0 <= load_5_validArray_1;
	load_5_nReadyArray_1 <= MC_idx_readyArray_0;
	MC_idx_dataInArray_0 <= std_logic_vector (resize(unsigned(load_5_dataOutArray_1),MC_idx_dataInArray_0'length));

	cst_2_clk <= clk;
	cst_2_rst <= rst;
	sub_6_pValidArray_0 <= cst_2_validArray_0;
	cst_2_nReadyArray_0 <= sub_6_readyArray_0;
	sub_6_dataInArray_0 <= std_logic_vector (resize(unsigned(cst_2_dataOutArray_0),sub_6_dataInArray_0'length));

	sub_6_clk <= clk;
	sub_6_rst <= rst;
	load_9_pValidArray_1 <= sub_6_validArray_0;
	sub_6_nReadyArray_0 <= load_9_readyArray_1;
	load_9_dataInArray_1 <= std_logic_vector (resize(unsigned(sub_6_dataOutArray_0),load_9_dataInArray_1'length));

	load_9_clk <= clk;
	load_9_rst <= rst;
	mul_10_pValidArray_1 <= load_9_validArray_0;
	load_9_nReadyArray_0 <= mul_10_readyArray_1;
	mul_10_dataInArray_1 <= std_logic_vector (resize(unsigned(load_9_dataOutArray_0),mul_10_dataInArray_1'length));
	MC_d_i_pValidArray_0 <= load_9_validArray_1;
	load_9_nReadyArray_1 <= MC_d_i_readyArray_0;
	MC_d_i_dataInArray_0 <= std_logic_vector (resize(unsigned(load_9_dataOutArray_1),MC_d_i_dataInArray_0'length));

	mul_10_clk <= clk;
	mul_10_rst <= rst;
	add_11_pValidArray_1 <= mul_10_validArray_0;
	mul_10_nReadyArray_0 <= add_11_readyArray_1;
	add_11_dataInArray_1 <= std_logic_vector (resize(unsigned(mul_10_dataOutArray_0),add_11_dataInArray_1'length));

	add_11_clk <= clk;
	add_11_rst <= rst;
	branch_2_pValidArray_0 <= add_11_validArray_0;
	add_11_nReadyArray_0 <= branch_2_readyArray_0;
	branch_2_dataInArray_0 <= std_logic_vector (resize(unsigned(add_11_dataOutArray_0),branch_2_dataInArray_0'length));

	cst_3_clk <= clk;
	cst_3_rst <= rst;
	add_12_pValidArray_1 <= cst_3_validArray_0;
	cst_3_nReadyArray_0 <= add_12_readyArray_1;
	add_12_dataInArray_1 <= std_logic_vector (resize(unsigned(cst_3_dataOutArray_0),add_12_dataInArray_1'length));

	add_12_clk <= clk;
	add_12_rst <= rst;
	fork_2_pValidArray_0 <= add_12_validArray_0;
	add_12_nReadyArray_0 <= fork_2_readyArray_0;
	fork_2_dataInArray_0 <= std_logic_vector (resize(unsigned(add_12_dataOutArray_0),fork_2_dataInArray_0'length));

	cst_4_clk <= clk;
	cst_4_rst <= rst;
	icmp_13_pValidArray_1 <= cst_4_validArray_0;
	cst_4_nReadyArray_0 <= icmp_13_readyArray_1;
	icmp_13_dataInArray_1 <= std_logic_vector (resize(unsigned(cst_4_dataOutArray_0),icmp_13_dataInArray_1'length));

	icmp_13_clk <= clk;
	icmp_13_rst <= rst;
	fork_4_pValidArray_0 <= icmp_13_validArray_0;
	icmp_13_nReadyArray_0 <= fork_4_readyArray_0;
	fork_4_dataInArray_0 <= std_logic_vector (resize(unsigned(icmp_13_dataOutArray_0),fork_4_dataInArray_0'length));

	fork_0_clk <= clk;
	fork_0_rst <= rst;
	sub_6_pValidArray_1 <= fork_0_validArray_0;
	fork_0_nReadyArray_0 <= sub_6_readyArray_1;
	sub_6_dataInArray_1 <= std_logic_vector (resize(unsigned(fork_0_dataOutArray_0),sub_6_dataInArray_1'length));
	add_12_pValidArray_0 <= fork_0_validArray_1;
	fork_0_nReadyArray_1 <= add_12_readyArray_0;
	add_12_dataInArray_0 <= std_logic_vector (resize(unsigned(fork_0_dataOutArray_1),add_12_dataInArray_0'length));
	load_5_pValidArray_1 <= fork_0_validArray_2;
	fork_0_nReadyArray_2 <= load_5_readyArray_1;
	load_5_dataInArray_1 <= std_logic_vector (resize(unsigned(fork_0_dataOutArray_2),load_5_dataInArray_1'length));

	fork_2_clk <= clk;
	fork_2_rst <= rst;
	icmp_13_pValidArray_0 <= fork_2_validArray_0;
	fork_2_nReadyArray_0 <= icmp_13_readyArray_0;
	icmp_13_dataInArray_0 <= std_logic_vector (resize(unsigned(fork_2_dataOutArray_0),icmp_13_dataInArray_0'length));
	branch_3_pValidArray_0 <= fork_2_validArray_1;
	fork_2_nReadyArray_1 <= branch_3_readyArray_0;
	branch_3_dataInArray_0 <= std_logic_vector (resize(unsigned(fork_2_dataOutArray_1),branch_3_dataInArray_0'length));

	branch_2_clk <= clk;
	branch_2_rst <= rst;
	phi_1_pValidArray_2 <= branch_2_validArray_0;
	branch_2_nReadyArray_0 <= phi_1_readyArray_2;
	phi_1_dataInArray_2 <= std_logic_vector (resize(unsigned(branch_2_dataOutArray_0),phi_1_dataInArray_2'length));
	phi_n0_pValidArray_0 <= branch_2_validArray_1;
	branch_2_nReadyArray_1 <= phi_n0_readyArray_0;
	phi_n0_dataInArray_0 <= std_logic_vector (resize(unsigned(branch_2_dataOutArray_1),phi_n0_dataInArray_0'length));

	branch_3_clk <= clk;
	branch_3_rst <= rst;
	phi_2_pValidArray_2 <= branch_3_validArray_0;
	branch_3_nReadyArray_0 <= phi_2_readyArray_2;
	phi_2_dataInArray_2 <= std_logic_vector (resize(unsigned(branch_3_dataOutArray_0),phi_2_dataInArray_2'length));
	sink_3_pValidArray_0 <= branch_3_validArray_1;
	branch_3_nReadyArray_1 <= sink_3_readyArray_0;
	sink_3_dataInArray_0 <= std_logic_vector (resize(unsigned(branch_3_dataOutArray_1),sink_3_dataInArray_0'length));

	fork_4_clk <= clk;
	fork_4_rst <= rst;
	branch_3_pValidArray_1 <= fork_4_validArray_0;
	fork_4_nReadyArray_0 <= branch_3_readyArray_1;
	branch_3_dataInArray_1 <= std_logic_vector (resize(unsigned(fork_4_dataOutArray_0),branch_3_dataInArray_1'length));
	branch_2_pValidArray_1 <= fork_4_validArray_1;
	fork_4_nReadyArray_1 <= branch_2_readyArray_1;
	branch_2_dataInArray_1 <= std_logic_vector (resize(unsigned(fork_4_dataOutArray_1),branch_2_dataInArray_1'length));
	branchC_5_pValidArray_1 <= fork_4_validArray_2;
	fork_4_nReadyArray_2 <= branchC_5_readyArray_1;
	branchC_5_dataInArray_1 <= std_logic_vector (resize(unsigned(fork_4_dataOutArray_2),branchC_5_dataInArray_1'length));

	phiC_1_clk <= clk;
	phiC_1_rst <= rst;
	branchC_5_pValidArray_0 <= phiC_1_validArray_0;
	phiC_1_nReadyArray_0 <= branchC_5_readyArray_0;
	branchC_5_dataInArray_0 <= std_logic_vector (resize(unsigned(phiC_1_dataOutArray_0),branchC_5_dataInArray_0'length));
	fork_9_pValidArray_0 <= phiC_1_validArray_1;
	phiC_1_nReadyArray_1 <= fork_9_readyArray_0;
	fork_9_dataInArray_0 <= std_logic_vector (resize(unsigned(phiC_1_dataOutArray_1),fork_9_dataInArray_0'length));

	branchC_5_clk <= clk;
	branchC_5_rst <= rst;
	phiC_1_pValidArray_1 <= branchC_5_validArray_0;
	branchC_5_nReadyArray_0 <= phiC_1_readyArray_1;
	phiC_1_dataInArray_1 <= std_logic_vector (resize(unsigned(branchC_5_dataOutArray_0),phiC_1_dataInArray_1'length));
	phiC_2_pValidArray_0 <= branchC_5_validArray_1;
	branchC_5_nReadyArray_1 <= phiC_2_readyArray_0;
	phiC_2_dataInArray_0 <= std_logic_vector (resize(unsigned(branchC_5_dataOutArray_1),phiC_2_dataInArray_0'length));

	source_0_clk <= clk;
	source_0_rst <= rst;
	cst_2_pValidArray_0 <= source_0_validArray_0;
	source_0_nReadyArray_0 <= cst_2_readyArray_0;
	cst_2_dataInArray_0 <= "1111100111";

	source_1_clk <= clk;
	source_1_rst <= rst;
	cst_3_pValidArray_0 <= source_1_validArray_0;
	source_1_nReadyArray_0 <= cst_3_readyArray_0;
	cst_3_dataInArray_0 <= "1";

	source_2_clk <= clk;
	source_2_rst <= rst;
	cst_4_pValidArray_0 <= source_2_validArray_0;
	source_2_nReadyArray_0 <= cst_4_readyArray_0;
	cst_4_dataInArray_0 <= "1111101000";

	fork_9_clk <= clk;
	fork_9_rst <= rst;
	phi_1_pValidArray_0 <= fork_9_validArray_0;
	fork_9_nReadyArray_0 <= phi_1_readyArray_0;
	phi_1_dataInArray_0 <= std_logic_vector (resize(unsigned(fork_9_dataOutArray_0),phi_1_dataInArray_0'length));
	phi_2_pValidArray_0 <= fork_9_validArray_1;
	fork_9_nReadyArray_1 <= phi_2_readyArray_0;
	phi_2_dataInArray_0 <= std_logic_vector (resize(unsigned(fork_9_dataOutArray_1),phi_2_dataInArray_0'length));

	ret_0_clk <= clk;
	ret_0_rst <= rst;
	end_0_pValidArray_2 <= ret_0_validArray_0;
	ret_0_nReadyArray_0 <= end_0_readyArray_2;
	end_0_dataInArray_2 <= std_logic_vector (resize(unsigned(ret_0_dataOutArray_0),end_0_dataInArray_2'length));

	phi_n0_clk <= clk;
	phi_n0_rst <= rst;
	ret_0_pValidArray_0 <= phi_n0_validArray_0;
	phi_n0_nReadyArray_0 <= ret_0_readyArray_0;
	ret_0_dataInArray_0 <= std_logic_vector (resize(unsigned(phi_n0_dataOutArray_0),ret_0_dataInArray_0'length));

	phiC_2_clk <= clk;
	phiC_2_rst <= rst;
	sink_0_pValidArray_0 <= phiC_2_validArray_0;
	phiC_2_nReadyArray_0 <= sink_0_readyArray_0;
	sink_0_dataInArray_0 <= std_logic_vector (resize(unsigned(phiC_2_dataOutArray_0),sink_0_dataInArray_0'length));

	MC_idx_clk <= clk;
	MC_idx_rst <= rst;
	idx_ce0 <= MC_idx_we0_ce0;
	idx_we0 <= MC_idx_we0_ce0;
	load_5_pValidArray_0 <= MC_idx_validArray_0;
	MC_idx_nReadyArray_0 <= load_5_readyArray_0;
	load_5_dataInArray_0 <= std_logic_vector (resize(unsigned(MC_idx_dataOutArray_0),load_5_dataInArray_0'length));
	end_0_pValidArray_0 <= MC_idx_validArray_1;
	MC_idx_nReadyArray_1 <= end_0_readyArray_0;
	end_0_dataInArray_0 <= std_logic_vector (resize(unsigned(MC_idx_dataOutArray_1),end_0_dataInArray_0'length));

	MC_d_i_clk <= clk;
	MC_d_i_rst <= rst;
	d_i_ce0 <= MC_d_i_we0_ce0;
	d_i_we0 <= MC_d_i_we0_ce0;
	load_9_pValidArray_0 <= MC_d_i_validArray_0;
	MC_d_i_nReadyArray_0 <= load_9_readyArray_0;
	load_9_dataInArray_0 <= std_logic_vector (resize(unsigned(MC_d_i_dataOutArray_0),load_9_dataInArray_0'length));
	end_0_pValidArray_1 <= MC_d_i_validArray_1;
	MC_d_i_nReadyArray_1 <= end_0_readyArray_1;
	end_0_dataInArray_1 <= std_logic_vector (resize(unsigned(MC_d_i_dataOutArray_1),end_0_dataInArray_1'length));

	end_0_clk <= clk;
	end_0_rst <= rst;
	end_valid <= end_0_validArray_0;
	end_out <= end_0_dataOutArray_0;
	end_0_nReadyArray_0 <= end_ready;

	sink_0_clk <= clk;
	sink_0_rst <= rst;

	sink_1_clk <= clk;
	sink_1_rst <= rst;

	sink_2_clk <= clk;
	sink_2_rst <= rst;

	sink_3_clk <= clk;
	sink_3_rst <= rst;

	sink_4_clk <= clk;
	sink_4_rst <= rst;

brCst_block1: entity work.Const(arch) generic map (1,1,1,1)
port map (
	clk => brCst_block1_clk,
	rst => brCst_block1_rst,
	dataInArray(0) => brCst_block1_dataInArray_0,
	pValidArray(0) => brCst_block1_pValidArray_0,
	readyArray(0) => brCst_block1_readyArray_0,
	nReadyArray(0) => brCst_block1_nReadyArray_0,
	validArray(0) => brCst_block1_validArray_0,
	dataOutArray(0) => brCst_block1_dataOutArray_0
);

cst_0: entity work.Const(arch) generic map (1,1,1,1)
port map (
	clk => cst_0_clk,
	rst => cst_0_rst,
	dataInArray(0) => cst_0_dataInArray_0,
	pValidArray(0) => cst_0_pValidArray_0,
	readyArray(0) => cst_0_readyArray_0,
	nReadyArray(0) => cst_0_nReadyArray_0,
	validArray(0) => cst_0_validArray_0,
	dataOutArray(0) => cst_0_dataOutArray_0
);

cst_1: entity work.Const(arch) generic map (1,1,1,1)
port map (
	clk => cst_1_clk,
	rst => cst_1_rst,
	dataInArray(0) => cst_1_dataInArray_0,
	pValidArray(0) => cst_1_pValidArray_0,
	readyArray(0) => cst_1_readyArray_0,
	nReadyArray(0) => cst_1_nReadyArray_0,
	validArray(0) => cst_1_validArray_0,
	dataOutArray(0) => cst_1_dataOutArray_0
);

branch_0: entity work.Branch(arch) generic map (2,2,1,1)
port map (
	clk => branch_0_clk,
	rst => branch_0_rst,
	dataInArray(0) => branch_0_dataInArray_0,
	Condition(0) => branch_0_dataInArray_1,
	pValidArray(0) => branch_0_pValidArray_0,
	pValidArray(1) => branch_0_pValidArray_1,
	readyArray(0) => branch_0_readyArray_0,
	readyArray(1) => branch_0_readyArray_1,
	nReadyArray(0) => branch_0_nReadyArray_0,
	nReadyArray(1) => branch_0_nReadyArray_1,
	validArray(0) => branch_0_validArray_0,
	validArray(1) => branch_0_validArray_1,
	dataOutArray(0) => branch_0_dataOutArray_0,
	dataOutArray(1) => branch_0_dataOutArray_1
);

branch_1: entity work.Branch(arch) generic map (2,2,1,1)
port map (
	clk => branch_1_clk,
	rst => branch_1_rst,
	dataInArray(0) => branch_1_dataInArray_0,
	Condition(0) => branch_1_dataInArray_1,
	pValidArray(0) => branch_1_pValidArray_0,
	pValidArray(1) => branch_1_pValidArray_1,
	readyArray(0) => branch_1_readyArray_0,
	readyArray(1) => branch_1_readyArray_1,
	nReadyArray(0) => branch_1_nReadyArray_0,
	nReadyArray(1) => branch_1_nReadyArray_1,
	validArray(0) => branch_1_validArray_0,
	validArray(1) => branch_1_validArray_1,
	dataOutArray(0) => branch_1_dataOutArray_0,
	dataOutArray(1) => branch_1_dataOutArray_1
);

fork_3: entity work.fork(arch) generic map (1,3,1,1)
port map (
	clk => fork_3_clk,
	rst => fork_3_rst,
	dataInArray(0) => fork_3_dataInArray_0,
	pValidArray(0) => fork_3_pValidArray_0,
	readyArray(0) => fork_3_readyArray_0,
	nReadyArray(0) => fork_3_nReadyArray_0,
	nReadyArray(1) => fork_3_nReadyArray_1,
	nReadyArray(2) => fork_3_nReadyArray_2,
	validArray(0) => fork_3_validArray_0,
	validArray(1) => fork_3_validArray_1,
	validArray(2) => fork_3_validArray_2,
	dataOutArray(0) => fork_3_dataOutArray_0,
	dataOutArray(1) => fork_3_dataOutArray_1,
	dataOutArray(2) => fork_3_dataOutArray_2
);

start_0: entity work.start_node(arch) generic map (1,1,1,1)
port map (
	clk => start_0_clk,
	rst => start_0_rst,
	dataInArray(0) => start_0_dataInArray_0,
	pValidArray(0) => start_0_pValidArray_0,
	readyArray(0) => start_0_readyArray_0,
	nReadyArray(0) => start_0_nReadyArray_0,
	validArray(0) => start_0_validArray_0,
	dataOutArray(0) => start_0_dataOutArray_0
);

forkC_6: entity work.fork(arch) generic map (1,4,1,1)
port map (
	clk => forkC_6_clk,
	rst => forkC_6_rst,
	dataInArray(0) => forkC_6_dataInArray_0,
	pValidArray(0) => forkC_6_pValidArray_0,
	readyArray(0) => forkC_6_readyArray_0,
	nReadyArray(0) => forkC_6_nReadyArray_0,
	nReadyArray(1) => forkC_6_nReadyArray_1,
	nReadyArray(2) => forkC_6_nReadyArray_2,
	nReadyArray(3) => forkC_6_nReadyArray_3,
	validArray(0) => forkC_6_validArray_0,
	validArray(1) => forkC_6_validArray_1,
	validArray(2) => forkC_6_validArray_2,
	validArray(3) => forkC_6_validArray_3,
	dataOutArray(0) => forkC_6_dataOutArray_0,
	dataOutArray(1) => forkC_6_dataOutArray_1,
	dataOutArray(2) => forkC_6_dataOutArray_2,
	dataOutArray(3) => forkC_6_dataOutArray_3
);

branchC_4: entity work.Branch(arch) generic map (2,2,1,1)
port map (
	clk => branchC_4_clk,
	rst => branchC_4_rst,
	dataInArray(0) => branchC_4_dataInArray_0,
	Condition(0) => branchC_4_dataInArray_1,
	pValidArray(0) => branchC_4_pValidArray_0,
	pValidArray(1) => branchC_4_pValidArray_1,
	readyArray(0) => branchC_4_readyArray_0,
	readyArray(1) => branchC_4_readyArray_1,
	nReadyArray(0) => branchC_4_nReadyArray_0,
	nReadyArray(1) => branchC_4_nReadyArray_1,
	validArray(0) => branchC_4_validArray_0,
	validArray(1) => branchC_4_validArray_1,
	dataOutArray(0) => branchC_4_dataOutArray_0,
	dataOutArray(1) => branchC_4_dataOutArray_1
);

phi_1: entity work.Mux(arch) generic map (3,1,32,32,1)
port map (
	clk => phi_1_clk,
	rst => phi_1_rst,
	Condition(0) => phi_1_dataInArray_0,
	dataInArray(0) => phi_1_dataInArray_1,
	dataInArray(1) => phi_1_dataInArray_2,
	pValidArray(0) => phi_1_pValidArray_0,
	pValidArray(1) => phi_1_pValidArray_1,
	pValidArray(2) => phi_1_pValidArray_2,
	readyArray(0) => phi_1_readyArray_0,
	readyArray(1) => phi_1_readyArray_1,
	readyArray(2) => phi_1_readyArray_2,
	nReadyArray(0) => phi_1_nReadyArray_0,
	validArray(0) => phi_1_validArray_0,
	dataOutArray(0) => phi_1_dataOutArray_0
);

phi_2: entity work.Mux(arch) generic map (3,1,10,10,1)
port map (
	clk => phi_2_clk,
	rst => phi_2_rst,
	Condition(0) => phi_2_dataInArray_0,
	dataInArray(0) => phi_2_dataInArray_1,
	dataInArray(1) => phi_2_dataInArray_2,
	pValidArray(0) => phi_2_pValidArray_0,
	pValidArray(1) => phi_2_pValidArray_1,
	pValidArray(2) => phi_2_pValidArray_2,
	readyArray(0) => phi_2_readyArray_0,
	readyArray(1) => phi_2_readyArray_1,
	readyArray(2) => phi_2_readyArray_2,
	nReadyArray(0) => phi_2_nReadyArray_0,
	validArray(0) => phi_2_validArray_0,
	dataOutArray(0) => phi_2_dataOutArray_0
);

load_5: entity work.mc_load_op(arch) generic map (2,2,10,32)
port map (
	clk => load_5_clk,
	rst => load_5_rst,
	dataInArray(0) => load_5_dataInArray_0,
	input_addr => load_5_dataInArray_1,
	pValidArray(0) => load_5_pValidArray_0,
	pValidArray(1) => load_5_pValidArray_1,
	readyArray(0) => load_5_readyArray_0,
	readyArray(1) => load_5_readyArray_1,
	nReadyArray(0) => load_5_nReadyArray_0,
	nReadyArray(1) => load_5_nReadyArray_1,
	validArray(0) => load_5_validArray_0,
	validArray(1) => load_5_validArray_1,
	dataOutArray(0) => load_5_dataOutArray_0,
	output_addr => load_5_dataOutArray_1
);

cst_2: entity work.Const(arch) generic map (1,1,10,10)
port map (
	clk => cst_2_clk,
	rst => cst_2_rst,
	dataInArray(0) => cst_2_dataInArray_0,
	pValidArray(0) => cst_2_pValidArray_0,
	readyArray(0) => cst_2_readyArray_0,
	nReadyArray(0) => cst_2_nReadyArray_0,
	validArray(0) => cst_2_validArray_0,
	dataOutArray(0) => cst_2_dataOutArray_0
);

sub_6: entity work.sub_op(arch) generic map (2,1,32,32)
port map (
	clk => sub_6_clk,
	rst => sub_6_rst,
	dataInArray(0) => sub_6_dataInArray_0,
	dataInArray(1) => sub_6_dataInArray_1,
	pValidArray(0) => sub_6_pValidArray_0,
	pValidArray(1) => sub_6_pValidArray_1,
	readyArray(0) => sub_6_readyArray_0,
	readyArray(1) => sub_6_readyArray_1,
	nReadyArray(0) => sub_6_nReadyArray_0,
	validArray(0) => sub_6_validArray_0,
	dataOutArray(0) => sub_6_dataOutArray_0
);

load_9: entity work.mc_load_op(arch) generic map (2,2,32,32)
port map (
	clk => load_9_clk,
	rst => load_9_rst,
	dataInArray(0) => load_9_dataInArray_0,
	input_addr => load_9_dataInArray_1,
	pValidArray(0) => load_9_pValidArray_0,
	pValidArray(1) => load_9_pValidArray_1,
	readyArray(0) => load_9_readyArray_0,
	readyArray(1) => load_9_readyArray_1,
	nReadyArray(0) => load_9_nReadyArray_0,
	nReadyArray(1) => load_9_nReadyArray_1,
	validArray(0) => load_9_validArray_0,
	validArray(1) => load_9_validArray_1,
	dataOutArray(0) => load_9_dataOutArray_0,
	output_addr => load_9_dataOutArray_1
);

mul_10: entity work.mul_op(arch) generic map (2,1,32,32)
port map (
	clk => mul_10_clk,
	rst => mul_10_rst,
	dataInArray(0) => mul_10_dataInArray_0,
	dataInArray(1) => mul_10_dataInArray_1,
	pValidArray(0) => mul_10_pValidArray_0,
	pValidArray(1) => mul_10_pValidArray_1,
	readyArray(0) => mul_10_readyArray_0,
	readyArray(1) => mul_10_readyArray_1,
	nReadyArray(0) => mul_10_nReadyArray_0,
	validArray(0) => mul_10_validArray_0,
	dataOutArray(0) => mul_10_dataOutArray_0
);

add_11: entity work.add_op(arch) generic map (2,1,32,32)
port map (
	clk => add_11_clk,
	rst => add_11_rst,
	dataInArray(0) => add_11_dataInArray_0,
	dataInArray(1) => add_11_dataInArray_1,
	pValidArray(0) => add_11_pValidArray_0,
	pValidArray(1) => add_11_pValidArray_1,
	readyArray(0) => add_11_readyArray_0,
	readyArray(1) => add_11_readyArray_1,
	nReadyArray(0) => add_11_nReadyArray_0,
	validArray(0) => add_11_validArray_0,
	dataOutArray(0) => add_11_dataOutArray_0
);

cst_3: entity work.Const(arch) generic map (1,1,1,1)
port map (
	clk => cst_3_clk,
	rst => cst_3_rst,
	dataInArray(0) => cst_3_dataInArray_0,
	pValidArray(0) => cst_3_pValidArray_0,
	readyArray(0) => cst_3_readyArray_0,
	nReadyArray(0) => cst_3_nReadyArray_0,
	validArray(0) => cst_3_validArray_0,
	dataOutArray(0) => cst_3_dataOutArray_0
);

add_12: entity work.add_op(arch) generic map (2,1,10,10)
port map (
	clk => add_12_clk,
	rst => add_12_rst,
	dataInArray(0) => add_12_dataInArray_0,
	dataInArray(1) => add_12_dataInArray_1,
	pValidArray(0) => add_12_pValidArray_0,
	pValidArray(1) => add_12_pValidArray_1,
	readyArray(0) => add_12_readyArray_0,
	readyArray(1) => add_12_readyArray_1,
	nReadyArray(0) => add_12_nReadyArray_0,
	validArray(0) => add_12_validArray_0,
	dataOutArray(0) => add_12_dataOutArray_0
);

cst_4: entity work.Const(arch) generic map (1,1,10,10)
port map (
	clk => cst_4_clk,
	rst => cst_4_rst,
	dataInArray(0) => cst_4_dataInArray_0,
	pValidArray(0) => cst_4_pValidArray_0,
	readyArray(0) => cst_4_readyArray_0,
	nReadyArray(0) => cst_4_nReadyArray_0,
	validArray(0) => cst_4_validArray_0,
	dataOutArray(0) => cst_4_dataOutArray_0
);

icmp_13: entity work.icmp_ult_op(arch) generic map (2,1,10,1)
port map (
	clk => icmp_13_clk,
	rst => icmp_13_rst,
	dataInArray(0) => icmp_13_dataInArray_0,
	dataInArray(1) => icmp_13_dataInArray_1,
	pValidArray(0) => icmp_13_pValidArray_0,
	pValidArray(1) => icmp_13_pValidArray_1,
	readyArray(0) => icmp_13_readyArray_0,
	readyArray(1) => icmp_13_readyArray_1,
	nReadyArray(0) => icmp_13_nReadyArray_0,
	validArray(0) => icmp_13_validArray_0,
	dataOutArray(0) => icmp_13_dataOutArray_0
);

fork_0: entity work.fork(arch) generic map (1,3,10,10)
port map (
	clk => fork_0_clk,
	rst => fork_0_rst,
	dataInArray(0) => fork_0_dataInArray_0,
	pValidArray(0) => fork_0_pValidArray_0,
	readyArray(0) => fork_0_readyArray_0,
	nReadyArray(0) => fork_0_nReadyArray_0,
	nReadyArray(1) => fork_0_nReadyArray_1,
	nReadyArray(2) => fork_0_nReadyArray_2,
	validArray(0) => fork_0_validArray_0,
	validArray(1) => fork_0_validArray_1,
	validArray(2) => fork_0_validArray_2,
	dataOutArray(0) => fork_0_dataOutArray_0,
	dataOutArray(1) => fork_0_dataOutArray_1,
	dataOutArray(2) => fork_0_dataOutArray_2
);

fork_2: entity work.fork(arch) generic map (1,2,10,10)
port map (
	clk => fork_2_clk,
	rst => fork_2_rst,
	dataInArray(0) => fork_2_dataInArray_0,
	pValidArray(0) => fork_2_pValidArray_0,
	readyArray(0) => fork_2_readyArray_0,
	nReadyArray(0) => fork_2_nReadyArray_0,
	nReadyArray(1) => fork_2_nReadyArray_1,
	validArray(0) => fork_2_validArray_0,
	validArray(1) => fork_2_validArray_1,
	dataOutArray(0) => fork_2_dataOutArray_0,
	dataOutArray(1) => fork_2_dataOutArray_1
);

branch_2: entity work.Branch(arch) generic map (2,2,32,32)
port map (
	clk => branch_2_clk,
	rst => branch_2_rst,
	dataInArray(0) => branch_2_dataInArray_0,
	Condition(0) => branch_2_dataInArray_1,
	pValidArray(0) => branch_2_pValidArray_0,
	pValidArray(1) => branch_2_pValidArray_1,
	readyArray(0) => branch_2_readyArray_0,
	readyArray(1) => branch_2_readyArray_1,
	nReadyArray(0) => branch_2_nReadyArray_0,
	nReadyArray(1) => branch_2_nReadyArray_1,
	validArray(0) => branch_2_validArray_0,
	validArray(1) => branch_2_validArray_1,
	dataOutArray(0) => branch_2_dataOutArray_0,
	dataOutArray(1) => branch_2_dataOutArray_1
);

branch_3: entity work.Branch(arch) generic map (2,2,10,10)
port map (
	clk => branch_3_clk,
	rst => branch_3_rst,
	dataInArray(0) => branch_3_dataInArray_0,
	Condition(0) => branch_3_dataInArray_1,
	pValidArray(0) => branch_3_pValidArray_0,
	pValidArray(1) => branch_3_pValidArray_1,
	readyArray(0) => branch_3_readyArray_0,
	readyArray(1) => branch_3_readyArray_1,
	nReadyArray(0) => branch_3_nReadyArray_0,
	nReadyArray(1) => branch_3_nReadyArray_1,
	validArray(0) => branch_3_validArray_0,
	validArray(1) => branch_3_validArray_1,
	dataOutArray(0) => branch_3_dataOutArray_0,
	dataOutArray(1) => branch_3_dataOutArray_1
);

fork_4: entity work.fork(arch) generic map (1,3,1,1)
port map (
	clk => fork_4_clk,
	rst => fork_4_rst,
	dataInArray(0) => fork_4_dataInArray_0,
	pValidArray(0) => fork_4_pValidArray_0,
	readyArray(0) => fork_4_readyArray_0,
	nReadyArray(0) => fork_4_nReadyArray_0,
	nReadyArray(1) => fork_4_nReadyArray_1,
	nReadyArray(2) => fork_4_nReadyArray_2,
	validArray(0) => fork_4_validArray_0,
	validArray(1) => fork_4_validArray_1,
	validArray(2) => fork_4_validArray_2,
	dataOutArray(0) => fork_4_dataOutArray_0,
	dataOutArray(1) => fork_4_dataOutArray_1,
	dataOutArray(2) => fork_4_dataOutArray_2
);

phiC_1: entity work.CntrlMerge(arch) generic map (2,2,1,1,1)
port map (
	clk => phiC_1_clk,
	rst => phiC_1_rst,
	dataInArray(0) => phiC_1_dataInArray_0,
	dataInArray(1) => phiC_1_dataInArray_1,
	pValidArray(0) => phiC_1_pValidArray_0,
	pValidArray(1) => phiC_1_pValidArray_1,
	readyArray(0) => phiC_1_readyArray_0,
	readyArray(1) => phiC_1_readyArray_1,
	nReadyArray(0) => phiC_1_nReadyArray_0,
	nReadyArray(1) => phiC_1_nReadyArray_1,
	validArray(0) => phiC_1_validArray_0,
	validArray(1) => phiC_1_validArray_1,
	dataOutArray(0) => phiC_1_dataOutArray_0,
	Condition(0) => phiC_1_dataOutArray_1
);

branchC_5: entity work.Branch(arch) generic map (2,2,1,1)
port map (
	clk => branchC_5_clk,
	rst => branchC_5_rst,
	dataInArray(0) => branchC_5_dataInArray_0,
	Condition(0) => branchC_5_dataInArray_1,
	pValidArray(0) => branchC_5_pValidArray_0,
	pValidArray(1) => branchC_5_pValidArray_1,
	readyArray(0) => branchC_5_readyArray_0,
	readyArray(1) => branchC_5_readyArray_1,
	nReadyArray(0) => branchC_5_nReadyArray_0,
	nReadyArray(1) => branchC_5_nReadyArray_1,
	validArray(0) => branchC_5_validArray_0,
	validArray(1) => branchC_5_validArray_1,
	dataOutArray(0) => branchC_5_dataOutArray_0,
	dataOutArray(1) => branchC_5_dataOutArray_1
);

source_0: entity work.source(arch) generic map (0,1,32,10)
port map (
	clk => source_0_clk,
	rst => source_0_rst,
	nReadyArray(0) => source_0_nReadyArray_0,
	validArray(0) => source_0_validArray_0,
	dataOutArray(0) => source_0_dataOutArray_0
);

source_1: entity work.source(arch) generic map (0,1,32,1)
port map (
	clk => source_1_clk,
	rst => source_1_rst,
	nReadyArray(0) => source_1_nReadyArray_0,
	validArray(0) => source_1_validArray_0,
	dataOutArray(0) => source_1_dataOutArray_0
);

source_2: entity work.source(arch) generic map (0,1,32,10)
port map (
	clk => source_2_clk,
	rst => source_2_rst,
	nReadyArray(0) => source_2_nReadyArray_0,
	validArray(0) => source_2_validArray_0,
	dataOutArray(0) => source_2_dataOutArray_0
);

fork_9: entity work.fork(arch) generic map (1,2,1,1)
port map (
	clk => fork_9_clk,
	rst => fork_9_rst,
	dataInArray(0) => fork_9_dataInArray_0,
	pValidArray(0) => fork_9_pValidArray_0,
	readyArray(0) => fork_9_readyArray_0,
	nReadyArray(0) => fork_9_nReadyArray_0,
	nReadyArray(1) => fork_9_nReadyArray_1,
	validArray(0) => fork_9_validArray_0,
	validArray(1) => fork_9_validArray_1,
	dataOutArray(0) => fork_9_dataOutArray_0,
	dataOutArray(1) => fork_9_dataOutArray_1
);

ret_0: entity work.ret_op(arch) generic map (1,1,32,32)
port map (
	clk => ret_0_clk,
	rst => ret_0_rst,
	dataInArray(0) => ret_0_dataInArray_0,
	pValidArray(0) => ret_0_pValidArray_0,
	readyArray(0) => ret_0_readyArray_0,
	nReadyArray(0) => ret_0_nReadyArray_0,
	validArray(0) => ret_0_validArray_0,
	dataOutArray(0) => ret_0_dataOutArray_0
);

phi_n0: entity work.merge(arch) generic map (1,1,32,32)
port map (
	clk => phi_n0_clk,
	rst => phi_n0_rst,
	dataInArray(0) => phi_n0_dataInArray_0,
	pValidArray(0) => phi_n0_pValidArray_0,
	readyArray(0) => phi_n0_readyArray_0,
	nReadyArray(0) => phi_n0_nReadyArray_0,
	validArray(0) => phi_n0_validArray_0,
	dataOutArray(0) => phi_n0_dataOutArray_0
);

phiC_2: entity work.merge(arch) generic map (1,1,1,1)
port map (
	clk => phiC_2_clk,
	rst => phiC_2_rst,
	dataInArray(0) => phiC_2_dataInArray_0,
	pValidArray(0) => phiC_2_pValidArray_0,
	readyArray(0) => phiC_2_readyArray_0,
	nReadyArray(0) => phiC_2_nReadyArray_0,
	validArray(0) => phiC_2_validArray_0,
	dataOutArray(0) => phiC_2_dataOutArray_0
);

MC_idx: entity work.MemCont(arch) generic map (32,10,1,1,1)
port map (
	clk => MC_idx_clk,
	rst => MC_idx_rst,
	io_storeDataOut => idx_dout0,
	io_storeAddrOut => idx_address0,
	io_storeEnable => MC_idx_we0_ce0,
	io_loadDataIn => idx_din1,
	io_loadAddrOut => idx_address1,
	io_loadEnable => idx_ce1,
	io_bbReadyToPrevs(0) => MC_idx_readyArray_1,
	io_bbpValids(0) => '0',
	io_bb_stCountArray(0) => x"00000000",
	io_rdPortsPrev_ready(0) => MC_idx_readyArray_0,
	io_rdPortsPrev_valid(0) => MC_idx_pValidArray_0,
	io_rdPortsPrev_bits(0) => MC_idx_dataInArray_0,
	io_wrAddrPorts_ready(0) => MC_idx_readyArray_2,
	io_wrAddrPorts_valid(0) => MC_idx_pValidArray_2,
	io_wrAddrPorts_bits(0) => MC_idx_dataInArray_2,
	io_wrDataPorts_ready(0) => MC_idx_readyArray_3,
	io_wrDataPorts_valid(0) => MC_idx_pValidArray_3,
	io_wrDataPorts_bits(0) => MC_idx_dataInArray_3,
	io_rdPortsNext_ready(0) => MC_idx_nReadyArray_0,
	io_rdPortsNext_valid(0) => MC_idx_validArray_0,
	io_rdPortsNext_bits(0) => MC_idx_dataOutArray_0,
	io_Empty_Valid => MC_idx_validArray_1,
	io_Empty_Ready => MC_idx_nReadyArray_1

);

MC_d_i: entity work.MemCont(arch) generic map (32,32,1,1,1)
port map (
	clk => MC_d_i_clk,
	rst => MC_d_i_rst,
	io_storeDataOut => d_i_dout0,
	io_storeAddrOut => d_i_address0,
	io_storeEnable => MC_d_i_we0_ce0,
	io_loadDataIn => d_i_din1,
	io_loadAddrOut => d_i_address1,
	io_loadEnable => d_i_ce1,
	io_bbReadyToPrevs(0) => MC_d_i_readyArray_1,
	io_bbpValids(0) => '0',
	io_bb_stCountArray(0) => x"00000000",
	io_rdPortsPrev_ready(0) => MC_d_i_readyArray_0,
	io_rdPortsPrev_valid(0) => MC_d_i_pValidArray_0,
	io_rdPortsPrev_bits(0) => MC_d_i_dataInArray_0,
	io_wrAddrPorts_ready(0) => MC_d_i_readyArray_2,
	io_wrAddrPorts_valid(0) => MC_d_i_pValidArray_2,
	io_wrAddrPorts_bits(0) => MC_d_i_dataInArray_2,
	io_wrDataPorts_ready(0) => MC_d_i_readyArray_3,
	io_wrDataPorts_valid(0) => MC_d_i_pValidArray_3,
	io_wrDataPorts_bits(0) => MC_d_i_dataInArray_3,
	io_rdPortsNext_ready(0) => MC_d_i_nReadyArray_0,
	io_rdPortsNext_valid(0) => MC_d_i_validArray_0,
	io_rdPortsNext_bits(0) => MC_d_i_dataOutArray_0,
	io_Empty_Valid => MC_d_i_validArray_1,
	io_Empty_Ready => MC_d_i_nReadyArray_1

);

end_0: entity work.end_node(arch) generic map (1,2,1,32,32)
port map (
	clk => end_0_clk,
	rst => end_0_rst,
	dataInArray(0) => end_0_dataInArray_2,
	eValidArray(0) => end_0_pValidArray_0,
	eValidArray(1) => end_0_pValidArray_1,
	pValidArray(0) => end_0_pValidArray_2,
	eReadyArray(0) => end_0_readyArray_0,
	eReadyArray(1) => end_0_readyArray_1,
	readyArray(0) => end_0_readyArray_2,
	dataOutArray(0) => end_0_dataOutArray_0,
	validArray(0) => end_0_validArray_0,
	nReadyArray(0) => end_0_nReadyArray_0
);

sink_0: entity work.sink(arch) generic map (1,0,1,32)
port map (
	clk => sink_0_clk,
	rst => sink_0_rst,
	dataInArray(0) => sink_0_dataInArray_0,
	pValidArray(0) => sink_0_pValidArray_0,
	readyArray(0) => sink_0_readyArray_0
);

sink_1: entity work.sink(arch) generic map (1,0,1,32)
port map (
	clk => sink_1_clk,
	rst => sink_1_rst,
	dataInArray(0) => sink_1_dataInArray_0,
	pValidArray(0) => sink_1_pValidArray_0,
	readyArray(0) => sink_1_readyArray_0
);

sink_2: entity work.sink(arch) generic map (1,0,1,32)
port map (
	clk => sink_2_clk,
	rst => sink_2_rst,
	dataInArray(0) => sink_2_dataInArray_0,
	pValidArray(0) => sink_2_pValidArray_0,
	readyArray(0) => sink_2_readyArray_0
);

sink_3: entity work.sink(arch) generic map (1,0,10,32)
port map (
	clk => sink_3_clk,
	rst => sink_3_rst,
	dataInArray(0) => sink_3_dataInArray_0,
	pValidArray(0) => sink_3_pValidArray_0,
	readyArray(0) => sink_3_readyArray_0
);

sink_4: entity work.sink(arch) generic map (1,0,1,32)
port map (
	clk => sink_4_clk,
	rst => sink_4_rst,
	dataInArray(0) => sink_4_dataInArray_0,
	pValidArray(0) => sink_4_pValidArray_0,
	readyArray(0) => sink_4_readyArray_0
);

end behavioral; 
