

******************************************************************
******Dynamic High-Level Synthesis Compiler***********************
******Andrea Guerrieri - Lana Josipovic - EPFL-LAP 2019 **********
******Version 2.0 - Build 1.0 ************************************
******************************************************************

synthesis_optimized.tcl
Done 
set input file: getTanh.cpp
current input filename: ./src/getTanh.cpp
Done 
Synthesize
compile getTanh.cpp . -use-lsq=true Andrea: arg1:  getTanh.cpp arg2: . arg3 -use-lsq=true arg4
/home/dynamatic/Dynamatic/etc/llvm-6.0/bin/clang -emit-llvm -S   -c src/getTanh.cpp -o .getTanh.cpp.ll
rm: cannot remove '*.s': No such file or directory
0Time elapsed: 0s.
; ModuleID = '.getTanh.cpp_mem2reg_constprop_simplifycfg_die.ll'
source_filename = "src/getTanh.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind uwtable
define i32 @_Z7getTanhPiS_(i32* %A, i32* %addr) #0 {
block1:
  br label %block2

block2:                                           ; preds = %block4, %block1
  %i.01 = phi i32 [ 0, %block1 ], [ %inc, %block4 ]
  %"2" = zext i32 %i.01 to i64
  %arrayidx = getelementptr inbounds i32, i32* %addr, i64 %"2"
  %"3" = load i32, i32* %arrayidx, align 4
  %idxprom1 = sext i32 %"3" to i64
  %arrayidx2 = getelementptr inbounds i32, i32* %A, i64 %idxprom1
  %"4" = load i32, i32* %arrayidx2, align 4
  %cmp3 = icmp sgt i32 %"4", 0
  br i1 %cmp3, label %block4, label %block3

block3:                                           ; preds = %block2
  %mul = mul nsw i32 %"4", %"4"
  %add = add nuw nsw i32 %mul, 19
  %mul4 = mul nsw i32 %add, %"4"
  %mul51 = add i32 %mul4, 3
  %add7 = mul i32 %mul51, %"4"
  br label %block4

block4:                                           ; preds = %block3, %block2
  %result.1 = phi i32 [ %add7, %block3 ], [ 1, %block2 ]
  %idxprom8 = sext i32 %"3" to i64
  %arrayidx9 = getelementptr inbounds i32, i32* %A, i64 %idxprom8
  store i32 %result.1, i32* %arrayidx9, align 4
  %inc = add nuw nsw i32 %i.01, 1
  %cmp = icmp ult i32 %inc, 1000
  br i1 %cmp, label %block2, label %block5

block5:                                           ; preds = %block4
  ret i32 %result.1
}

; Function Attrs: noinline norecurse nounwind uwtable
define i32 @main() #1 {
entry:
  %a = alloca [1 x [1000 x i32]], align 16
  %b = alloca [1 x [1000 x i32]], align 16
  br label %for.body

for.body:                                         ; preds = %for.inc15, %entry
  br label %for.body3

for.body3:                                        ; preds = %for.inc, %for.body
  %j.01 = phi i32 [ 0, %for.body ], [ %inc, %for.inc ]
  %0 = zext i32 %j.01 to i64
  %1 = getelementptr inbounds [1 x [1000 x i32]], [1 x [1000 x i32]]* %a, i64 0, i64 0, i64 %0
  store i32 %j.01, i32* %1, align 4
  %2 = zext i32 %j.01 to i64
  %3 = getelementptr inbounds [1 x [1000 x i32]], [1 x [1000 x i32]]* %b, i64 0, i64 0, i64 %2
  store i32 %j.01, i32* %3, align 4
  %rem = urem i32 %j.01, 100
  %cmp10 = icmp eq i32 %rem, 0
  br i1 %cmp10, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body3
  %4 = zext i32 %j.01 to i64
  %5 = getelementptr inbounds [1 x [1000 x i32]], [1 x [1000 x i32]]* %a, i64 0, i64 0, i64 %4
  store i32 0, i32* %5, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.then, %for.body3
  %inc = add nuw nsw i32 %j.01, 1
  %cmp2 = icmp ult i32 %inc, 1000
  br i1 %cmp2, label %for.body3, label %for.inc15

for.inc15:                                        ; preds = %for.inc
  br i1 false, label %for.body, label %for.end17

for.end17:                                        ; preds = %for.inc15
  %arraydecay = getelementptr inbounds [1 x [1000 x i32]], [1 x [1000 x i32]]* %a, i64 0, i64 0, i64 0
  %arraydecay23 = getelementptr inbounds [1 x [1000 x i32]], [1 x [1000 x i32]]* %b, i64 0, i64 0, i64 0
  %call = call i32 @_Z7getTanhPiS_(i32* nonnull %arraydecay, i32* nonnull %arraydecay23)
  ret i32 0
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 6.0.1 (http://llvm.org/git/clang.git 2f27999df400d17b33cdd412fdd606a88208dfcc) (http://llvm.org/git/llvm.git 5136df4d089a086b70d452160ad5451861269498)"}
OptimizeBitwidth : Optimization of function _Z7getTanhPiS_ finished in 2 iterations.
Printing stats (for more details on states for each individual value, use dumpInfos).
Saved bits during forward passes : 66
Saved bits during backward passes : 0
Saved bits in constants : 141
Used bits after OB : 531, vs. Originaly used bits : 738
 => Reduction of used bits : 7.195123e+01


Done 
Done 
Optimize
buffers buffers -filename=./reports/getTanh -period=4 -timeout=60****************************************
dataflow graph name: ./reports/getTanh
milp solver: cbc
delay: 0, period: 4
timeout: 60
set optimization: true
first MG optimization: false
****************************************
===================
READING BB DOT FILE
===================
Reading graph name...
Reading set of nodes...
Reading set of edges between nodes...
Setting entry and exit BB...
	Entry: BB1, Exit: BB5
Setting BB frequencies...
BB1 : 1
BB2 : 1000
BB3 : 10
BB4 : 1000
BB5 : 1

Adding elastic buffers with period=4 and buffer_delay=0

======================
ADDING ELASTIC BUFFERS
======================
Extracting marked graphs
--------------------------
Iteration 1
ILP time: [ms] 12 
Arcs in the CFDFC:
	2->4:990
	4->2:999
Updating frequencies...
Storing CFDFC and corresponding Marked Graph...
--------------------------
Iteration 2
ILP time: [ms] 10 
Arcs in the CFDFC:
	2->3:10
	3->4:10
	4->2:9
Updating frequencies...
Storing CFDFC and corresponding Marked Graph...
--------------------------
Iteration 3
ILP time: [ms] 11 
Arcs in the CFDFC:
No new MG can be extracted to increase coverage.

*******************
Covered Frequency = 2007, Total Frequency = 2011, Coverage = 0.998011
*******************

determining buffer from/to MC_LSQ units to/from loads.
----------------------
buffers on MG borders
----------------------
Adding buffer in branch_0:out1 -> phi_1:in2 | slots: 1, trans: 0 | BB1 -> BB2
Adding buffer in branch_8:out2 -> phi_n5:in1 | slots: 1, trans: 0 | BB4 -> BB5
Adding buffer in branchC_10:out1 -> phiC_6:in1 | slots: 1, trans: 0 | BB1 -> BB2
Adding buffer in branchC_13:out2 -> phiC_9:in1 | slots: 1, trans: 0 | BB4 -> BB5

Calculating disjoint sets of CFDFCs...
	initialize
	union
	get set of unique dsu numbers
	merge and get sub-components
Total number of Extracted Disjoint CFDFCs: 1
Adding Marked Graphs from CFDFCs...

-------------------------------
Initiating MILP for MG number 0
-------------------------------
 creating throughput vars for sub_mg0
 creating throughput vars for sub_mg1

Done 
Write hdl
write_hdl  . ./reports/getTanh_optimized

******************************************************************
******Dynamic High-Level Synthesis Compiler **********************
******Andrea Guerrieri - Lana Josipovic - EPFL-LAP 2019 **********
******Dot to VHDL Generator***************************************
******************************************************************
Parsing ./reports/getTanh_optimized.dot

Report Modules 
+--------------------------------------------------------------------------+
|   Node_ID|                Name|         Module_type|    Inputs|   Outputs|
+--------------------------------------------------------------------------+
|         0|        brCst_block1|            Constant|         1|         1|
|         1|               cst_0|            Constant|         1|         1|
|         2|            branch_0|              Branch|         2|         2|
|         3|             start_0|               Entry|         1|         1|
|         4|            forkC_11|                Fork|         1|         3|
|         5|          branchC_10|              Branch|         2|         2|
|         6|             fork_12|                Fork|         1|         2|
|         7|               phi_1|                 Mux|         3|         1|
|         8|              load_4|            Operator|         2|         2|
|         9|              load_7|            Operator|         2|         2|
|        10|               cst_1|            Constant|         1|         1|
|        11|              icmp_8|            Operator|         2|         1|
|        12|               cst_4|            Constant|         1|         1|
|        13|              fork_0|                Fork|         1|         2|
|        14|              fork_1|                Fork|         1|         2|
|        15|              fork_2|                Fork|         1|         2|
|        16|            branch_1|              Branch|         2|         2|
|        17|            branch_2|              Branch|         2|         2|
|        18|            branch_3|              Branch|         2|         2|
|        19|            branch_4|              Branch|         2|         2|
|        20|              fork_7|                Fork|         1|         5|
|        21|              phiC_6|          CntrlMerge|         2|         2|
|        22|            forkC_13|                Fork|         1|         3|
|        23|          branchC_11|              Branch|         2|         2|
|        24|            source_0|              Source|         0|         1|
|        25|              mul_10|            Operator|         2|         1|
|        26|               cst_2|            Constant|         1|         1|
|        27|              add_11|            Operator|         2|         1|
|        28|              mul_12|            Operator|         2|         1|
|        29|               cst_3|            Constant|         1|         1|
|        30|              add_13|            Operator|         2|         1|
|        31|              mul_14|            Operator|         2|         1|
|        32|        brCst_block3|            Constant|         1|         1|
|        33|              phi_n2|               Merge|         1|         1|
|        34|              phi_n3|               Merge|         1|         1|
|        35|              phi_n4|               Merge|         1|         1|
|        36|              fork_5|                Fork|         1|         4|
|        37|            branch_5|              Branch|         2|         2|
|        38|            branch_6|              Branch|         2|         2|
|        39|            branch_7|              Branch|         2|         2|
|        40|              fork_8|                Fork|         1|         4|
|        41|              phiC_7|               Merge|         1|         1|
|        42|            forkC_14|                Fork|         1|         2|
|        43|          branchC_12|              Branch|         2|         2|
|        44|            source_1|              Source|         0|         1|
|        45|            source_2|              Source|         0|         1|
|        46|              phi_16|                 Mux|         3|         1|
|        47|             store_0|            Operator|         2|         2|
|        48|               cst_5|            Constant|         1|         1|
|        49|              add_19|            Operator|         2|         1|
|        50|               cst_6|            Constant|         1|         1|
|        51|             icmp_20|            Operator|         2|         1|
|        52|              phi_n0|               Merge|         2|         1|
|        53|              phi_n1|               Merge|         2|         1|
|        54|              fork_3|                Fork|         1|         2|
|        55|              fork_4|                Fork|         1|         2|
|        56|            branch_8|              Branch|         2|         2|
|        57|            branch_9|              Branch|         2|         2|
|        58|              fork_9|                Fork|         1|         3|
|        59|              phiC_8|          CntrlMerge|         2|         2|
|        60|            forkC_15|                Fork|         1|         2|
|        61|          branchC_13|              Branch|         2|         2|
|        62|            source_3|              Source|         0|         1|
|        63|            source_4|              Source|         0|         1|
|        64|               ret_0|            Operator|         1|         1|
|        65|              phi_n5|               Merge|         1|         1|
|        66|              phiC_9|               Merge|         1|         1|
|        67|               LSQ_A|                 LSQ|         5|         2|
|        68|             MC_addr|                  MC|         4|         2|
|        69|               end_0|                Exit|         3|         1|
|        70|              sink_0|                Sink|         1|         0|
|        71|              sink_1|                Sink|         1|         0|
|        72|              sink_2|                Sink|         1|         0|
|        73|              sink_3|                Sink|         1|         0|
|        74|              sink_4|                Sink|         1|         0|
|        75|              sink_5|                Sink|         1|         0|
|        76|              sink_6|                Sink|         1|         0|
|        77|              sink_7|                Sink|         1|         0|
|        78|              sink_8|                Sink|         1|         0|
|        79|              sink_9|                Sink|         1|         0|
|        80|             sink_10|                Sink|         1|         0|
+--------------------------------------------------------------------------+
Generating ./reports/getTanh_optimized.vhd
Generating LSQ 0 component...
lsq_generate ./reports/getTanh_optimized_lsq0_configuration.json
[[35minfo[0m] [0.001] Elaborating design...
[[35minfo[0m] [2.865] Done elaborating.
Total FIRRTL Compile Time: 16729.6 ms

Done



Done 
Exit...
Goodbye!


