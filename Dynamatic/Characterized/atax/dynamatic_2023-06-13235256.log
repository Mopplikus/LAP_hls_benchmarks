

******************************************************************
******Dynamic High-Level Synthesis Compiler***********************
******Andrea Guerrieri - Lana Josipovic - EPFL-LAP 2019 **********
******Version 2.0 - Build 1.0 ************************************
******************************************************************

synthesis_optimized.tcl
Done 
set input file: atax.cpp
current input filename: ./src/atax.cpp
Done 
Synthesize
compile atax.cpp . -use-lsq=true Andrea: arg1:  atax.cpp arg2: . arg3 -use-lsq=true arg4
/home/dynamatic/Dynamatic/etc/llvm-6.0/bin/clang -emit-llvm -S   -c src/atax.cpp -o .atax.cpp.ll
rm: cannot remove '*.s': No such file or directory
0Time elapsed: 0s.
; ModuleID = '.atax.cpp_mem2reg_constprop_simplifycfg_die.ll'
source_filename = "src/atax.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind uwtable
define i32 @_Z4ataxPA20_iPiS1_S1_([20 x i32]* %A, i32* %x, i32* %y, i32* %tmp) #0 {
block1:
  br label %block2

block2:                                           ; preds = %block6, %block1
  %i.04 = phi i32 [ 0, %block1 ], [ %inc29, %block6 ]
  %"2" = zext i32 %i.04 to i64
  %arrayidx = getelementptr inbounds i32, i32* %tmp, i64 %"2"
  %"3" = load i32, i32* %arrayidx, align 4
  br label %block3

block3:                                           ; preds = %block3, %block2
  %t.02 = phi i32 [ %"3", %block2 ], [ %add, %block3 ]
  %j.01 = phi i32 [ 0, %block2 ], [ %inc, %block3 ]
  %"5" = zext i32 %i.04 to i64
  %"6" = zext i32 %j.01 to i64
  %arrayidx7 = getelementptr inbounds [20 x i32], [20 x i32]* %A, i64 %"5", i64 %"6"
  %"7" = load i32, i32* %arrayidx7, align 4
  %"8" = zext i32 %j.01 to i64
  %arrayidx9 = getelementptr inbounds i32, i32* %x, i64 %"8"
  %"9" = load i32, i32* %arrayidx9, align 4
  %mul = mul nsw i32 %"7", %"9"
  %add = add nsw i32 %t.02, %mul
  %inc = add nuw nsw i32 %j.01, 1
  %cmp2 = icmp ult i32 %inc, 20
  br i1 %cmp2, label %block3, label %block4

block4:                                           ; preds = %block3
  br label %block5

block5:                                           ; preds = %block5, %block4
  %j.13 = phi i32 [ 0, %block4 ], [ %inc24, %block5 ]
  %"12" = zext i32 %j.13 to i64
  %arrayidx14 = getelementptr inbounds i32, i32* %y, i64 %"12"
  %"13" = load i32, i32* %arrayidx14, align 4
  %"14" = zext i32 %i.04 to i64
  %"15" = zext i32 %j.13 to i64
  %arrayidx18 = getelementptr inbounds [20 x i32], [20 x i32]* %A, i64 %"14", i64 %"15"
  %"16" = load i32, i32* %arrayidx18, align 4
  %mul19 = mul nsw i32 %"16", %add
  %add20 = add nsw i32 %"13", %mul19
  %"17" = zext i32 %j.13 to i64
  %arrayidx22 = getelementptr inbounds i32, i32* %y, i64 %"17"
  store i32 %add20, i32* %arrayidx22, align 4
  %inc24 = add nuw nsw i32 %j.13, 1
  %cmp11 = icmp ult i32 %inc24, 20
  br i1 %cmp11, label %block5, label %block6

block6:                                           ; preds = %block5
  %"19" = zext i32 %i.04 to i64
  %arrayidx27 = getelementptr inbounds i32, i32* %tmp, i64 %"19"
  store i32 %add, i32* %arrayidx27, align 4
  %inc29 = add nuw nsw i32 %i.04, 1
  %cmp = icmp ult i32 %inc29, 20
  br i1 %cmp, label %block2, label %block7

block7:                                           ; preds = %block6
  ret i32 %inc29
}

; Function Attrs: noinline norecurse nounwind uwtable
define i32 @main() #1 {
entry:
  %A = alloca [1 x [20 x [20 x i32]]], align 16
  %x = alloca [1 x [20 x i32]], align 16
  %y = alloca [1 x [20 x i32]], align 16
  %tmp = alloca [1 x [20 x i32]], align 16
  call void @srand(i32 13) #3
  br label %for.body

for.body:                                         ; preds = %for.inc29, %entry
  br label %for.body3

for.body3:                                        ; preds = %for.inc26, %for.body
  %j.02 = phi i32 [ 0, %for.body ], [ %inc27, %for.inc26 ]
  %call = call i32 @rand() #3
  %rem = srem i32 %call, 100
  %0 = zext i32 %j.02 to i64
  %1 = getelementptr inbounds [1 x [20 x i32]], [1 x [20 x i32]]* %x, i64 0, i64 0, i64 %0
  store i32 %rem, i32* %1, align 4
  %2 = zext i32 %j.02 to i64
  %3 = getelementptr inbounds [1 x [20 x i32]], [1 x [20 x i32]]* %y, i64 0, i64 0, i64 %2
  store i32 0, i32* %3, align 4
  %4 = zext i32 %j.02 to i64
  %5 = getelementptr inbounds [1 x [20 x i32]], [1 x [20 x i32]]* %tmp, i64 0, i64 0, i64 %4
  store i32 0, i32* %5, align 4
  br label %for.body17

for.body17:                                       ; preds = %for.body17, %for.body3
  %x14.01 = phi i32 [ 0, %for.body3 ], [ %inc, %for.body17 ]
  %call18 = call i32 @rand() #3
  %rem19 = srem i32 %call18, 100
  %6 = zext i32 %j.02 to i64
  %7 = zext i32 %x14.01 to i64
  %8 = getelementptr inbounds [1 x [20 x [20 x i32]]], [1 x [20 x [20 x i32]]]* %A, i64 0, i64 0, i64 %6, i64 %7
  store i32 %rem19, i32* %8, align 4
  %inc = add nuw nsw i32 %x14.01, 1
  %cmp16 = icmp ult i32 %inc, 20
  br i1 %cmp16, label %for.body17, label %for.inc26

for.inc26:                                        ; preds = %for.body17
  %inc27 = add nuw nsw i32 %j.02, 1
  %cmp2 = icmp ult i32 %inc27, 20
  br i1 %cmp2, label %for.body3, label %for.inc29

for.inc29:                                        ; preds = %for.inc26
  br i1 false, label %for.body, label %for.end31

for.end31:                                        ; preds = %for.inc29
  %arraydecay = getelementptr inbounds [1 x [20 x [20 x i32]]], [1 x [20 x [20 x i32]]]* %A, i64 0, i64 0, i64 0
  %arraydecay35 = getelementptr inbounds [1 x [20 x i32]], [1 x [20 x i32]]* %x, i64 0, i64 0, i64 0
  %arraydecay37 = getelementptr inbounds [1 x [20 x i32]], [1 x [20 x i32]]* %y, i64 0, i64 0, i64 0
  %arraydecay39 = getelementptr inbounds [1 x [20 x i32]], [1 x [20 x i32]]* %tmp, i64 0, i64 0, i64 0
  %call40 = call i32 @_Z4ataxPA20_iPiS1_S1_([20 x i32]* nonnull %arraydecay, i32* nonnull %arraydecay35, i32* nonnull %arraydecay37, i32* nonnull %arraydecay39)
  ret i32 0
}

; Function Attrs: nounwind
declare void @srand(i32) #2

; Function Attrs: nounwind
declare i32 @rand() #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 6.0.1 (http://llvm.org/git/clang.git 2f27999df400d17b33cdd412fdd606a88208dfcc) (http://llvm.org/git/llvm.git 5136df4d089a086b70d452160ad5451861269498)"}
OptimizeBitwidth : Optimization of function _Z4ataxPA20_iPiS1_S1_ finished in 2 iterations.
Printing stats (for more details on states for each individual value, use dumpInfos).
Saved bits during forward passes : 405
Saved bits during backward passes : 0
Saved bits in constants : 89
Used bits after OB : 757, vs. Originaly used bits : 1251
 => Reduction of used bits : 6.051159e+01


Done 
Done 
Optimize
buffers buffers -filename=./reports/atax -period=4 -timeout=60****************************************
dataflow graph name: ./reports/atax
milp solver: cbc
delay: 0, period: 4
timeout: 60
set optimization: true
first MG optimization: false
****************************************
===================
READING BB DOT FILE
===================
Reading graph name...
Reading set of nodes...
Reading set of edges between nodes...
Setting entry and exit BB...
	Entry: BB1, Exit: BB7
Setting BB frequencies...
BB1 : 1
BB2 : 20
BB3 : 400
BB4 : 20
BB5 : 400
BB6 : 20
BB7 : 1

Adding elastic buffers with period=4 and buffer_delay=0

======================
ADDING ELASTIC BUFFERS
======================
Extracting marked graphs
--------------------------
Iteration 1
ILP time: [ms] 13 
Arcs in the CFDFC:
	5->5:380
Updating frequencies...
Storing CFDFC and corresponding Marked Graph...
--------------------------
Iteration 2
ILP time: [ms] 14 
Arcs in the CFDFC:
	3->3:380
Updating frequencies...
Storing CFDFC and corresponding Marked Graph...
--------------------------
Iteration 3
ILP time: [ms] 14 
Arcs in the CFDFC:
	2->3:20
	3->4:20
	4->5:20
	5->6:20
	6->2:19
Updating frequencies...
Storing CFDFC and corresponding Marked Graph...
--------------------------
Iteration 4
ILP time: [ms] 13 
Arcs in the CFDFC:
No new MG can be extracted to increase coverage.

*******************
Covered Frequency = 855, Total Frequency = 861, Coverage = 0.993031
*******************

determining buffer from/to MC_LSQ units to/from loads.
----------------------
buffers on MG borders
----------------------
Adding buffer in branch_0:out1 -> phi_1:in2 | slots: 1, trans: 0 | BB1 -> BB2
Adding buffer in branch_13:out2 -> phi_n3:in1 | slots: 1, trans: 0 | BB6 -> BB7
Adding buffer in branchC_14:out1 -> phiC_8:in1 | slots: 1, trans: 0 | BB1 -> BB2
Adding buffer in branchC_19:out2 -> phiC_13:in1 | slots: 1, trans: 0 | BB6 -> BB7

Calculating disjoint sets of CFDFCs...
	initialize
	union
	get set of unique dsu numbers
	merge and get sub-components
Total number of Extracted Disjoint CFDFCs: 1
Adding Marked Graphs from CFDFCs...

-------------------------------
Initiating MILP for MG number 0
-------------------------------
 creating throughput vars for sub_mg0
 creating throughput vars for sub_mg1
 creating throughput vars for sub_mg2

Done 
Write hdl
write_hdl  . ./reports/atax_optimized

******************************************************************
******Dynamic High-Level Synthesis Compiler **********************
******Andrea Guerrieri - Lana Josipovic - EPFL-LAP 2019 **********
******Dot to VHDL Generator***************************************
******************************************************************
Parsing ./reports/atax_optimized.dot

Report Modules 
+--------------------------------------------------------------------------+
|   Node_ID|                Name|         Module_type|    Inputs|   Outputs|
+--------------------------------------------------------------------------+
|         0|        brCst_block1|            Constant|         1|         1|
|         1|               cst_0|            Constant|         1|         1|
|         2|            branch_0|              Branch|         2|         2|
|         3|             start_0|               Entry|         1|         1|
|         4|            forkC_18|                Fork|         1|         3|
|         5|          branchC_14|              Branch|         2|         2|
|         6|             fork_19|                Fork|         1|         2|
|         7|               phi_1|                 Mux|         3|         1|
|         8|              load_4|            Operator|         2|         2|
|         9|        brCst_block2|            Constant|         1|         1|
|        10|               cst_1|            Constant|         1|         1|
|        11|              fork_0|                Fork|         1|         2|
|        12|            branch_1|              Branch|         2|         2|
|        13|            branch_2|              Branch|         2|         2|
|        14|            branch_3|              Branch|         2|         2|
|        15|             fork_12|                Fork|         1|         4|
|        16|              phiC_8|          CntrlMerge|         2|         2|
|        17|            forkC_20|                Fork|         1|         3|
|        18|          branchC_15|              Branch|         2|         2|
|        19|               phi_6|                 Mux|         3|         1|
|        20|               phi_7|                 Mux|         3|         1|
|        21|              zext_8|            Operator|         1|         1|
|        22|              zext_9|            Operator|         1|         1|
|        23|    getelementptr_10|            Operator|         3|         1|
|        24|             load_11|            Operator|         2|         2|
|        25|             load_14|            Operator|         2|         2|
|        26|              mul_15|            Operator|         2|         1|
|        27|              add_16|            Operator|         2|         1|
|        28|               cst_2|            Constant|         1|         1|
|        29|              add_17|            Operator|         2|         1|
|        30|               cst_3|            Constant|         1|         1|
|        31|             icmp_18|            Operator|         2|         1|
|        32|               cst_9|            Constant|         1|         1|
|        33|              phi_n2|               Merge|         2|         1|
|        34|              fork_1|                Fork|         1|         3|
|        35|              fork_3|                Fork|         1|         2|
|        36|              fork_8|                Fork|         1|         2|
|        37|            branch_4|              Branch|         2|         2|
|        38|            branch_5|              Branch|         2|         2|
|        39|            branch_6|              Branch|         2|         2|
|        40|             fork_13|                Fork|         1|         4|
|        41|              phiC_9|          CntrlMerge|         2|         2|
|        42|          branchC_16|              Branch|         2|         2|
|        43|            source_0|              Source|         0|         1|
|        44|            source_1|              Source|         0|         1|
|        45|            source_6|              Source|         0|         1|
|        46|             fork_28|                Fork|         1|         2|
|        47|        brCst_block4|            Constant|         1|         1|
|        48|               cst_4|            Constant|         1|         1|
|        49|              phi_n4|               Merge|         1|         1|
|        50|              phi_n5|               Merge|         1|         1|
|        51|            branch_7|              Branch|         2|         2|
|        52|            branch_8|              Branch|         2|         2|
|        53|            branch_9|              Branch|         2|         2|
|        54|             fork_14|                Fork|         1|         4|
|        55|             phiC_10|               Merge|         1|         1|
|        56|            forkC_22|                Fork|         1|         3|
|        57|          branchC_17|              Branch|         2|         2|
|        58|              phi_21|                 Mux|         3|         1|
|        59|             load_24|            Operator|         2|         2|
|        60|             zext_25|            Operator|         1|         1|
|        61|             zext_26|            Operator|         1|         1|
|        62|    getelementptr_27|            Operator|         3|         1|
|        63|             load_28|            Operator|         2|         2|
|        64|              mul_29|            Operator|         2|         1|
|        65|              add_30|            Operator|         2|         1|
|        66|             store_0|            Operator|         2|         2|
|        67|               cst_5|            Constant|         1|         1|
|        68|              add_33|            Operator|         2|         1|
|        69|               cst_6|            Constant|         1|         1|
|        70|             icmp_34|            Operator|         2|         1|
|        71|              cst_10|            Constant|         1|         1|
|        72|              phi_n6|               Merge|         2|         1|
|        73|              phi_n7|               Merge|         2|         1|
|        74|              fork_4|                Fork|         1|         4|
|        75|              fork_5|                Fork|         1|         2|
|        76|              fork_9|                Fork|         1|         2|
|        77|             fork_10|                Fork|         1|         2|
|        78|           branch_10|              Branch|         2|         2|
|        79|           branch_11|              Branch|         2|         2|
|        80|           branch_12|              Branch|         2|         2|
|        81|             fork_15|                Fork|         1|         4|
|        82|             phiC_11|          CntrlMerge|         2|         2|
|        83|            forkC_23|                Fork|         1|         2|
|        84|          branchC_18|              Branch|         2|         2|
|        85|            source_2|              Source|         0|         1|
|        86|            source_3|              Source|         0|         1|
|        87|            source_7|              Source|         0|         1|
|        88|             store_1|            Operator|         2|         2|
|        89|               cst_7|            Constant|         1|         1|
|        90|              add_38|            Operator|         2|         1|
|        91|               cst_8|            Constant|         1|         1|
|        92|             icmp_39|            Operator|         2|         1|
|        93|              phi_n0|               Merge|         1|         1|
|        94|              phi_n1|               Merge|         1|         1|
|        95|              fork_6|                Fork|         1|         2|
|        96|              fork_7|                Fork|         1|         2|
|        97|           branch_13|              Branch|         2|         2|
|        98|              cst_11|            Constant|         1|         1|
|        99|             phiC_12|               Merge|         1|         1|
|       100|            forkC_24|                Fork|         1|         2|
|       101|          branchC_19|              Branch|         2|         2|
|       102|             fork_25|                Fork|         1|         2|
|       103|            source_4|              Source|         0|         1|
|       104|            source_5|              Source|         0|         1|
|       105|               ret_0|            Operator|         1|         1|
|       106|              phi_n3|               Merge|         1|         1|
|       107|             phiC_13|               Merge|         1|         1|
|       108|               LSQ_y|                 LSQ|         4|         2|
|       109|              MC_tmp|                  MC|         4|         2|
|       110|                MC_A|                  MC|         5|         3|
|       111|                MC_x|                  MC|         4|         2|
|       112|               end_0|                Exit|         5|         1|
|       113|              sink_0|                Sink|         1|         0|
|       114|              sink_1|                Sink|         1|         0|
|       115|              sink_2|                Sink|         1|         0|
|       116|              sink_3|                Sink|         1|         0|
|       117|              sink_4|                Sink|         1|         0|
|       118|              sink_5|                Sink|         1|         0|
|       119|              sink_6|                Sink|         1|         0|
|       120|              sink_7|                Sink|         1|         0|
|       121|              sink_8|                Sink|         1|         0|
|       122|              sink_9|                Sink|         1|         0|
|       123|             sink_10|                Sink|         1|         0|
|       124|             sink_11|                Sink|         1|         0|
|       125|             sink_12|                Sink|         1|         0|
+--------------------------------------------------------------------------+
Generating ./reports/atax_optimized.vhd
Generating LSQ 0 component...
lsq_generate ./reports/atax_optimized_lsq0_configuration.json
[[35minfo[0m] [0.015] Elaborating design...
[[35minfo[0m] [2.833] Done elaborating.
Total FIRRTL Compile Time: 17993.5 ms

Done



Done 
Exit...
Goodbye!


