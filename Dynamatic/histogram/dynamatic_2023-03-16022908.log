

******************************************************************
******Dynamic High-Level Synthesis Compiler***********************
******Andrea Guerrieri - Lana Josipovic - EPFL-LAP 2019 **********
******Version 2.0 - Build 1.0 ************************************
******************************************************************

synthesis_optimized.tcl
Done 
set input file: histogram.cpp
current input filename: ./src/histogram.cpp
Done 
Synthesize
compile histogram.cpp . Andrea: arg1:  histogram.cpp arg2: . arg3 arg4
/home/dynamatic/Dynamatic/etc/llvm-6.0/bin/clang -emit-llvm -S   -c src/histogram.cpp -o .histogram.cpp.ll
rm: cannot remove '*.s': No such file or directory
0Time elapsed: 1e-06s.
; ModuleID = '.histogram.cpp_mem2reg_constprop_simplifycfg_die.ll'
source_filename = "src/histogram.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind uwtable
define void @_Z9histogramPiPfS0_i(i32* %feature, float* %weight, float* %hist, i32 %n) #0 {
block1:
  %cmp1 = icmp sgt i32 %n, 0
  br i1 %cmp1, label %block2, label %block4

block2:                                           ; preds = %block1
  br label %block3

block3:                                           ; preds = %block3, %block2
  %i.02 = phi i32 [ 0, %block2 ], [ %inc, %block3 ]
  %"3" = zext i32 %i.02 to i64
  %arrayidx = getelementptr inbounds i32, i32* %feature, i64 %"3"
  %"4" = load i32, i32* %arrayidx, align 4
  %"5" = zext i32 %i.02 to i64
  %arrayidx2 = getelementptr inbounds float, float* %weight, i64 %"5"
  %"6" = load float, float* %arrayidx2, align 4
  %idxprom3 = sext i32 %"4" to i64
  %arrayidx4 = getelementptr inbounds float, float* %hist, i64 %idxprom3
  %"7" = load float, float* %arrayidx4, align 4
  %add = fadd float %"7", %"6"
  %idxprom5 = sext i32 %"4" to i64
  %arrayidx6 = getelementptr inbounds float, float* %hist, i64 %idxprom5
  store float %add, float* %arrayidx6, align 4
  %inc = add nuw nsw i32 %i.02, 1
  %cmp = icmp slt i32 %inc, %n
  br i1 %cmp, label %block3, label %block4

block4:                                           ; preds = %block3, %block1
  ret void
}

; Function Attrs: noinline norecurse nounwind uwtable
define i32 @main() #1 {
entry:
  %feature = alloca [1 x [100 x i32]], align 16
  %weight = alloca [1 x [100 x float]], align 16
  %hist = alloca [1 x [100 x float]], align 16
  call void @srand(i32 15) #3
  br label %for.body

for.body:                                         ; preds = %for.inc20, %entry
  br label %for.body3

for.body3:                                        ; preds = %for.body3, %for.body
  %indx.02 = phi i32 [ 0, %for.body ], [ %inc, %for.body3 ]
  %call = call i32 @rand() #3
  %rem = srem i32 %call, 101
  %0 = zext i32 %indx.02 to i64
  %1 = getelementptr inbounds [1 x [100 x i32]], [1 x [100 x i32]]* %feature, i64 0, i64 0, i64 %0
  store i32 %rem, i32* %1, align 4
  %call6 = call i32 @rand() #3
  %conv = sitofp i32 %call6 to float
  %div7 = fdiv float %conv, 0x41A99999A0000000
  %2 = zext i32 %indx.02 to i64
  %3 = getelementptr inbounds [1 x [100 x float]], [1 x [100 x float]]* %weight, i64 0, i64 0, i64 %2
  store float %div7, float* %3, align 4
  %call12 = call i32 @rand() #3
  %conv13 = sitofp i32 %call12 to float
  %div15 = fdiv float %conv13, 0x41A99999A0000000
  %4 = zext i32 %indx.02 to i64
  %5 = getelementptr inbounds [1 x [100 x float]], [1 x [100 x float]]* %hist, i64 0, i64 0, i64 %4
  store float %div15, float* %5, align 4
  %inc = add nuw nsw i32 %indx.02, 1
  %cmp2 = icmp ult i32 %inc, 100
  br i1 %cmp2, label %for.body3, label %for.inc20

for.inc20:                                        ; preds = %for.body3
  br i1 false, label %for.body, label %for.end22

for.end22:                                        ; preds = %for.inc20
  br label %for.body26

for.body26:                                       ; preds = %for.body26, %for.end22
  %i23.01 = phi i32 [ 0, %for.end22 ], [ %inc36, %for.body26 ]
  %6 = zext i32 %i23.01 to i64
  %arraydecay = getelementptr inbounds [1 x [100 x i32]], [1 x [100 x i32]]* %feature, i64 0, i64 %6, i64 0
  %7 = zext i32 %i23.01 to i64
  %arraydecay31 = getelementptr inbounds [1 x [100 x float]], [1 x [100 x float]]* %weight, i64 0, i64 %7, i64 0
  %8 = zext i32 %i23.01 to i64
  %arraydecay34 = getelementptr inbounds [1 x [100 x float]], [1 x [100 x float]]* %hist, i64 0, i64 %8, i64 0
  call void @_Z9histogramPiPfS0_i(i32* nonnull %arraydecay, float* nonnull %arraydecay31, float* nonnull %arraydecay34, i32 100)
  %inc36 = add nuw nsw i32 %i23.01, 1
  br i1 false, label %for.body26, label %for.end37

for.end37:                                        ; preds = %for.body26
  ret i32 0
}

; Function Attrs: nounwind
declare void @srand(i32) #2

; Function Attrs: nounwind
declare i32 @rand() #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 6.0.1 (http://llvm.org/git/clang.git 2f27999df400d17b33cdd412fdd606a88208dfcc) (http://llvm.org/git/llvm.git 5136df4d089a086b70d452160ad5451861269498)"}
OptimizeBitwidth : Optimization of function _Z9histogramPiPfS0_i finished in 2 iterations.
Printing stats (for more details on states for each individual value, use dumpInfos).
Saved bits during forward passes : 4
Saved bits during backward passes : 0
Saved bits in constants : 62
Used bits after OB : 576, vs. Originaly used bits : 642
 => Reduction of used bits : 8.971962e+01


Done 
Done 
Optimize
buffers buffers -filename=./reports/histogram -period=5 ****************************************
dataflow graph name: ./reports/histogram
milp solver: cbc
delay: 0, period: 5
timeout: 180
set optimization: true
first MG optimization: false
****************************************
===================
READING BB DOT FILE
===================
Reading graph name...
Reading set of nodes...
Reading set of edges between nodes...
Setting entry and exit BB...
	Entry: BB1, Exit: BB4
Setting BB frequencies...
BB1 : 1
BB2 : 1
BB3 : 100
BB4 : 1

Adding elastic buffers with period=5 and buffer_delay=0

======================
ADDING ELASTIC BUFFERS
======================
Extracting marked graphs
--------------------------
Iteration 1
ILP time: [ms] 47 
Arcs in the CFDFC:
	3->3:99
Updating frequencies...
Storing CFDFC and corresponding Marked Graph...
--------------------------
Iteration 2
ILP time: [ms] 25 
Arcs in the CFDFC:
No new MG can be extracted to increase coverage.

*******************
Covered Frequency = 99, Total Frequency = 102, Coverage = 0.970588
*******************

determining buffer from/to MC_LSQ units to/from loads.
----------------------
buffers on MG borders
----------------------
Adding buffer in branch_1:out1 -> phi_3:in2 | slots: 1, trans: 0 | BB2 -> BB3
Adding buffer in branch_2:out1 -> phi_n1:in1 | slots: 1, trans: 0 | BB2 -> BB3
Adding buffer in branchC_6:out1 -> phiC_3:in1 | slots: 1, trans: 0 | BB2 -> BB3
Adding buffer in branchC_7:out2 -> phiC_4:in2 | slots: 1, trans: 0 | BB3 -> BB4

Calculating disjoint sets of CFDFCs...
	initialize
	union
	get set of unique dsu numbers
	merge and get sub-components
Total number of Extracted Disjoint CFDFCs: 1
Adding Marked Graphs from CFDFCs...

-------------------------------
Initiating MILP for MG number 0
-------------------------------
 creating throughput vars for sub_mg0
Solving MILP for elastic buffers: MG 0
Milp time for MG 0: [ms] 244 

************************
*** Throughput for MG 0 in disjoint MG 0: 1.00 ***
************************
Adding buffer in phi_3:out1 -> fork_1:in1 | slots: 2, trans: 0 | BB3 -> BB3 (inner)
Adding buffer in load_9:out1 -> fadd_13:in2 | slots: 5, trans: 1 | BB3 -> BB3 (inner)
Adding buffer in phi_n1:out1 -> fork_4:in1 | slots: 2, trans: 0 | BB3 -> BB3 (inner)
Adding buffer in forkC_12:out2 -> branchC_7:in1 | slots: 2, trans: 0 | BB3 -> BB3 (inner)

*** Throughput achieved in sub MG 0: 1.00 ***

--------------------------------------
Initiating MILP for remaining channels
--------------------------------------
Solving MILP for channels not covered by MGs
Milp time for remaining channels: [ms] 71 

***************************
Total MILP time: [ms] 315
***************************
INSTANTIATE
cp ./reports/histogram_graph_buf.dot ./_input/histogram_graph.dot 
cp ./reports/histogram_bbgraph_buf.dot ./_input/histogram_bbgraph.dot 
cp ./reports/histogram_bbgraph_buf.dot ./_tmp/out_bbgraph.dot
Executing min
histogram
===================
READING BB DOT FILE
===================
Reading graph name...
Reading set of nodes...
Reading set of edges between nodes...
Setting entry and exit BB...
	Entry: BB1, Exit: BB4
Setting BB frequencies...
BB1 : 1
BB2 : 1
BB3 : 100
BB4 : 1

running MILP with timeout : 100
intra set sharing for mul_op
intra set sharing for fmul_op
intra set sharing for fsub_op
intra set sharing for fadd_op
intra set sharing for fdiv_op
intra set sharing for sdiv_op
inter set sharing for mul_op
inter set sharing for fmul_op
inter set sharing for fsub_op
inter set sharing for fadd_op
inter set sharing for fdiv_op
inter set sharing for sdiv_op
checking final throughputs == initial throughputs
checking throughput
===================
READING BB DOT FILE
===================
Reading graph name...
Reading set of nodes...
Reading set of edges between nodes...
Setting entry and exit BB...
	Entry: BB1, Exit: BB4
Setting BB frequencies...
BB1 : 1
BB2 : 1
BB3 : 100
BB4 : 1

Merge groups of type OPERATOR
- Shared components in BB 3 : 
	- At index 0, fadd_13
running MILP with timeout : 300
Throughput unharmed
===================
READING BB DOT FILE
===================
Reading graph name...
Reading set of nodes...
Reading set of edges between nodes...
Setting entry and exit BB...
	Entry: BB1, Exit: BB4
Setting BB frequencies...
BB1 : 1
BB2 : 1
BB3 : 100
BB4 : 1

removing buffer _Buffer_6 from fadd_13 with slots 9 and transparency 1
Removing _Buffer_6
Merge groups of type OPERATOR
- Shared components in BB 3 : 
	- At index 0, fadd_13
Done
resource_minimization min histogram
cp ./_output/histogram_graph.dot ./reports/histogram_area_optimized.dot
Done 
Write hdl
write_hdl  . ./reports/histogram_area_optimized

******************************************************************
******Dynamic High-Level Synthesis Compiler **********************
******Andrea Guerrieri - Lana Josipovic - EPFL-LAP 2019 **********
******Dot to VHDL Generator***************************************
******************************************************************
Parsing ./reports/histogram_area_optimized.dot

Report Modules 
+--------------------------------------------------------------------------+
|   Node_ID|                Name|         Module_type|    Inputs|   Outputs|
+--------------------------------------------------------------------------+
|         0|                   n|               Entry|         1|         1|
|         1|               cst_0|            Constant|         1|         1|
|         2|              icmp_0|            Operator|         2|         1|
|         3|              fork_0|                Fork|         1|         2|
|         4|            branch_0|              Branch|         2|         2|
|         5|             start_0|               Entry|         1|         1|
|         6|           branchC_5|              Branch|         2|         2|
|         7|             fork_10|                Fork|         1|         2|
|         8|            source_0|              Source|         0|         1|
|         9|        brCst_block2|            Constant|         1|         1|
|        10|               cst_1|            Constant|         1|         1|
|        11|              phi_n0|               Merge|         1|         1|
|        12|            branch_1|              Branch|         2|         2|
|        13|            branch_2|              Branch|         2|         2|
|        14|              fork_6|                Fork|         1|         3|
|        15|              phiC_2|               Merge|         1|         1|
|        16|            forkC_11|                Fork|         1|         3|
|        17|           branchC_6|              Branch|         2|         2|
|        18|            Buffer_3|              Buffer|         1|         1|
|        19|            Buffer_2|              Buffer|         1|         1|
|        20|            Buffer_1|              Buffer|         1|         1|
|        21|            Buffer_8|              Buffer|         1|         1|
|        22|            Buffer_7|              Buffer|         1|         1|
|        23|               phi_3|                 Mux|         3|         1|
|        24|              load_6|            Operator|         2|         2|
|        25|              load_9|            Operator|         2|         2|
|        26|             load_12|            Operator|         2|         2|
|        27|             fadd_13|            Operator|         2|         1|
|        28|             store_0|            Operator|         2|         2|
|        29|               cst_2|            Constant|         1|         1|
|        30|              add_16|            Operator|         2|         1|
|        31|             icmp_17|            Operator|         2|         1|
|        32|              phi_n1|               Merge|         2|         1|
|        33|              fork_1|                Fork|         1|         3|
|        34|              fork_2|                Fork|         1|         2|
|        35|              fork_3|                Fork|         1|         2|
|        36|              fork_4|                Fork|         1|         2|
|        37|            branch_3|              Branch|         2|         2|
|        38|            branch_4|              Branch|         2|         2|
|        39|              fork_7|                Fork|         1|         3|
|        40|              phiC_3|          CntrlMerge|         2|         2|
|        41|            forkC_12|                Fork|         1|         2|
|        42|           branchC_7|              Branch|         2|         2|
|        43|            source_1|              Source|         0|         1|
|        44|            Buffer_5|               tFifo|         1|         1|
|        45|            Buffer_4|              Buffer|         1|         1|
|        46|            Buffer_9|              Buffer|         1|         1|
|        47|           Buffer_10|              Buffer|         1|         1|
|        48|               ret_0|            Operator|         1|         1|
|        49|              phiC_4|               Merge|         2|         1|
|        50|            LSQ_hist|                 LSQ|         4|         2|
|        51|          MC_feature|                  MC|         4|         2|
|        52|           MC_weight|                  MC|         4|         2|
|        53|               end_0|                Exit|         4|         1|
|        54|              sink_0|                Sink|         1|         0|
|        55|              sink_1|                Sink|         1|         0|
|        56|              sink_2|                Sink|         1|         0|
|        57|              sink_3|                Sink|         1|         0|
|        58|              sink_4|                Sink|         1|         0|
|        59|              sink_5|                Sink|         1|         0|
+--------------------------------------------------------------------------+
Generating ./reports/histogram_area_optimized.vhd
Generating LSQ 0 component...
lsq_generate ./reports/histogram_area_optimized_lsq0_configuration.json
[[35minfo[0m] [0.026] Elaborating design...
[[35minfo[0m] [7.026] Done elaborating.
Total FIRRTL Compile Time: 31044.8 ms

Done



Done 
Exit...
Goodbye!


