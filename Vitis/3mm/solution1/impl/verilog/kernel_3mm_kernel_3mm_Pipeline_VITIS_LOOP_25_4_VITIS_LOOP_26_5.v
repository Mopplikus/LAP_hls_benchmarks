// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kernel_3mm_kernel_3mm_Pipeline_VITIS_LOOP_25_4_VITIS_LOOP_26_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        C_address0,
        C_ce0,
        C_q0,
        C_address1,
        C_ce1,
        C_q1,
        D_address0,
        D_ce0,
        D_q0,
        D_address1,
        D_ce1,
        D_q1,
        F_address0,
        F_ce0,
        F_we0,
        F_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 5'd1;
parameter    ap_ST_fsm_pp0_stage1 = 5'd2;
parameter    ap_ST_fsm_pp0_stage2 = 5'd4;
parameter    ap_ST_fsm_pp0_stage3 = 5'd8;
parameter    ap_ST_fsm_pp0_stage4 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] C_address0;
output   C_ce0;
input  [31:0] C_q0;
output  [6:0] C_address1;
output   C_ce1;
input  [31:0] C_q1;
output  [6:0] D_address0;
output   D_ce0;
input  [31:0] D_q0;
output  [6:0] D_address1;
output   D_ce1;
input  [31:0] D_q1;
output  [6:0] F_address0;
output   F_ce0;
output   F_we0;
output  [31:0] F_d0;

reg ap_idle;
reg[6:0] C_address0;
reg C_ce0;
reg[6:0] C_address1;
reg C_ce1;
reg[6:0] D_address0;
reg D_ce0;
reg[6:0] D_address1;
reg D_ce1;
reg F_ce0;
reg F_we0;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state10_pp0_stage4_iter1;
wire    ap_block_state15_pp0_stage4_iter2;
wire    ap_block_pp0_stage4_subdone;
reg   [0:0] icmp_ln25_reg_760;
reg    ap_condition_exit_pp0_iter0_stage4;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [3:0] i_reg_755;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
wire    ap_block_state16_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln25_fu_340_p2;
reg   [0:0] icmp_ln25_reg_760_pp0_iter1_reg;
wire   [3:0] add_ln25_fu_355_p2;
reg   [3:0] add_ln25_reg_764;
wire   [0:0] icmp_ln26_fu_361_p2;
reg   [0:0] icmp_ln26_reg_769;
wire   [3:0] select_ln25_fu_367_p3;
reg   [3:0] select_ln25_reg_774;
wire   [6:0] select_ln25_2_fu_401_p3;
reg   [6:0] select_ln25_2_reg_783;
wire   [6:0] zext_ln30_12_fu_409_p1;
reg   [6:0] zext_ln30_12_reg_797;
wire   [6:0] add_ln30_17_fu_413_p2;
reg   [6:0] add_ln30_17_reg_805;
wire   [3:0] select_ln25_1_fu_424_p3;
reg   [3:0] select_ln25_1_reg_810;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_state12_pp0_stage1_iter2;
wire    ap_block_pp0_stage1_11001;
wire   [6:0] add_ln25_6_fu_443_p2;
reg   [6:0] add_ln25_6_reg_826;
wire   [6:0] add_ln25_7_fu_448_p2;
reg   [6:0] add_ln25_7_reg_831;
wire   [6:0] add_ln30_18_fu_469_p2;
reg   [6:0] add_ln30_18_reg_846;
reg  signed [31:0] C_load_reg_851;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_state13_pp0_stage2_iter2;
wire    ap_block_pp0_stage2_11001;
reg  signed [31:0] C_load_1_reg_856;
wire   [6:0] add_ln25_1_fu_489_p2;
reg   [6:0] add_ln25_1_reg_861;
wire   [6:0] add_ln25_8_fu_502_p2;
reg   [6:0] add_ln25_8_reg_876;
wire   [5:0] zext_ln30_13_fu_511_p1;
reg   [5:0] zext_ln30_13_reg_881;
wire   [4:0] add_ln30_11_fu_517_p2;
reg   [4:0] add_ln30_11_reg_892;
wire   [5:0] add_ln30_12_fu_523_p2;
reg   [5:0] add_ln30_12_reg_897;
reg  signed [31:0] D_load_7_reg_907;
reg  signed [31:0] D_load_8_reg_912;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state9_pp0_stage3_iter1;
wire    ap_block_state14_pp0_stage3_iter2;
wire    ap_block_pp0_stage3_11001;
wire   [6:0] add_ln25_2_fu_537_p2;
reg   [6:0] add_ln25_2_reg_922;
wire   [6:0] add_ln25_3_fu_542_p2;
reg   [6:0] add_ln25_3_reg_927;
reg  signed [31:0] C_load_7_reg_932;
reg  signed [31:0] C_load_8_reg_937;
wire   [5:0] add_ln30_13_fu_559_p2;
reg   [5:0] add_ln30_13_reg_957;
wire   [5:0] add_ln30_14_fu_564_p2;
reg   [5:0] add_ln30_14_reg_962;
reg  signed [31:0] D_load_reg_967;
reg  signed [31:0] D_load_9_reg_972;
reg  signed [31:0] C_load_2_reg_977;
wire    ap_block_pp0_stage4_11001;
wire   [6:0] add_ln25_4_fu_601_p2;
reg   [6:0] add_ln25_4_reg_992;
wire   [6:0] add_ln25_5_fu_606_p2;
reg   [6:0] add_ln25_5_reg_997;
reg  signed [31:0] C_load_9_reg_1002;
wire   [6:0] add_ln30_15_fu_619_p2;
reg   [6:0] add_ln30_15_reg_1017;
wire   [6:0] add_ln30_16_fu_624_p2;
reg   [6:0] add_ln30_16_reg_1022;
wire   [6:0] add_ln28_1_fu_629_p2;
reg   [6:0] add_ln28_1_reg_1027;
reg   [6:0] add_ln28_1_reg_1027_pp0_iter1_reg;
reg   [6:0] add_ln28_1_reg_1027_pp0_iter2_reg;
reg  signed [31:0] D_load_1_reg_1032;
reg  signed [31:0] D_load_2_reg_1037;
reg  signed [31:0] C_load_3_reg_1042;
reg  signed [31:0] C_load_4_reg_1047;
reg  signed [31:0] D_load_3_reg_1072;
reg  signed [31:0] D_load_4_reg_1077;
reg  signed [31:0] C_load_5_reg_1082;
reg  signed [31:0] C_load_6_reg_1087;
reg  signed [31:0] D_load_5_reg_1092;
reg  signed [31:0] D_load_6_reg_1097;
wire   [31:0] grp_fu_634_p2;
reg   [31:0] mul_ln30_7_reg_1102;
wire   [31:0] grp_fu_638_p2;
reg   [31:0] mul_ln30_8_reg_1107;
wire   [31:0] grp_fu_658_p2;
reg   [31:0] mul_ln30_reg_1112;
wire   [31:0] grp_fu_662_p2;
reg   [31:0] mul_ln30_9_reg_1117;
wire   [31:0] grp_fu_666_p2;
reg   [31:0] mul_ln30_1_reg_1122;
wire   [31:0] grp_fu_670_p2;
reg   [31:0] mul_ln30_2_reg_1127;
wire   [31:0] add_ln30_6_fu_694_p2;
reg   [31:0] add_ln30_6_reg_1132;
wire   [31:0] grp_fu_674_p2;
reg   [31:0] mul_ln30_3_reg_1137;
wire   [31:0] grp_fu_678_p2;
reg   [31:0] mul_ln30_4_reg_1142;
wire   [31:0] add_ln30_fu_699_p2;
reg   [31:0] add_ln30_reg_1147;
wire   [31:0] grp_fu_682_p2;
reg   [31:0] mul_ln30_5_reg_1152;
wire   [31:0] grp_fu_686_p2;
reg   [31:0] mul_ln30_6_reg_1157;
wire   [31:0] add_ln30_2_fu_707_p2;
reg   [31:0] add_ln30_2_reg_1162;
wire   [31:0] add_ln30_7_fu_716_p2;
reg   [31:0] add_ln30_7_reg_1167;
wire   [31:0] add_ln30_8_fu_725_p2;
reg   [31:0] add_ln30_8_reg_1172;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln30_2_fu_429_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln30_3_fu_438_p1;
wire   [63:0] zext_ln30_21_fu_453_p1;
wire   [63:0] zext_ln30_22_fu_464_p1;
wire   [63:0] zext_ln30_9_fu_494_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln30_10_fu_498_p1;
wire   [63:0] j_1_cast_fu_507_p1;
wire   [63:0] zext_ln30_23_fu_529_p1;
wire   [63:0] zext_ln30_4_fu_533_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln30_11_fu_547_p1;
wire   [63:0] zext_ln30_15_fu_551_p1;
wire   [63:0] zext_ln30_16_fu_555_p1;
wire   [63:0] zext_ln30_5_fu_593_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln30_6_fu_597_p1;
wire   [63:0] zext_ln30_17_fu_611_p1;
wire   [63:0] zext_ln30_18_fu_615_p1;
wire   [63:0] zext_ln30_7_fu_642_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln30_8_fu_646_p1;
wire   [63:0] zext_ln30_19_fu_650_p1;
wire   [63:0] zext_ln30_20_fu_654_p1;
wire   [63:0] zext_ln28_1_fu_730_p1;
reg   [3:0] j_fu_90;
wire   [3:0] add_ln26_fu_474_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_j_load;
reg   [3:0] i_1_fu_94;
reg   [3:0] ap_sig_allocacmp_i;
reg   [6:0] indvar_flatten26_fu_98;
wire   [6:0] add_ln25_9_fu_346_p2;
reg   [6:0] ap_sig_allocacmp_indvar_flatten26_load;
wire   [4:0] tmp_8_fu_322_p3;
wire   [6:0] tmp_7_fu_314_p3;
wire   [6:0] zext_ln30_fu_330_p1;
wire   [4:0] tmp_s_fu_383_p3;
wire   [6:0] tmp_9_fu_375_p3;
wire   [6:0] zext_ln30_1_fu_391_p1;
wire   [6:0] add_ln30_10_fu_395_p2;
wire   [6:0] add_ln30_9_fu_334_p2;
wire   [6:0] or_ln25_fu_433_p2;
wire   [6:0] tmp_13_cast_fu_457_p3;
wire   [4:0] zext_ln30_14_fu_514_p1;
wire   [4:0] tmp_10_fu_576_p3;
wire   [6:0] tmp_6_fu_569_p3;
wire   [6:0] zext_ln28_fu_583_p1;
wire   [6:0] add_ln28_fu_587_p2;
wire   [31:0] add_ln30_5_fu_690_p2;
wire   [31:0] add_ln30_1_fu_703_p2;
wire   [31:0] add_ln30_4_fu_712_p2;
wire   [31:0] add_ln30_3_fu_721_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter2_stage0;
reg    ap_idle_pp0_0to1;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0_1to3;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

kernel_3mm_mul_32s_32s_32_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_5_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(D_load_7_reg_907),
    .din1(C_load_7_reg_932),
    .ce(1'b1),
    .dout(grp_fu_634_p2)
);

kernel_3mm_mul_32s_32s_32_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_5_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(D_load_8_reg_912),
    .din1(C_load_8_reg_937),
    .ce(1'b1),
    .dout(grp_fu_638_p2)
);

kernel_3mm_mul_32s_32s_32_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_5_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(D_load_reg_967),
    .din1(C_load_reg_851),
    .ce(1'b1),
    .dout(grp_fu_658_p2)
);

kernel_3mm_mul_32s_32s_32_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_5_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(D_load_9_reg_972),
    .din1(C_load_9_reg_1002),
    .ce(1'b1),
    .dout(grp_fu_662_p2)
);

kernel_3mm_mul_32s_32s_32_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_5_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(D_load_1_reg_1032),
    .din1(C_load_1_reg_856),
    .ce(1'b1),
    .dout(grp_fu_666_p2)
);

kernel_3mm_mul_32s_32s_32_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_5_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(D_load_2_reg_1037),
    .din1(C_load_2_reg_977),
    .ce(1'b1),
    .dout(grp_fu_670_p2)
);

kernel_3mm_mul_32s_32s_32_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_5_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(D_load_3_reg_1072),
    .din1(C_load_3_reg_1042),
    .ce(1'b1),
    .dout(grp_fu_674_p2)
);

kernel_3mm_mul_32s_32s_32_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_5_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(D_load_4_reg_1077),
    .din1(C_load_4_reg_1047),
    .ce(1'b1),
    .dout(grp_fu_678_p2)
);

kernel_3mm_mul_32s_32s_32_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_5_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(D_load_5_reg_1092),
    .din1(C_load_5_reg_1082),
    .ce(1'b1),
    .dout(grp_fu_682_p2)
);

kernel_3mm_mul_32s_32s_32_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_5_1_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(D_load_6_reg_1097),
    .din1(C_load_6_reg_1087),
    .ce(1'b1),
    .dout(grp_fu_686_p2)
);

kernel_3mm_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage4),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage4)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to1 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter2_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to1 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter2_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_1_fu_94 <= 4'd0;
    end else if (((icmp_ln25_reg_760 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_1_fu_94 <= select_ln25_1_fu_424_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln25_fu_340_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten26_fu_98 <= add_ln25_9_fu_346_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten26_fu_98 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_90 <= 4'd0;
    end else if (((icmp_ln25_reg_760 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        j_fu_90 <= add_ln26_fu_474_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_reg_760 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        C_load_1_reg_856 <= C_q0;
        C_load_reg_851 <= C_q1;
        D_load_7_reg_907 <= D_q1;
        D_load_8_reg_912 <= D_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_reg_760 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        C_load_2_reg_977 <= C_q1;
        C_load_9_reg_1002 <= C_q0;
        D_load_1_reg_1032 <= D_q1;
        D_load_2_reg_1037 <= D_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_load_3_reg_1042 <= C_q1;
        C_load_4_reg_1047 <= C_q0;
        D_load_3_reg_1072 <= D_q1;
        D_load_4_reg_1077 <= D_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        C_load_5_reg_1082 <= C_q1;
        C_load_6_reg_1087 <= C_q0;
        D_load_5_reg_1092 <= D_q1;
        D_load_6_reg_1097 <= D_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_reg_760 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        C_load_7_reg_932 <= C_q1;
        C_load_8_reg_937 <= C_q0;
        D_load_9_reg_972 <= D_q0;
        D_load_reg_967 <= D_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_reg_760 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln25_1_reg_861[6 : 1] <= add_ln25_1_fu_489_p2[6 : 1];
        add_ln25_8_reg_876[6 : 1] <= add_ln25_8_fu_502_p2[6 : 1];
        add_ln30_11_reg_892 <= add_ln30_11_fu_517_p2;
        add_ln30_12_reg_897 <= add_ln30_12_fu_523_p2;
        zext_ln30_13_reg_881[3 : 0] <= zext_ln30_13_fu_511_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_reg_760 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln25_2_reg_922[6 : 1] <= add_ln25_2_fu_537_p2[6 : 1];
        add_ln25_3_reg_927[6 : 1] <= add_ln25_3_fu_542_p2[6 : 1];
        add_ln30_13_reg_957 <= add_ln30_13_fu_559_p2;
        add_ln30_14_reg_962 <= add_ln30_14_fu_564_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_reg_760 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln25_4_reg_992[6 : 1] <= add_ln25_4_fu_601_p2[6 : 1];
        add_ln25_5_reg_997[6 : 1] <= add_ln25_5_fu_606_p2[6 : 1];
        add_ln28_1_reg_1027 <= add_ln28_1_fu_629_p2;
        add_ln30_15_reg_1017 <= add_ln30_15_fu_619_p2;
        add_ln30_16_reg_1022 <= add_ln30_16_fu_624_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_reg_760 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln25_6_reg_826[6 : 1] <= add_ln25_6_fu_443_p2[6 : 1];
        add_ln25_7_reg_831[6 : 1] <= add_ln25_7_fu_448_p2[6 : 1];
        add_ln30_18_reg_846 <= add_ln30_18_fu_469_p2;
        select_ln25_1_reg_810 <= select_ln25_1_fu_424_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_340_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln25_reg_764 <= add_ln25_fu_355_p2;
        add_ln30_17_reg_805 <= add_ln30_17_fu_413_p2;
        icmp_ln26_reg_769 <= icmp_ln26_fu_361_p2;
        select_ln25_2_reg_783[6 : 1] <= select_ln25_2_fu_401_p3[6 : 1];
        select_ln25_reg_774 <= select_ln25_fu_367_p3;
        zext_ln30_12_reg_797[3 : 0] <= zext_ln30_12_fu_409_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln28_1_reg_1027_pp0_iter1_reg <= add_ln28_1_reg_1027;
        add_ln28_1_reg_1027_pp0_iter2_reg <= add_ln28_1_reg_1027_pp0_iter1_reg;
        add_ln30_8_reg_1172 <= add_ln30_8_fu_725_p2;
        mul_ln30_9_reg_1117 <= grp_fu_662_p2;
        mul_ln30_reg_1112 <= grp_fu_658_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln30_2_reg_1162 <= add_ln30_2_fu_707_p2;
        mul_ln30_5_reg_1152 <= grp_fu_682_p2;
        mul_ln30_6_reg_1157 <= grp_fu_686_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln30_6_reg_1132 <= add_ln30_6_fu_694_p2;
        i_reg_755 <= ap_sig_allocacmp_i;
        icmp_ln25_reg_760 <= icmp_ln25_fu_340_p2;
        icmp_ln25_reg_760_pp0_iter1_reg <= icmp_ln25_reg_760;
        mul_ln30_1_reg_1122 <= grp_fu_666_p2;
        mul_ln30_2_reg_1127 <= grp_fu_670_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln30_7_reg_1167 <= add_ln30_7_fu_716_p2;
        mul_ln30_7_reg_1102 <= grp_fu_634_p2;
        mul_ln30_8_reg_1107 <= grp_fu_638_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln30_reg_1147 <= add_ln30_fu_699_p2;
        mul_ln30_3_reg_1137 <= grp_fu_674_p2;
        mul_ln30_4_reg_1142 <= grp_fu_678_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_address0 = zext_ln30_8_fu_646_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        C_address0 = zext_ln30_6_fu_597_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        C_address0 = zext_ln30_11_fu_547_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        C_address0 = zext_ln30_10_fu_498_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        C_address0 = zext_ln30_3_fu_438_p1;
    end else begin
        C_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_address1 = zext_ln30_7_fu_642_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        C_address1 = zext_ln30_5_fu_593_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        C_address1 = zext_ln30_4_fu_533_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        C_address1 = zext_ln30_9_fu_494_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        C_address1 = zext_ln30_2_fu_429_p1;
    end else begin
        C_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        C_ce0 = 1'b1;
    end else begin
        C_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        C_ce1 = 1'b1;
    end else begin
        C_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        D_address0 = zext_ln30_20_fu_654_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        D_address0 = zext_ln30_18_fu_615_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        D_address0 = zext_ln30_16_fu_555_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        D_address0 = zext_ln30_23_fu_529_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        D_address0 = zext_ln30_22_fu_464_p1;
    end else begin
        D_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        D_address1 = zext_ln30_19_fu_650_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        D_address1 = zext_ln30_17_fu_611_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        D_address1 = zext_ln30_15_fu_551_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        D_address1 = j_1_cast_fu_507_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        D_address1 = zext_ln30_21_fu_453_p1;
    end else begin
        D_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        D_ce0 = 1'b1;
    end else begin
        D_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        D_ce1 = 1'b1;
    end else begin
        D_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        F_ce0 = 1'b1;
    end else begin
        F_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        F_we0 = 1'b1;
    end else begin
        F_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln25_reg_760 == 1'd1) & (1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_condition_exit_pp0_iter0_stage4 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage4 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln25_reg_760_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to3 = 1'b1;
    end else begin
        ap_idle_pp0_1to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i = 4'd0;
    end else begin
        ap_sig_allocacmp_i = i_1_fu_94;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten26_load = 7'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten26_load = indvar_flatten26_fu_98;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 4'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_90;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to1 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter2_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to3 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F_address0 = zext_ln28_1_fu_730_p1;

assign F_d0 = add_ln30_8_reg_1172;

assign add_ln25_1_fu_489_p2 = (select_ln25_2_reg_783 + 7'd2);

assign add_ln25_2_fu_537_p2 = (select_ln25_2_reg_783 + 7'd3);

assign add_ln25_3_fu_542_p2 = (select_ln25_2_reg_783 + 7'd4);

assign add_ln25_4_fu_601_p2 = (select_ln25_2_reg_783 + 7'd5);

assign add_ln25_5_fu_606_p2 = (select_ln25_2_reg_783 + 7'd6);

assign add_ln25_6_fu_443_p2 = (select_ln25_2_reg_783 + 7'd7);

assign add_ln25_7_fu_448_p2 = (select_ln25_2_reg_783 + 7'd8);

assign add_ln25_8_fu_502_p2 = (select_ln25_2_reg_783 + 7'd9);

assign add_ln25_9_fu_346_p2 = (ap_sig_allocacmp_indvar_flatten26_load + 7'd1);

assign add_ln25_fu_355_p2 = (ap_sig_allocacmp_i + 4'd1);

assign add_ln26_fu_474_p2 = (select_ln25_reg_774 + 4'd1);

assign add_ln28_1_fu_629_p2 = (add_ln28_fu_587_p2 + zext_ln30_12_reg_797);

assign add_ln28_fu_587_p2 = (tmp_6_fu_569_p3 + zext_ln28_fu_583_p1);

assign add_ln30_10_fu_395_p2 = (tmp_9_fu_375_p3 + zext_ln30_1_fu_391_p1);

assign add_ln30_11_fu_517_p2 = (zext_ln30_14_fu_514_p1 + 5'd10);

assign add_ln30_12_fu_523_p2 = (zext_ln30_13_fu_511_p1 + 6'd20);

assign add_ln30_13_fu_559_p2 = (zext_ln30_13_reg_881 + 6'd30);

assign add_ln30_14_fu_564_p2 = ($signed(zext_ln30_13_reg_881) + $signed(6'd40));

assign add_ln30_15_fu_619_p2 = (zext_ln30_12_reg_797 + 7'd50);

assign add_ln30_16_fu_624_p2 = (zext_ln30_12_reg_797 + 7'd60);

assign add_ln30_17_fu_413_p2 = ($signed(zext_ln30_12_fu_409_p1) + $signed(7'd70));

assign add_ln30_18_fu_469_p2 = ($signed(zext_ln30_12_reg_797) + $signed(7'd90));

assign add_ln30_1_fu_703_p2 = (mul_ln30_3_reg_1137 + mul_ln30_4_reg_1142);

assign add_ln30_2_fu_707_p2 = (add_ln30_1_fu_703_p2 + mul_ln30_2_reg_1127);

assign add_ln30_3_fu_721_p2 = (add_ln30_2_reg_1162 + add_ln30_reg_1147);

assign add_ln30_4_fu_712_p2 = (mul_ln30_5_reg_1152 + mul_ln30_6_reg_1157);

assign add_ln30_5_fu_690_p2 = (mul_ln30_8_reg_1107 + mul_ln30_9_reg_1117);

assign add_ln30_6_fu_694_p2 = (add_ln30_5_fu_690_p2 + mul_ln30_7_reg_1102);

assign add_ln30_7_fu_716_p2 = (add_ln30_6_reg_1132 + add_ln30_4_fu_712_p2);

assign add_ln30_8_fu_725_p2 = (add_ln30_7_reg_1167 + add_ln30_3_fu_721_p2);

assign add_ln30_9_fu_334_p2 = (tmp_7_fu_314_p3 + zext_ln30_fu_330_p1);

assign add_ln30_fu_699_p2 = (mul_ln30_1_reg_1122 + mul_ln30_reg_1112);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage4;

assign icmp_ln25_fu_340_p2 = ((ap_sig_allocacmp_indvar_flatten26_load == 7'd100) ? 1'b1 : 1'b0);

assign icmp_ln26_fu_361_p2 = ((ap_sig_allocacmp_j_load == 4'd10) ? 1'b1 : 1'b0);

assign j_1_cast_fu_507_p1 = select_ln25_reg_774;

assign or_ln25_fu_433_p2 = (select_ln25_2_reg_783 | 7'd1);

assign select_ln25_1_fu_424_p3 = ((icmp_ln26_reg_769[0:0] == 1'b1) ? add_ln25_reg_764 : i_reg_755);

assign select_ln25_2_fu_401_p3 = ((icmp_ln26_fu_361_p2[0:0] == 1'b1) ? add_ln30_10_fu_395_p2 : add_ln30_9_fu_334_p2);

assign select_ln25_fu_367_p3 = ((icmp_ln26_fu_361_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_j_load);

assign tmp_10_fu_576_p3 = {{select_ln25_1_reg_810}, {1'd0}};

assign tmp_13_cast_fu_457_p3 = {{3'd5}, {select_ln25_reg_774}};

assign tmp_6_fu_569_p3 = {{select_ln25_1_reg_810}, {3'd0}};

assign tmp_7_fu_314_p3 = {{ap_sig_allocacmp_i}, {3'd0}};

assign tmp_8_fu_322_p3 = {{ap_sig_allocacmp_i}, {1'd0}};

assign tmp_9_fu_375_p3 = {{add_ln25_fu_355_p2}, {3'd0}};

assign tmp_s_fu_383_p3 = {{add_ln25_fu_355_p2}, {1'd0}};

assign zext_ln28_1_fu_730_p1 = add_ln28_1_reg_1027_pp0_iter2_reg;

assign zext_ln28_fu_583_p1 = tmp_10_fu_576_p3;

assign zext_ln30_10_fu_498_p1 = add_ln25_7_reg_831;

assign zext_ln30_11_fu_547_p1 = add_ln25_8_reg_876;

assign zext_ln30_12_fu_409_p1 = select_ln25_fu_367_p3;

assign zext_ln30_13_fu_511_p1 = select_ln25_reg_774;

assign zext_ln30_14_fu_514_p1 = select_ln25_reg_774;

assign zext_ln30_15_fu_551_p1 = add_ln30_11_reg_892;

assign zext_ln30_16_fu_555_p1 = add_ln30_12_reg_897;

assign zext_ln30_17_fu_611_p1 = add_ln30_13_reg_957;

assign zext_ln30_18_fu_615_p1 = add_ln30_14_reg_962;

assign zext_ln30_19_fu_650_p1 = add_ln30_15_reg_1017;

assign zext_ln30_1_fu_391_p1 = tmp_s_fu_383_p3;

assign zext_ln30_20_fu_654_p1 = add_ln30_16_reg_1022;

assign zext_ln30_21_fu_453_p1 = add_ln30_17_reg_805;

assign zext_ln30_22_fu_464_p1 = tmp_13_cast_fu_457_p3;

assign zext_ln30_23_fu_529_p1 = add_ln30_18_reg_846;

assign zext_ln30_2_fu_429_p1 = select_ln25_2_reg_783;

assign zext_ln30_3_fu_438_p1 = or_ln25_fu_433_p2;

assign zext_ln30_4_fu_533_p1 = add_ln25_1_reg_861;

assign zext_ln30_5_fu_593_p1 = add_ln25_2_reg_922;

assign zext_ln30_6_fu_597_p1 = add_ln25_3_reg_927;

assign zext_ln30_7_fu_642_p1 = add_ln25_4_reg_992;

assign zext_ln30_8_fu_646_p1 = add_ln25_5_reg_997;

assign zext_ln30_9_fu_494_p1 = add_ln25_6_reg_826;

assign zext_ln30_fu_330_p1 = tmp_8_fu_322_p3;

always @ (posedge ap_clk) begin
    select_ln25_2_reg_783[0] <= 1'b0;
    zext_ln30_12_reg_797[6:4] <= 3'b000;
    add_ln25_6_reg_826[0] <= 1'b1;
    add_ln25_7_reg_831[0] <= 1'b0;
    add_ln25_1_reg_861[0] <= 1'b0;
    add_ln25_8_reg_876[0] <= 1'b1;
    zext_ln30_13_reg_881[5:4] <= 2'b00;
    add_ln25_2_reg_922[0] <= 1'b1;
    add_ln25_3_reg_927[0] <= 1'b0;
    add_ln25_4_reg_992[0] <= 1'b1;
    add_ln25_5_reg_997[0] <= 1'b0;
end

endmodule //kernel_3mm_kernel_3mm_Pipeline_VITIS_LOOP_25_4_VITIS_LOOP_26_5
