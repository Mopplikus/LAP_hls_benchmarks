// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="histogram_histogram,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.814000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=383,HLS_SYN_LUT=309,HLS_VERSION=2022_2}" *)

module histogram (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        feature_address0,
        feature_ce0,
        feature_q0,
        weight_address0,
        weight_ce0,
        weight_q0,
        hist_address0,
        hist_ce0,
        hist_we0,
        hist_d0,
        hist_q0,
        n,
        ap_return
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] feature_address0;
output   feature_ce0;
input  [31:0] feature_q0;
output  [9:0] weight_address0;
output   weight_ce0;
input  [31:0] weight_q0;
output  [9:0] hist_address0;
output   hist_ce0;
output   hist_we0;
output  [31:0] hist_d0;
input  [31:0] hist_q0;
input  [31:0] n;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln13_fu_58_p2;
reg   [0:0] icmp_ln13_reg_74;
wire   [30:0] trunc_ln13_fu_64_p1;
reg   [30:0] trunc_ln13_reg_78;
wire    ap_CS_fsm_state2;
wire    grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_ap_start;
wire    grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_ap_done;
wire    grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_ap_idle;
wire    grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_ap_ready;
wire   [9:0] grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_feature_address0;
wire    grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_feature_ce0;
wire   [9:0] grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_weight_address0;
wire    grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_weight_ce0;
wire   [9:0] grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_hist_address0;
wire    grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_hist_ce0;
wire    grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_hist_we0;
wire   [31:0] grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_hist_d0;
reg   [31:0] ap_phi_mux_i_0_lcssa_phi_fu_40_p4;
reg   [31:0] i_0_lcssa_reg_36;
wire    ap_CS_fsm_state3;
reg    ap_block_state3_on_subcall_done;
reg    grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_ap_start_reg;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_ap_start_reg = 1'b0;
end

histogram_histogram_Pipeline_VITIS_LOOP_13_1 grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_ap_start),
    .ap_done(grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_ap_done),
    .ap_idle(grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_ap_idle),
    .ap_ready(grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_ap_ready),
    .trunc_ln(trunc_ln13_reg_78),
    .feature_address0(grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_feature_address0),
    .feature_ce0(grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_feature_ce0),
    .feature_q0(feature_q0),
    .weight_address0(grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_weight_address0),
    .weight_ce0(grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_weight_ce0),
    .weight_q0(weight_q0),
    .hist_address0(grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_hist_address0),
    .hist_ce0(grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_hist_ce0),
    .hist_we0(grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_hist_we0),
    .hist_d0(grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_hist_d0),
    .hist_q0(hist_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_ap_start_reg <= 1'b1;
        end else if ((grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_ap_ready == 1'b1)) begin
            grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (icmp_ln13_fu_58_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_lcssa_reg_36 <= 32'd0;
    end else if (((1'b0 == ap_block_state3_on_subcall_done) & (icmp_ln13_reg_74 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_0_lcssa_reg_36 <= n;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        icmp_ln13_reg_74 <= icmp_ln13_fu_58_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        trunc_ln13_reg_78 <= trunc_ln13_fu_64_p1;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state3_on_subcall_done)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln13_reg_74 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_phi_mux_i_0_lcssa_phi_fu_40_p4 = n;
    end else begin
        ap_phi_mux_i_0_lcssa_phi_fu_40_p4 = i_0_lcssa_reg_36;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (icmp_ln13_fu_58_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((ap_start == 1'b1) & (icmp_ln13_fu_58_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state3_on_subcall_done = ((grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_ap_done == 1'b0) & (icmp_ln13_reg_74 == 1'd1));
end

assign ap_return = ap_phi_mux_i_0_lcssa_phi_fu_40_p4;

assign feature_address0 = grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_feature_address0;

assign feature_ce0 = grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_feature_ce0;

assign grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_ap_start = grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_ap_start_reg;

assign hist_address0 = grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_hist_address0;

assign hist_ce0 = grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_hist_ce0;

assign hist_d0 = grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_hist_d0;

assign hist_we0 = grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_hist_we0;

assign icmp_ln13_fu_58_p2 = (($signed(n) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign trunc_ln13_fu_64_p1 = n[30:0];

assign weight_address0 = grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_weight_address0;

assign weight_ce0 = grp_histogram_Pipeline_VITIS_LOOP_13_1_fu_47_weight_ce0;

endmodule //histogram
