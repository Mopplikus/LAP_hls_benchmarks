// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="jacobi_1d_jacobi_1d,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xck24-ubva530-2LV-c,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.474000,HLS_SYN_LAT=910,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=156,HLS_SYN_LUT=390,HLS_VERSION=2022_2}" *)

module jacobi_1d (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_1_address0,
        A_1_ce0,
        A_1_q0,
        A_1_address1,
        A_1_ce1,
        A_1_q1,
        A_2_address0,
        A_2_ce0,
        A_2_we0,
        A_2_d0,
        B_address0,
        B_ce0,
        B_we0,
        B_d0,
        B_q0
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] A_1_address0;
output   A_1_ce0;
input  [31:0] A_1_q0;
output  [6:0] A_1_address1;
output   A_1_ce1;
input  [31:0] A_1_q1;
output  [6:0] A_2_address0;
output   A_2_ce0;
output   A_2_we0;
output  [31:0] A_2_d0;
output  [6:0] B_address0;
output   B_ce0;
output   B_we0;
output  [31:0] B_d0;
input  [31:0] B_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[6:0] B_address0;
reg B_ce0;
reg B_we0;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_ap_start;
wire    grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_ap_done;
wire    grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_ap_idle;
wire    grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_ap_ready;
wire   [6:0] grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_A_1_address0;
wire    grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_A_1_ce0;
wire   [6:0] grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_A_1_address1;
wire    grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_A_1_ce1;
wire   [6:0] grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_B_address0;
wire    grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_B_ce0;
wire    grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_B_we0;
wire   [31:0] grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_B_d0;
wire    grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_ap_start;
wire    grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_ap_done;
wire    grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_ap_idle;
wire    grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_ap_ready;
wire   [6:0] grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_B_address0;
wire    grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_B_ce0;
wire   [6:0] grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_A_2_address0;
wire    grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_A_2_ce0;
wire    grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_A_2_we0;
wire   [31:0] grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_A_2_d0;
reg    grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_ap_start_reg;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln8_fu_70_p2;
wire    ap_CS_fsm_state3;
reg    grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_ap_start_reg;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
reg   [1:0] t_fu_42;
wire   [1:0] t_2_fu_76_p2;
reg   [4:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_ap_start_reg = 1'b0;
#0 grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_ap_start_reg = 1'b0;
end

jacobi_1d_jacobi_1d_Pipeline_VITIS_LOOP_11_2 grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_ap_start),
    .ap_done(grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_ap_done),
    .ap_idle(grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_ap_idle),
    .ap_ready(grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_ap_ready),
    .A_1_address0(grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_A_1_address0),
    .A_1_ce0(grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_A_1_ce0),
    .A_1_q0(A_1_q0),
    .A_1_address1(grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_A_1_address1),
    .A_1_ce1(grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_A_1_ce1),
    .A_1_q1(A_1_q1),
    .B_address0(grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_B_address0),
    .B_ce0(grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_B_ce0),
    .B_we0(grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_B_we0),
    .B_d0(grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_B_d0)
);

jacobi_1d_jacobi_1d_Pipeline_VITIS_LOOP_15_3 grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_ap_start),
    .ap_done(grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_ap_done),
    .ap_idle(grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_ap_idle),
    .ap_ready(grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_ap_ready),
    .B_address0(grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_B_address0),
    .B_ce0(grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_B_ce0),
    .B_q0(B_q0),
    .A_2_address0(grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_A_2_address0),
    .A_2_ce0(grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_A_2_ce0),
    .A_2_we0(grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_A_2_we0),
    .A_2_d0(grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_A_2_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln8_fu_70_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_ap_start_reg <= 1'b1;
        end else if ((grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_ap_ready == 1'b1)) begin
            grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_ap_start_reg <= 1'b1;
        end else if ((grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_ap_ready == 1'b1)) begin
            grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        t_fu_42 <= 2'd0;
    end else if (((icmp_ln8_fu_70_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_fu_42 <= t_2_fu_76_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        B_address0 = grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_B_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        B_address0 = grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_B_address0;
    end else begin
        B_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        B_ce0 = grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_B_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        B_ce0 = grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_B_ce0;
    end else begin
        B_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        B_we0 = grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_B_we0;
    end else begin
        B_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln8_fu_70_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln8_fu_70_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln8_fu_70_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_1_address0 = grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_A_1_address0;

assign A_1_address1 = grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_A_1_address1;

assign A_1_ce0 = grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_A_1_ce0;

assign A_1_ce1 = grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_A_1_ce1;

assign A_2_address0 = grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_A_2_address0;

assign A_2_ce0 = grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_A_2_ce0;

assign A_2_d0 = grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_A_2_d0;

assign A_2_we0 = grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_A_2_we0;

assign B_d0 = grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_B_d0;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_ap_start = grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_46_ap_start_reg;

assign grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_ap_start = grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_54_ap_start_reg;

assign icmp_ln8_fu_70_p2 = ((t_fu_42 == 2'd3) ? 1'b1 : 1'b0);

assign t_2_fu_76_p2 = (t_fu_42 + 2'd1);

endmodule //jacobi_1d
