// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="histogram_histogram,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xck24-ubva530-2LV-c,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.456000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=0,HLS_SYN_FF=733,HLS_SYN_LUT=815,HLS_VERSION=2022_2}" *)

module histogram (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        feature_address0,
        feature_ce0,
        feature_q0,
        weight_address0,
        weight_ce0,
        weight_q0,
        hist_address0,
        hist_ce0,
        hist_q0,
        n,
        out_r_address0,
        out_r_ce0,
        out_r_we0,
        out_r_d0
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] feature_address0;
output   feature_ce0;
input  [31:0] feature_q0;
output  [6:0] weight_address0;
output   weight_ce0;
input  [31:0] weight_q0;
output  [6:0] hist_address0;
output   hist_ce0;
input  [31:0] hist_q0;
input  [31:0] n;
output  [6:0] out_r_address0;
output   out_r_ce0;
output   out_r_we0;
output  [31:0] out_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state3;
wire   [0:0] or_ln17_fu_115_p2;
reg   [0:0] or_ln17_reg_127;
reg   [6:0] hist_local_address0;
reg    hist_local_ce0;
reg    hist_local_we0;
reg   [31:0] hist_local_d0;
wire   [31:0] hist_local_q0;
wire    grp_histogram_Pipeline_LOOP_INIT_fu_58_ap_start;
wire    grp_histogram_Pipeline_LOOP_INIT_fu_58_ap_done;
wire    grp_histogram_Pipeline_LOOP_INIT_fu_58_ap_idle;
wire    grp_histogram_Pipeline_LOOP_INIT_fu_58_ap_ready;
wire   [6:0] grp_histogram_Pipeline_LOOP_INIT_fu_58_hist_address0;
wire    grp_histogram_Pipeline_LOOP_INIT_fu_58_hist_ce0;
wire   [6:0] grp_histogram_Pipeline_LOOP_INIT_fu_58_hist_local_address0;
wire    grp_histogram_Pipeline_LOOP_INIT_fu_58_hist_local_ce0;
wire    grp_histogram_Pipeline_LOOP_INIT_fu_58_hist_local_we0;
wire   [31:0] grp_histogram_Pipeline_LOOP_INIT_fu_58_hist_local_d0;
wire    grp_histogram_Pipeline_LOOP_I_fu_66_ap_start;
wire    grp_histogram_Pipeline_LOOP_I_fu_66_ap_done;
wire    grp_histogram_Pipeline_LOOP_I_fu_66_ap_idle;
wire    grp_histogram_Pipeline_LOOP_I_fu_66_ap_ready;
wire   [6:0] grp_histogram_Pipeline_LOOP_I_fu_66_feature_address0;
wire    grp_histogram_Pipeline_LOOP_I_fu_66_feature_ce0;
wire   [6:0] grp_histogram_Pipeline_LOOP_I_fu_66_weight_address0;
wire    grp_histogram_Pipeline_LOOP_I_fu_66_weight_ce0;
wire   [6:0] grp_histogram_Pipeline_LOOP_I_fu_66_hist_local_address0;
wire    grp_histogram_Pipeline_LOOP_I_fu_66_hist_local_ce0;
wire    grp_histogram_Pipeline_LOOP_I_fu_66_hist_local_we0;
wire   [31:0] grp_histogram_Pipeline_LOOP_I_fu_66_hist_local_d0;
wire    grp_histogram_Pipeline_LOOP_END_fu_78_ap_start;
wire    grp_histogram_Pipeline_LOOP_END_fu_78_ap_done;
wire    grp_histogram_Pipeline_LOOP_END_fu_78_ap_idle;
wire    grp_histogram_Pipeline_LOOP_END_fu_78_ap_ready;
wire   [6:0] grp_histogram_Pipeline_LOOP_END_fu_78_hist_local_address0;
wire    grp_histogram_Pipeline_LOOP_END_fu_78_hist_local_ce0;
wire   [6:0] grp_histogram_Pipeline_LOOP_END_fu_78_out_r_address0;
wire    grp_histogram_Pipeline_LOOP_END_fu_78_out_r_ce0;
wire    grp_histogram_Pipeline_LOOP_END_fu_78_out_r_we0;
wire   [31:0] grp_histogram_Pipeline_LOOP_END_fu_78_out_r_d0;
reg    grp_histogram_Pipeline_LOOP_INIT_fu_58_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_histogram_Pipeline_LOOP_I_fu_66_ap_start_reg;
wire    ap_CS_fsm_state4;
reg    grp_histogram_Pipeline_LOOP_END_fu_78_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire   [31:0] bitcast_ln17_fu_85_p1;
wire   [7:0] tmp_1_fu_89_p4;
wire   [22:0] trunc_ln17_fu_99_p1;
wire   [0:0] icmp_ln17_2_fu_109_p2;
wire   [0:0] icmp_ln17_fu_103_p2;
reg   [5:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 grp_histogram_Pipeline_LOOP_INIT_fu_58_ap_start_reg = 1'b0;
#0 grp_histogram_Pipeline_LOOP_I_fu_66_ap_start_reg = 1'b0;
#0 grp_histogram_Pipeline_LOOP_END_fu_78_ap_start_reg = 1'b0;
end

histogram_hist_local_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
hist_local_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(hist_local_address0),
    .ce0(hist_local_ce0),
    .we0(hist_local_we0),
    .d0(hist_local_d0),
    .q0(hist_local_q0)
);

histogram_histogram_Pipeline_LOOP_INIT grp_histogram_Pipeline_LOOP_INIT_fu_58(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_histogram_Pipeline_LOOP_INIT_fu_58_ap_start),
    .ap_done(grp_histogram_Pipeline_LOOP_INIT_fu_58_ap_done),
    .ap_idle(grp_histogram_Pipeline_LOOP_INIT_fu_58_ap_idle),
    .ap_ready(grp_histogram_Pipeline_LOOP_INIT_fu_58_ap_ready),
    .hist_address0(grp_histogram_Pipeline_LOOP_INIT_fu_58_hist_address0),
    .hist_ce0(grp_histogram_Pipeline_LOOP_INIT_fu_58_hist_ce0),
    .hist_q0(hist_q0),
    .hist_local_address0(grp_histogram_Pipeline_LOOP_INIT_fu_58_hist_local_address0),
    .hist_local_ce0(grp_histogram_Pipeline_LOOP_INIT_fu_58_hist_local_ce0),
    .hist_local_we0(grp_histogram_Pipeline_LOOP_INIT_fu_58_hist_local_we0),
    .hist_local_d0(grp_histogram_Pipeline_LOOP_INIT_fu_58_hist_local_d0)
);

histogram_histogram_Pipeline_LOOP_I grp_histogram_Pipeline_LOOP_I_fu_66(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_histogram_Pipeline_LOOP_I_fu_66_ap_start),
    .ap_done(grp_histogram_Pipeline_LOOP_I_fu_66_ap_done),
    .ap_idle(grp_histogram_Pipeline_LOOP_I_fu_66_ap_idle),
    .ap_ready(grp_histogram_Pipeline_LOOP_I_fu_66_ap_ready),
    .or_ln17_1(or_ln17_reg_127),
    .n(n),
    .feature_address0(grp_histogram_Pipeline_LOOP_I_fu_66_feature_address0),
    .feature_ce0(grp_histogram_Pipeline_LOOP_I_fu_66_feature_ce0),
    .feature_q0(feature_q0),
    .weight_address0(grp_histogram_Pipeline_LOOP_I_fu_66_weight_address0),
    .weight_ce0(grp_histogram_Pipeline_LOOP_I_fu_66_weight_ce0),
    .weight_q0(weight_q0),
    .hist_local_address0(grp_histogram_Pipeline_LOOP_I_fu_66_hist_local_address0),
    .hist_local_ce0(grp_histogram_Pipeline_LOOP_I_fu_66_hist_local_ce0),
    .hist_local_we0(grp_histogram_Pipeline_LOOP_I_fu_66_hist_local_we0),
    .hist_local_d0(grp_histogram_Pipeline_LOOP_I_fu_66_hist_local_d0),
    .hist_local_q0(hist_local_q0)
);

histogram_histogram_Pipeline_LOOP_END grp_histogram_Pipeline_LOOP_END_fu_78(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_histogram_Pipeline_LOOP_END_fu_78_ap_start),
    .ap_done(grp_histogram_Pipeline_LOOP_END_fu_78_ap_done),
    .ap_idle(grp_histogram_Pipeline_LOOP_END_fu_78_ap_idle),
    .ap_ready(grp_histogram_Pipeline_LOOP_END_fu_78_ap_ready),
    .hist_local_address0(grp_histogram_Pipeline_LOOP_END_fu_78_hist_local_address0),
    .hist_local_ce0(grp_histogram_Pipeline_LOOP_END_fu_78_hist_local_ce0),
    .hist_local_q0(hist_local_q0),
    .out_r_address0(grp_histogram_Pipeline_LOOP_END_fu_78_out_r_address0),
    .out_r_ce0(grp_histogram_Pipeline_LOOP_END_fu_78_out_r_ce0),
    .out_r_we0(grp_histogram_Pipeline_LOOP_END_fu_78_out_r_we0),
    .out_r_d0(grp_histogram_Pipeline_LOOP_END_fu_78_out_r_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_histogram_Pipeline_LOOP_END_fu_78_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_histogram_Pipeline_LOOP_END_fu_78_ap_start_reg <= 1'b1;
        end else if ((grp_histogram_Pipeline_LOOP_END_fu_78_ap_ready == 1'b1)) begin
            grp_histogram_Pipeline_LOOP_END_fu_78_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_histogram_Pipeline_LOOP_INIT_fu_58_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_histogram_Pipeline_LOOP_INIT_fu_58_ap_start_reg <= 1'b1;
        end else if ((grp_histogram_Pipeline_LOOP_INIT_fu_58_ap_ready == 1'b1)) begin
            grp_histogram_Pipeline_LOOP_INIT_fu_58_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_histogram_Pipeline_LOOP_I_fu_66_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_histogram_Pipeline_LOOP_I_fu_66_ap_start_reg <= 1'b1;
        end else if ((grp_histogram_Pipeline_LOOP_I_fu_66_ap_ready == 1'b1)) begin
            grp_histogram_Pipeline_LOOP_I_fu_66_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        or_ln17_reg_127 <= or_ln17_fu_115_p2;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_histogram_Pipeline_LOOP_INIT_fu_58_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_histogram_Pipeline_LOOP_I_fu_66_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_histogram_Pipeline_LOOP_END_fu_78_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & (grp_histogram_Pipeline_LOOP_END_fu_78_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & (grp_histogram_Pipeline_LOOP_END_fu_78_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        hist_local_address0 = grp_histogram_Pipeline_LOOP_END_fu_78_hist_local_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        hist_local_address0 = grp_histogram_Pipeline_LOOP_I_fu_66_hist_local_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        hist_local_address0 = grp_histogram_Pipeline_LOOP_INIT_fu_58_hist_local_address0;
    end else begin
        hist_local_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        hist_local_ce0 = grp_histogram_Pipeline_LOOP_END_fu_78_hist_local_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        hist_local_ce0 = grp_histogram_Pipeline_LOOP_I_fu_66_hist_local_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        hist_local_ce0 = grp_histogram_Pipeline_LOOP_INIT_fu_58_hist_local_ce0;
    end else begin
        hist_local_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        hist_local_d0 = grp_histogram_Pipeline_LOOP_I_fu_66_hist_local_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        hist_local_d0 = grp_histogram_Pipeline_LOOP_INIT_fu_58_hist_local_d0;
    end else begin
        hist_local_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        hist_local_we0 = grp_histogram_Pipeline_LOOP_I_fu_66_hist_local_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        hist_local_we0 = grp_histogram_Pipeline_LOOP_INIT_fu_58_hist_local_we0;
    end else begin
        hist_local_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_histogram_Pipeline_LOOP_INIT_fu_58_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_histogram_Pipeline_LOOP_I_fu_66_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (grp_histogram_Pipeline_LOOP_END_fu_78_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign bitcast_ln17_fu_85_p1 = n;

assign feature_address0 = grp_histogram_Pipeline_LOOP_I_fu_66_feature_address0;

assign feature_ce0 = grp_histogram_Pipeline_LOOP_I_fu_66_feature_ce0;

assign grp_histogram_Pipeline_LOOP_END_fu_78_ap_start = grp_histogram_Pipeline_LOOP_END_fu_78_ap_start_reg;

assign grp_histogram_Pipeline_LOOP_INIT_fu_58_ap_start = grp_histogram_Pipeline_LOOP_INIT_fu_58_ap_start_reg;

assign grp_histogram_Pipeline_LOOP_I_fu_66_ap_start = grp_histogram_Pipeline_LOOP_I_fu_66_ap_start_reg;

assign hist_address0 = grp_histogram_Pipeline_LOOP_INIT_fu_58_hist_address0;

assign hist_ce0 = grp_histogram_Pipeline_LOOP_INIT_fu_58_hist_ce0;

assign icmp_ln17_2_fu_109_p2 = ((trunc_ln17_fu_99_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln17_fu_103_p2 = ((tmp_1_fu_89_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln17_fu_115_p2 = (icmp_ln17_fu_103_p2 | icmp_ln17_2_fu_109_p2);

assign out_r_address0 = grp_histogram_Pipeline_LOOP_END_fu_78_out_r_address0;

assign out_r_ce0 = grp_histogram_Pipeline_LOOP_END_fu_78_out_r_ce0;

assign out_r_d0 = grp_histogram_Pipeline_LOOP_END_fu_78_out_r_d0;

assign out_r_we0 = grp_histogram_Pipeline_LOOP_END_fu_78_out_r_we0;

assign tmp_1_fu_89_p4 = {{bitcast_ln17_fu_85_p1[30:23]}};

assign trunc_ln17_fu_99_p1 = bitcast_ln17_fu_85_p1[22:0];

assign weight_address0 = grp_histogram_Pipeline_LOOP_I_fu_66_weight_address0;

assign weight_ce0 = grp_histogram_Pipeline_LOOP_I_fu_66_weight_ce0;

endmodule //histogram
