

================================================================
== Vitis HLS Report for 'example'
================================================================
* Date:           Wed Mar  8 23:01:35 2023

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        dynamatic_example
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xck24-ubva530-2LV-c


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  5.00 ns|  4.088 ns|     0.50 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- LOOP_I  |        ?|        ?|        17|          8|          1|     ?|       yes|
        +----------+---------+---------+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-----+--------+-------+-----+
|       Name      | BRAM_18K| DSP |   FF   |  LUT  | URAM|
+-----------------+---------+-----+--------+-------+-----+
|DSP              |        -|    -|       -|      -|    -|
|Expression       |        -|    -|       0|    125|    -|
|FIFO             |        -|    -|       -|      -|    -|
|Instance         |        -|    2|     306|    246|    -|
|Memory           |        -|    -|       -|      -|    -|
|Multiplexer      |        -|    -|       -|    172|    -|
|Register         |        -|    -|     208|      -|    -|
+-----------------+---------+-----+--------+-------+-----+
|Total            |        0|    2|     514|    543|    0|
+-----------------+---------+-----+--------+-------+-----+
|Available        |      432|  360|  141120|  70560|    0|
+-----------------+---------+-----+--------+-------+-----+
|Utilization (%)  |        0|   ~0|      ~0|     ~0|    0|
+-----------------+---------+-----+--------+-------+-----+

+ Detail: 
    * Instance: 
    +---------------------------------------+------------------------------------+---------+----+-----+-----+-----+
    |                Instance               |               Module               | BRAM_18K| DSP|  FF | LUT | URAM|
    +---------------------------------------+------------------------------------+---------+----+-----+-----+-----+
    |faddfsub_32ns_32ns_32_7_full_dsp_1_U1  |faddfsub_32ns_32ns_32_7_full_dsp_1  |        0|   2|  306|  246|    0|
    |fcmp_32ns_32ns_1_2_no_dsp_1_U2         |fcmp_32ns_32ns_1_2_no_dsp_1         |        0|   0|    0|    0|    0|
    +---------------------------------------+------------------------------------+---------+----+-----+-----+-----+
    |Total                                  |                                    |        0|   2|  306|  246|    0|
    +---------------------------------------+------------------------------------+---------+----+-----+-----+-----+

    * DSP: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +-----------------------+----------+----+---+----+------------+------------+
    |     Variable Name     | Operation| DSP| FF| LUT| Bitwidth P0| Bitwidth P1|
    +-----------------------+----------+----+---+----+------------+------------+
    |add_ln8_fu_132_p2      |         +|   0|  0|  38|          31|           1|
    |and_ln11_fu_195_p2     |       and|   0|  0|   2|           1|           1|
    |ap_condition_167       |       and|   0|  0|   2|           1|           1|
    |icmp_ln11_1_fu_185_p2  |      icmp|   0|  0|  16|          23|           1|
    |icmp_ln11_fu_179_p2    |      icmp|   0|  0|  11|           8|           2|
    |icmp_ln8_fu_126_p2     |      icmp|   0|  0|  20|          32|          32|
    |or_ln11_fu_191_p2      |        or|   0|  0|   2|           1|           1|
    |acc_2_fu_200_p3        |    select|   0|  0|  32|           1|          32|
    |ap_enable_pp0          |       xor|   0|  0|   2|           1|           2|
    +-----------------------+----------+----+---+----+------------+------------+
    |Total                  |          |   0|  0| 125|          99|          73|
    +-----------------------+----------+----+---+----+------------+------------+

    * Multiplexer: 
    +----------------------------------+----+-----------+-----+-----------+
    |               Name               | LUT| Input Size| Bits| Total Bits|
    +----------------------------------+----+-----------+-----+-----------+
    |acc_fu_54                         |   9|          2|   32|         64|
    |ap_NS_fsm                         |  49|          9|    1|          9|
    |ap_done_int                       |   9|          2|    1|          2|
    |ap_enable_reg_pp0_iter0           |   9|          2|    1|          2|
    |ap_enable_reg_pp0_iter1           |   9|          2|    1|          2|
    |ap_enable_reg_pp0_iter2           |   9|          2|    1|          2|
    |ap_loop_exit_ready_pp0_iter1_reg  |   9|          2|    1|          2|
    |ap_sig_allocacmp_acc_load_1       |   9|          2|   32|         64|
    |ap_sig_allocacmp_i_1              |   9|          2|   31|         62|
    |grp_fu_94_opcode                  |  14|          3|    2|          6|
    |grp_fu_94_p0                      |  14|          3|   32|         96|
    |grp_fu_94_p1                      |  14|          3|   32|         96|
    |i_fu_58                           |   9|          2|   31|         62|
    +----------------------------------+----+-----------+-----+-----------+
    |Total                             | 172|         36|  198|        469|
    +----------------------------------+----+-----------+-----+-----------+

    * Register: 
    +----------------------------------+----+----+-----+-----------+
    |               Name               | FF | LUT| Bits| Const Bits|
    +----------------------------------+----+----+-----+-----------+
    |A_load_reg_244                    |  32|   0|   32|          0|
    |B_load_reg_249                    |  32|   0|   32|          0|
    |acc_fu_54                         |  32|   0|   32|          0|
    |acc_load_reg_264                  |  32|   0|   32|          0|
    |ap_CS_fsm                         |   8|   0|    8|          0|
    |ap_done_reg                       |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter0_reg       |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter1           |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter2           |   1|   0|    1|          0|
    |ap_loop_exit_ready_pp0_iter1_reg  |   1|   0|    1|          0|
    |i_fu_58                           |  31|   0|   31|          0|
    |icmp_ln11_1_reg_275               |   1|   0|    1|          0|
    |icmp_ln11_reg_270                 |   1|   0|    1|          0|
    |icmp_ln8_reg_230                  |   1|   0|    1|          0|
    |reg_103                           |  32|   0|   32|          0|
    |tmp_1_reg_280                     |   1|   0|    1|          0|
    +----------------------------------+----+----+-----+-----------+
    |Total                             | 208|   0|  208|          0|
    +----------------------------------+----+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+------------+-----+-----+------------+--------------+--------------+
|  RTL Ports | Dir | Bits|  Protocol  | Source Object|    C Type    |
+------------+-----+-----+------------+--------------+--------------+
|ap_clk      |   in|    1|  ap_ctrl_hs|       example|  return value|
|ap_rst      |   in|    1|  ap_ctrl_hs|       example|  return value|
|ap_start    |   in|    1|  ap_ctrl_hs|       example|  return value|
|ap_done     |  out|    1|  ap_ctrl_hs|       example|  return value|
|ap_idle     |  out|    1|  ap_ctrl_hs|       example|  return value|
|ap_ready    |  out|    1|  ap_ctrl_hs|       example|  return value|
|ap_return   |  out|   32|  ap_ctrl_hs|       example|  return value|
|A_address0  |  out|    7|   ap_memory|             A|         array|
|A_ce0       |  out|    1|   ap_memory|             A|         array|
|A_q0        |   in|   32|   ap_memory|             A|         array|
|B_address0  |  out|    7|   ap_memory|             B|         array|
|B_ce0       |  out|    1|   ap_memory|             B|         array|
|B_q0        |   in|   32|   ap_memory|             B|         array|
|n           |   in|   32|     ap_none|             n|        scalar|
+------------+-----+-----+------------+--------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 8, depth = 17


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 17
* Pipeline : 1
  Pipeline-0 : II = 8, D = 17, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.43>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%acc = alloca i32 1"   --->   Operation 20 'alloca' 'acc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 21 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 0"   --->   Operation 22 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%spectopmodule_ln3 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_2" [dynamatic_example/example.cpp:3]   --->   Operation 23 'spectopmodule' 'spectopmodule_ln3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %A, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 24 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %A"   --->   Operation 25 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %B, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 26 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %B"   --->   Operation 27 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %n"   --->   Operation 28 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %n, void @empty_1, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 29 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%n_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %n" [dynamatic_example/example.cpp:3]   --->   Operation 30 'read' 'n_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.42ns)   --->   "%store_ln8 = store i31 0, i31 %i" [dynamatic_example/example.cpp:8]   --->   Operation 31 'store' 'store_ln8' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 32 [1/1] (0.42ns)   --->   "%store_ln8 = store i32 0, i32 %acc" [dynamatic_example/example.cpp:8]   --->   Operation 32 'store' 'store_ln8' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%br_ln8 = br void %for.body" [dynamatic_example/example.cpp:8]   --->   Operation 33 'br' 'br_ln8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%i_1 = load i31 %i" [dynamatic_example/example.cpp:8]   --->   Operation 34 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%i_cast = zext i31 %i_1" [dynamatic_example/example.cpp:8]   --->   Operation 35 'zext' 'i_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 36 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.99ns)   --->   "%icmp_ln8 = icmp_slt  i32 %i_cast, i32 %n_read" [dynamatic_example/example.cpp:8]   --->   Operation 37 'icmp' 'icmp_ln8' <Predicate = true> <Delay = 0.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (1.00ns)   --->   "%add_ln8 = add i31 %i_1, i31 1" [dynamatic_example/example.cpp:8]   --->   Operation 38 'add' 'add_ln8' <Predicate = true> <Delay = 1.00> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%br_ln8 = br i1 %icmp_ln8, void %for.end.loopexit, void %for.body.split" [dynamatic_example/example.cpp:8]   --->   Operation 39 'br' 'br_ln8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%i_cast1 = zext i31 %i_1" [dynamatic_example/example.cpp:8]   --->   Operation 40 'zext' 'i_cast1' <Predicate = (icmp_ln8)> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%A_addr = getelementptr i32 %A, i64 0, i64 %i_cast1" [dynamatic_example/example.cpp:10]   --->   Operation 41 'getelementptr' 'A_addr' <Predicate = (icmp_ln8)> <Delay = 0.00>
ST_1 : Operation 42 [2/2] (1.23ns)   --->   "%A_load = load i7 %A_addr" [dynamatic_example/example.cpp:10]   --->   Operation 42 'load' 'A_load' <Predicate = (icmp_ln8)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%B_addr = getelementptr i32 %B, i64 0, i64 %i_cast1" [dynamatic_example/example.cpp:10]   --->   Operation 43 'getelementptr' 'B_addr' <Predicate = (icmp_ln8)> <Delay = 0.00>
ST_1 : Operation 44 [2/2] (1.23ns)   --->   "%B_load = load i7 %B_addr" [dynamatic_example/example.cpp:10]   --->   Operation 44 'load' 'B_load' <Predicate = (icmp_ln8)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_1 : Operation 45 [1/1] (0.42ns)   --->   "%store_ln8 = store i31 %add_ln8, i31 %i" [dynamatic_example/example.cpp:8]   --->   Operation 45 'store' 'store_ln8' <Predicate = (icmp_ln8)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 1.23>
ST_2 : Operation 46 [1/2] (1.23ns)   --->   "%A_load = load i7 %A_addr" [dynamatic_example/example.cpp:10]   --->   Operation 46 'load' 'A_load' <Predicate = (icmp_ln8)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_2 : Operation 47 [1/2] (1.23ns)   --->   "%B_load = load i7 %B_addr" [dynamatic_example/example.cpp:10]   --->   Operation 47 'load' 'B_load' <Predicate = (icmp_ln8)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>

State 3 <SV = 2> <Delay = 4.08>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%bitcast_ln10 = bitcast i32 %A_load" [dynamatic_example/example.cpp:10]   --->   Operation 48 'bitcast' 'bitcast_ln10' <Predicate = (icmp_ln8)> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%bitcast_ln10_1 = bitcast i32 %B_load" [dynamatic_example/example.cpp:10]   --->   Operation 49 'bitcast' 'bitcast_ln10_1' <Predicate = (icmp_ln8)> <Delay = 0.00>
ST_3 : Operation 50 [7/7] (4.08ns)   --->   "%d = fsub i32 %bitcast_ln10, i32 %bitcast_ln10_1" [dynamatic_example/example.cpp:10]   --->   Operation 50 'fsub' 'd' <Predicate = (icmp_ln8)> <Delay = 4.08> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 4.08>
ST_4 : Operation 51 [6/7] (4.08ns)   --->   "%d = fsub i32 %bitcast_ln10, i32 %bitcast_ln10_1" [dynamatic_example/example.cpp:10]   --->   Operation 51 'fsub' 'd' <Predicate = (icmp_ln8)> <Delay = 4.08> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 4.08>
ST_5 : Operation 52 [5/7] (4.08ns)   --->   "%d = fsub i32 %bitcast_ln10, i32 %bitcast_ln10_1" [dynamatic_example/example.cpp:10]   --->   Operation 52 'fsub' 'd' <Predicate = (icmp_ln8)> <Delay = 4.08> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 4.08>
ST_6 : Operation 53 [4/7] (4.08ns)   --->   "%d = fsub i32 %bitcast_ln10, i32 %bitcast_ln10_1" [dynamatic_example/example.cpp:10]   --->   Operation 53 'fsub' 'd' <Predicate = (icmp_ln8)> <Delay = 4.08> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 4.08>
ST_7 : Operation 54 [3/7] (4.08ns)   --->   "%d = fsub i32 %bitcast_ln10, i32 %bitcast_ln10_1" [dynamatic_example/example.cpp:10]   --->   Operation 54 'fsub' 'd' <Predicate = (icmp_ln8)> <Delay = 4.08> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 4.08>
ST_8 : Operation 55 [2/7] (4.08ns)   --->   "%d = fsub i32 %bitcast_ln10, i32 %bitcast_ln10_1" [dynamatic_example/example.cpp:10]   --->   Operation 55 'fsub' 'd' <Predicate = (icmp_ln8)> <Delay = 4.08> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 4.08>
ST_9 : Operation 56 [1/7] (4.08ns)   --->   "%d = fsub i32 %bitcast_ln10, i32 %bitcast_ln10_1" [dynamatic_example/example.cpp:10]   --->   Operation 56 'fsub' 'd' <Predicate = true> <Delay = 4.08> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 78 [1/1] (0.00ns)   --->   "%acc_load_1 = load i32 %acc" [dynamatic_example/example.cpp:16]   --->   Operation 78 'load' 'acc_load_1' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_9 : Operation 79 [1/1] (0.00ns)   --->   "%ret_ln16 = ret i32 %acc_load_1" [dynamatic_example/example.cpp:16]   --->   Operation 79 'ret' 'ret_ln16' <Predicate = (!icmp_ln8)> <Delay = 0.00>

State 10 <SV = 9> <Delay = 4.08>
ST_10 : Operation 57 [1/1] (0.00ns)   --->   "%acc_load = load i32 %acc" [dynamatic_example/example.cpp:13]   --->   Operation 57 'load' 'acc_load' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 58 [1/1] (0.00ns)   --->   "%bitcast_ln11 = bitcast i32 %d" [dynamatic_example/example.cpp:11]   --->   Operation 58 'bitcast' 'bitcast_ln11' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 59 [1/1] (0.00ns)   --->   "%tmp = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln11, i32 23, i32 30" [dynamatic_example/example.cpp:11]   --->   Operation 59 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 60 [1/1] (0.00ns)   --->   "%trunc_ln11 = trunc i32 %bitcast_ln11" [dynamatic_example/example.cpp:11]   --->   Operation 60 'trunc' 'trunc_ln11' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 61 [1/1] (0.84ns)   --->   "%icmp_ln11 = icmp_ne  i8 %tmp, i8 255" [dynamatic_example/example.cpp:11]   --->   Operation 61 'icmp' 'icmp_ln11' <Predicate = true> <Delay = 0.84> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 62 [1/1] (1.05ns)   --->   "%icmp_ln11_1 = icmp_eq  i23 %trunc_ln11, i23 0" [dynamatic_example/example.cpp:11]   --->   Operation 62 'icmp' 'icmp_ln11_1' <Predicate = true> <Delay = 1.05> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 63 [2/2] (2.78ns)   --->   "%tmp_1 = fcmp_oge  i32 %d, i32 0" [dynamatic_example/example.cpp:11]   --->   Operation 63 'fcmp' 'tmp_1' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 64 [7/7] (4.08ns)   --->   "%acc_1 = fadd i32 %acc_load, i32 %d" [dynamatic_example/example.cpp:13]   --->   Operation 64 'fadd' 'acc_1' <Predicate = true> <Delay = 4.08> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 4.08>
ST_11 : Operation 65 [1/2] (2.78ns)   --->   "%tmp_1 = fcmp_oge  i32 %d, i32 0" [dynamatic_example/example.cpp:11]   --->   Operation 65 'fcmp' 'tmp_1' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 66 [6/7] (4.08ns)   --->   "%acc_1 = fadd i32 %acc_load, i32 %d" [dynamatic_example/example.cpp:13]   --->   Operation 66 'fadd' 'acc_1' <Predicate = true> <Delay = 4.08> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 4.08>
ST_12 : Operation 67 [5/7] (4.08ns)   --->   "%acc_1 = fadd i32 %acc_load, i32 %d" [dynamatic_example/example.cpp:13]   --->   Operation 67 'fadd' 'acc_1' <Predicate = true> <Delay = 4.08> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 4.08>
ST_13 : Operation 68 [4/7] (4.08ns)   --->   "%acc_1 = fadd i32 %acc_load, i32 %d" [dynamatic_example/example.cpp:13]   --->   Operation 68 'fadd' 'acc_1' <Predicate = true> <Delay = 4.08> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 4.08>
ST_14 : Operation 69 [3/7] (4.08ns)   --->   "%acc_1 = fadd i32 %acc_load, i32 %d" [dynamatic_example/example.cpp:13]   --->   Operation 69 'fadd' 'acc_1' <Predicate = true> <Delay = 4.08> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 4.08>
ST_15 : Operation 70 [2/7] (4.08ns)   --->   "%acc_1 = fadd i32 %acc_load, i32 %d" [dynamatic_example/example.cpp:13]   --->   Operation 70 'fadd' 'acc_1' <Predicate = true> <Delay = 4.08> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 4.08>
ST_16 : Operation 71 [1/7] (4.08ns)   --->   "%acc_1 = fadd i32 %acc_load, i32 %d" [dynamatic_example/example.cpp:13]   --->   Operation 71 'fadd' 'acc_1' <Predicate = true> <Delay = 4.08> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 0.87>
ST_17 : Operation 72 [1/1] (0.00ns)   --->   "%specloopname_ln5 = specloopname void @_ssdm_op_SpecLoopName, void @empty_3" [dynamatic_example/example.cpp:5]   --->   Operation 72 'specloopname' 'specloopname_ln5' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node acc_2)   --->   "%or_ln11 = or i1 %icmp_ln11_1, i1 %icmp_ln11" [dynamatic_example/example.cpp:11]   --->   Operation 73 'or' 'or_ln11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node acc_2)   --->   "%and_ln11 = and i1 %or_ln11, i1 %tmp_1" [dynamatic_example/example.cpp:11]   --->   Operation 74 'and' 'and_ln11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 75 [1/1] (0.44ns) (out node of the LUT)   --->   "%acc_2 = select i1 %and_ln11, i32 %acc_1, i32 %acc_load" [dynamatic_example/example.cpp:11]   --->   Operation 75 'select' 'acc_2' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_17 : Operation 76 [1/1] (0.42ns)   --->   "%store_ln8 = store i32 %acc_2, i32 %acc" [dynamatic_example/example.cpp:8]   --->   Operation 76 'store' 'store_ln8' <Predicate = true> <Delay = 0.42>
ST_17 : Operation 77 [1/1] (0.00ns)   --->   "%br_ln8 = br void %for.body" [dynamatic_example/example.cpp:8]   --->   Operation 77 'br' 'br_ln8' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ A]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=1; pingpong=0; private_global=0; MemPort=[13]; IO mode=ap_memory:ce=0
Port [ B]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=1; pingpong=0; private_global=0; MemPort=[13]; IO mode=ap_memory:ce=0
Port [ n]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
acc               (alloca       ) [ 011111111111111111]
i                 (alloca       ) [ 010000000000000000]
specbitsmap_ln0   (specbitsmap  ) [ 000000000000000000]
spectopmodule_ln3 (spectopmodule) [ 000000000000000000]
specinterface_ln0 (specinterface) [ 000000000000000000]
specbitsmap_ln0   (specbitsmap  ) [ 000000000000000000]
specinterface_ln0 (specinterface) [ 000000000000000000]
specbitsmap_ln0   (specbitsmap  ) [ 000000000000000000]
specbitsmap_ln0   (specbitsmap  ) [ 000000000000000000]
specinterface_ln0 (specinterface) [ 000000000000000000]
n_read            (read         ) [ 000000000000000000]
store_ln8         (store        ) [ 000000000000000000]
store_ln8         (store        ) [ 000000000000000000]
br_ln8            (br           ) [ 000000000000000000]
i_1               (load         ) [ 000000000000000000]
i_cast            (zext         ) [ 000000000000000000]
specpipeline_ln0  (specpipeline ) [ 000000000000000000]
icmp_ln8          (icmp         ) [ 011111111100000000]
add_ln8           (add          ) [ 000000000000000000]
br_ln8            (br           ) [ 000000000000000000]
i_cast1           (zext         ) [ 000000000000000000]
A_addr            (getelementptr) [ 001000000000000000]
B_addr            (getelementptr) [ 001000000000000000]
store_ln8         (store        ) [ 000000000000000000]
A_load            (load         ) [ 000100000000000000]
B_load            (load         ) [ 000100000000000000]
bitcast_ln10      (bitcast      ) [ 010011111100000000]
bitcast_ln10_1    (bitcast      ) [ 010011111100000000]
d                 (fsub         ) [ 001111111011111110]
acc_load          (load         ) [ 010111111001111111]
bitcast_ln11      (bitcast      ) [ 000000000000000000]
tmp               (partselect   ) [ 000000000000000000]
trunc_ln11        (trunc        ) [ 000000000000000000]
icmp_ln11         (icmp         ) [ 010111111001111111]
icmp_ln11_1       (icmp         ) [ 010111111001111111]
tmp_1             (fcmp         ) [ 010011111000111111]
acc_1             (fadd         ) [ 010000000000000001]
specloopname_ln5  (specloopname ) [ 000000000000000000]
or_ln11           (or           ) [ 000000000000000000]
and_ln11          (and          ) [ 000000000000000000]
acc_2             (select       ) [ 000000000000000000]
store_ln8         (store        ) [ 000000000000000000]
br_ln8            (br           ) [ 000000000000000000]
acc_load_1        (load         ) [ 000000000000000000]
ret_ln16          (ret          ) [ 000000000000000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="A">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="A"/><MemPortTyVec>1 3 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="B">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="B"/><MemPortTyVec>1 3 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="n">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="n"/></StgValue>
</bind>
</comp>

<comp id="6" class="1001" name="const_6">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_2"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_0"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_1"/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i32"/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecPipeline"/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str"/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_PartSelect.i8.i32.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecLoopName"/></StgValue>
</bind>
</comp>

<comp id="52" class="1001" name="const_52">
<pin_list>
<pin id="53" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_3"/></StgValue>
</bind>
</comp>

<comp id="54" class="1004" name="acc_fu_54">
<pin_list>
<pin id="55" dir="0" index="0" bw="1" slack="0"/>
<pin id="56" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="acc/1 "/>
</bind>
</comp>

<comp id="58" class="1004" name="i_fu_58">
<pin_list>
<pin id="59" dir="0" index="0" bw="1" slack="0"/>
<pin id="60" dir="1" index="1" bw="31" slack="0"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="i/1 "/>
</bind>
</comp>

<comp id="62" class="1004" name="n_read_read_fu_62">
<pin_list>
<pin id="63" dir="0" index="0" bw="32" slack="0"/>
<pin id="64" dir="0" index="1" bw="32" slack="0"/>
<pin id="65" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="n_read/1 "/>
</bind>
</comp>

<comp id="68" class="1004" name="A_addr_gep_fu_68">
<pin_list>
<pin id="69" dir="0" index="0" bw="32" slack="0"/>
<pin id="70" dir="0" index="1" bw="1" slack="0"/>
<pin id="71" dir="0" index="2" bw="31" slack="0"/>
<pin id="72" dir="1" index="3" bw="7" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="A_addr/1 "/>
</bind>
</comp>

<comp id="75" class="1004" name="grp_access_fu_75">
<pin_list>
<pin id="76" dir="0" index="0" bw="7" slack="0"/>
<pin id="77" dir="0" index="1" bw="32" slack="2147483647"/>
<pin id="78" dir="0" index="2" bw="0" slack="2147483647"/>
<pin id="79" dir="1" index="3" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="A_load/1 "/>
</bind>
</comp>

<comp id="81" class="1004" name="B_addr_gep_fu_81">
<pin_list>
<pin id="82" dir="0" index="0" bw="32" slack="0"/>
<pin id="83" dir="0" index="1" bw="1" slack="0"/>
<pin id="84" dir="0" index="2" bw="31" slack="0"/>
<pin id="85" dir="1" index="3" bw="7" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="B_addr/1 "/>
</bind>
</comp>

<comp id="88" class="1004" name="grp_access_fu_88">
<pin_list>
<pin id="89" dir="0" index="0" bw="7" slack="0"/>
<pin id="90" dir="0" index="1" bw="32" slack="2147483647"/>
<pin id="91" dir="0" index="2" bw="0" slack="2147483647"/>
<pin id="92" dir="1" index="3" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="B_load/1 "/>
</bind>
</comp>

<comp id="94" class="1004" name="grp_fu_94">
<pin_list>
<pin id="95" dir="0" index="0" bw="32" slack="0"/>
<pin id="96" dir="0" index="1" bw="32" slack="0"/>
<pin id="97" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="fadd(9) fsub(11) " fcode="fadd"/>
<opset="d/3 acc_1/10 "/>
</bind>
</comp>

<comp id="98" class="1004" name="grp_fu_98">
<pin_list>
<pin id="99" dir="0" index="0" bw="32" slack="1"/>
<pin id="100" dir="0" index="1" bw="32" slack="0"/>
<pin id="101" dir="1" index="2" bw="1" slack="6"/>
</pin_list>
<bind>
<opcode="fcmp(46) " fcode="fcmp"/>
<opset="tmp_1/10 "/>
</bind>
</comp>

<comp id="103" class="1005" name="reg_103">
<pin_list>
<pin id="104" dir="0" index="0" bw="32" slack="1"/>
<pin id="105" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="d acc_1 "/>
</bind>
</comp>

<comp id="109" class="1004" name="store_ln8_store_fu_109">
<pin_list>
<pin id="110" dir="0" index="0" bw="1" slack="0"/>
<pin id="111" dir="0" index="1" bw="31" slack="0"/>
<pin id="112" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln8/1 "/>
</bind>
</comp>

<comp id="114" class="1004" name="store_ln8_store_fu_114">
<pin_list>
<pin id="115" dir="0" index="0" bw="32" slack="0"/>
<pin id="116" dir="0" index="1" bw="32" slack="0"/>
<pin id="117" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln8/1 "/>
</bind>
</comp>

<comp id="119" class="1004" name="i_1_load_fu_119">
<pin_list>
<pin id="120" dir="0" index="0" bw="31" slack="0"/>
<pin id="121" dir="1" index="1" bw="31" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="i_1/1 "/>
</bind>
</comp>

<comp id="122" class="1004" name="i_cast_fu_122">
<pin_list>
<pin id="123" dir="0" index="0" bw="31" slack="0"/>
<pin id="124" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="i_cast/1 "/>
</bind>
</comp>

<comp id="126" class="1004" name="icmp_ln8_fu_126">
<pin_list>
<pin id="127" dir="0" index="0" bw="32" slack="0"/>
<pin id="128" dir="0" index="1" bw="32" slack="0"/>
<pin id="129" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln8/1 "/>
</bind>
</comp>

<comp id="132" class="1004" name="add_ln8_fu_132">
<pin_list>
<pin id="133" dir="0" index="0" bw="31" slack="0"/>
<pin id="134" dir="0" index="1" bw="1" slack="0"/>
<pin id="135" dir="1" index="2" bw="31" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="add_ln8/1 "/>
</bind>
</comp>

<comp id="138" class="1004" name="i_cast1_fu_138">
<pin_list>
<pin id="139" dir="0" index="0" bw="31" slack="0"/>
<pin id="140" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="i_cast1/1 "/>
</bind>
</comp>

<comp id="144" class="1004" name="store_ln8_store_fu_144">
<pin_list>
<pin id="145" dir="0" index="0" bw="31" slack="0"/>
<pin id="146" dir="0" index="1" bw="31" slack="0"/>
<pin id="147" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln8/1 "/>
</bind>
</comp>

<comp id="149" class="1004" name="bitcast_ln10_fu_149">
<pin_list>
<pin id="150" dir="0" index="0" bw="32" slack="1"/>
<pin id="151" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="bitcast_ln10/3 "/>
</bind>
</comp>

<comp id="153" class="1004" name="bitcast_ln10_1_fu_153">
<pin_list>
<pin id="154" dir="0" index="0" bw="32" slack="1"/>
<pin id="155" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="bitcast_ln10_1/3 "/>
</bind>
</comp>

<comp id="157" class="1004" name="acc_load_load_fu_157">
<pin_list>
<pin id="158" dir="0" index="0" bw="32" slack="9"/>
<pin id="159" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="acc_load/10 "/>
</bind>
</comp>

<comp id="161" class="1004" name="bitcast_ln11_fu_161">
<pin_list>
<pin id="162" dir="0" index="0" bw="32" slack="1"/>
<pin id="163" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="bitcast_ln11/10 "/>
</bind>
</comp>

<comp id="165" class="1004" name="tmp_fu_165">
<pin_list>
<pin id="166" dir="0" index="0" bw="8" slack="0"/>
<pin id="167" dir="0" index="1" bw="32" slack="0"/>
<pin id="168" dir="0" index="2" bw="6" slack="0"/>
<pin id="169" dir="0" index="3" bw="6" slack="0"/>
<pin id="170" dir="1" index="4" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="tmp/10 "/>
</bind>
</comp>

<comp id="175" class="1004" name="trunc_ln11_fu_175">
<pin_list>
<pin id="176" dir="0" index="0" bw="32" slack="0"/>
<pin id="177" dir="1" index="1" bw="23" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="trunc_ln11/10 "/>
</bind>
</comp>

<comp id="179" class="1004" name="icmp_ln11_fu_179">
<pin_list>
<pin id="180" dir="0" index="0" bw="8" slack="0"/>
<pin id="181" dir="0" index="1" bw="8" slack="0"/>
<pin id="182" dir="1" index="2" bw="1" slack="7"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln11/10 "/>
</bind>
</comp>

<comp id="185" class="1004" name="icmp_ln11_1_fu_185">
<pin_list>
<pin id="186" dir="0" index="0" bw="23" slack="0"/>
<pin id="187" dir="0" index="1" bw="23" slack="0"/>
<pin id="188" dir="1" index="2" bw="1" slack="7"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln11_1/10 "/>
</bind>
</comp>

<comp id="191" class="1004" name="or_ln11_fu_191">
<pin_list>
<pin id="192" dir="0" index="0" bw="1" slack="7"/>
<pin id="193" dir="0" index="1" bw="1" slack="7"/>
<pin id="194" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln11/17 "/>
</bind>
</comp>

<comp id="195" class="1004" name="and_ln11_fu_195">
<pin_list>
<pin id="196" dir="0" index="0" bw="1" slack="0"/>
<pin id="197" dir="0" index="1" bw="1" slack="6"/>
<pin id="198" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln11/17 "/>
</bind>
</comp>

<comp id="200" class="1004" name="acc_2_fu_200">
<pin_list>
<pin id="201" dir="0" index="0" bw="1" slack="0"/>
<pin id="202" dir="0" index="1" bw="32" slack="1"/>
<pin id="203" dir="0" index="2" bw="32" slack="7"/>
<pin id="204" dir="1" index="3" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="acc_2/17 "/>
</bind>
</comp>

<comp id="207" class="1004" name="store_ln8_store_fu_207">
<pin_list>
<pin id="208" dir="0" index="0" bw="32" slack="0"/>
<pin id="209" dir="0" index="1" bw="32" slack="16"/>
<pin id="210" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln8/17 "/>
</bind>
</comp>

<comp id="212" class="1004" name="acc_load_1_load_fu_212">
<pin_list>
<pin id="213" dir="0" index="0" bw="32" slack="8"/>
<pin id="214" dir="1" index="1" bw="32" slack="2147483647"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="acc_load_1/9 "/>
</bind>
</comp>

<comp id="215" class="1005" name="acc_reg_215">
<pin_list>
<pin id="216" dir="0" index="0" bw="32" slack="0"/>
<pin id="217" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opset="acc "/>
</bind>
</comp>

<comp id="223" class="1005" name="i_reg_223">
<pin_list>
<pin id="224" dir="0" index="0" bw="31" slack="0"/>
<pin id="225" dir="1" index="1" bw="31" slack="0"/>
</pin_list>
<bind>
<opset="i "/>
</bind>
</comp>

<comp id="230" class="1005" name="icmp_ln8_reg_230">
<pin_list>
<pin id="231" dir="0" index="0" bw="1" slack="1"/>
<pin id="232" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="icmp_ln8 "/>
</bind>
</comp>

<comp id="234" class="1005" name="A_addr_reg_234">
<pin_list>
<pin id="235" dir="0" index="0" bw="7" slack="1"/>
<pin id="236" dir="1" index="1" bw="7" slack="1"/>
</pin_list>
<bind>
<opset="A_addr "/>
</bind>
</comp>

<comp id="239" class="1005" name="B_addr_reg_239">
<pin_list>
<pin id="240" dir="0" index="0" bw="7" slack="1"/>
<pin id="241" dir="1" index="1" bw="7" slack="1"/>
</pin_list>
<bind>
<opset="B_addr "/>
</bind>
</comp>

<comp id="244" class="1005" name="A_load_reg_244">
<pin_list>
<pin id="245" dir="0" index="0" bw="32" slack="1"/>
<pin id="246" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="A_load "/>
</bind>
</comp>

<comp id="249" class="1005" name="B_load_reg_249">
<pin_list>
<pin id="250" dir="0" index="0" bw="32" slack="1"/>
<pin id="251" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="B_load "/>
</bind>
</comp>

<comp id="254" class="1005" name="bitcast_ln10_reg_254">
<pin_list>
<pin id="255" dir="0" index="0" bw="32" slack="1"/>
<pin id="256" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="bitcast_ln10 "/>
</bind>
</comp>

<comp id="259" class="1005" name="bitcast_ln10_1_reg_259">
<pin_list>
<pin id="260" dir="0" index="0" bw="32" slack="1"/>
<pin id="261" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="bitcast_ln10_1 "/>
</bind>
</comp>

<comp id="264" class="1005" name="acc_load_reg_264">
<pin_list>
<pin id="265" dir="0" index="0" bw="32" slack="1"/>
<pin id="266" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="acc_load "/>
</bind>
</comp>

<comp id="270" class="1005" name="icmp_ln11_reg_270">
<pin_list>
<pin id="271" dir="0" index="0" bw="1" slack="7"/>
<pin id="272" dir="1" index="1" bw="1" slack="7"/>
</pin_list>
<bind>
<opset="icmp_ln11 "/>
</bind>
</comp>

<comp id="275" class="1005" name="icmp_ln11_1_reg_275">
<pin_list>
<pin id="276" dir="0" index="0" bw="1" slack="7"/>
<pin id="277" dir="1" index="1" bw="1" slack="7"/>
</pin_list>
<bind>
<opset="icmp_ln11_1 "/>
</bind>
</comp>

<comp id="280" class="1005" name="tmp_1_reg_280">
<pin_list>
<pin id="281" dir="0" index="0" bw="1" slack="6"/>
<pin id="282" dir="1" index="1" bw="1" slack="6"/>
</pin_list>
<bind>
<opset="tmp_1 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="57"><net_src comp="6" pin="0"/><net_sink comp="54" pin=0"/></net>

<net id="61"><net_src comp="6" pin="0"/><net_sink comp="58" pin=0"/></net>

<net id="66"><net_src comp="28" pin="0"/><net_sink comp="62" pin=0"/></net>

<net id="67"><net_src comp="4" pin="0"/><net_sink comp="62" pin=1"/></net>

<net id="73"><net_src comp="0" pin="0"/><net_sink comp="68" pin=0"/></net>

<net id="74"><net_src comp="38" pin="0"/><net_sink comp="68" pin=1"/></net>

<net id="80"><net_src comp="68" pin="3"/><net_sink comp="75" pin=0"/></net>

<net id="86"><net_src comp="2" pin="0"/><net_sink comp="81" pin=0"/></net>

<net id="87"><net_src comp="38" pin="0"/><net_sink comp="81" pin=1"/></net>

<net id="93"><net_src comp="81" pin="3"/><net_sink comp="88" pin=0"/></net>

<net id="102"><net_src comp="10" pin="0"/><net_sink comp="98" pin=1"/></net>

<net id="106"><net_src comp="94" pin="2"/><net_sink comp="103" pin=0"/></net>

<net id="107"><net_src comp="103" pin="1"/><net_sink comp="98" pin=0"/></net>

<net id="108"><net_src comp="103" pin="1"/><net_sink comp="94" pin=1"/></net>

<net id="113"><net_src comp="30" pin="0"/><net_sink comp="109" pin=0"/></net>

<net id="118"><net_src comp="10" pin="0"/><net_sink comp="114" pin=0"/></net>

<net id="125"><net_src comp="119" pin="1"/><net_sink comp="122" pin=0"/></net>

<net id="130"><net_src comp="122" pin="1"/><net_sink comp="126" pin=0"/></net>

<net id="131"><net_src comp="62" pin="2"/><net_sink comp="126" pin=1"/></net>

<net id="136"><net_src comp="119" pin="1"/><net_sink comp="132" pin=0"/></net>

<net id="137"><net_src comp="36" pin="0"/><net_sink comp="132" pin=1"/></net>

<net id="141"><net_src comp="119" pin="1"/><net_sink comp="138" pin=0"/></net>

<net id="142"><net_src comp="138" pin="1"/><net_sink comp="68" pin=2"/></net>

<net id="143"><net_src comp="138" pin="1"/><net_sink comp="81" pin=2"/></net>

<net id="148"><net_src comp="132" pin="2"/><net_sink comp="144" pin=0"/></net>

<net id="152"><net_src comp="149" pin="1"/><net_sink comp="94" pin=0"/></net>

<net id="156"><net_src comp="153" pin="1"/><net_sink comp="94" pin=1"/></net>

<net id="160"><net_src comp="157" pin="1"/><net_sink comp="94" pin=0"/></net>

<net id="164"><net_src comp="103" pin="1"/><net_sink comp="161" pin=0"/></net>

<net id="171"><net_src comp="40" pin="0"/><net_sink comp="165" pin=0"/></net>

<net id="172"><net_src comp="161" pin="1"/><net_sink comp="165" pin=1"/></net>

<net id="173"><net_src comp="42" pin="0"/><net_sink comp="165" pin=2"/></net>

<net id="174"><net_src comp="44" pin="0"/><net_sink comp="165" pin=3"/></net>

<net id="178"><net_src comp="161" pin="1"/><net_sink comp="175" pin=0"/></net>

<net id="183"><net_src comp="165" pin="4"/><net_sink comp="179" pin=0"/></net>

<net id="184"><net_src comp="46" pin="0"/><net_sink comp="179" pin=1"/></net>

<net id="189"><net_src comp="175" pin="1"/><net_sink comp="185" pin=0"/></net>

<net id="190"><net_src comp="48" pin="0"/><net_sink comp="185" pin=1"/></net>

<net id="199"><net_src comp="191" pin="2"/><net_sink comp="195" pin=0"/></net>

<net id="205"><net_src comp="195" pin="2"/><net_sink comp="200" pin=0"/></net>

<net id="206"><net_src comp="103" pin="1"/><net_sink comp="200" pin=1"/></net>

<net id="211"><net_src comp="200" pin="3"/><net_sink comp="207" pin=0"/></net>

<net id="218"><net_src comp="54" pin="1"/><net_sink comp="215" pin=0"/></net>

<net id="219"><net_src comp="215" pin="1"/><net_sink comp="114" pin=1"/></net>

<net id="220"><net_src comp="215" pin="1"/><net_sink comp="157" pin=0"/></net>

<net id="221"><net_src comp="215" pin="1"/><net_sink comp="207" pin=1"/></net>

<net id="222"><net_src comp="215" pin="1"/><net_sink comp="212" pin=0"/></net>

<net id="226"><net_src comp="58" pin="1"/><net_sink comp="223" pin=0"/></net>

<net id="227"><net_src comp="223" pin="1"/><net_sink comp="109" pin=1"/></net>

<net id="228"><net_src comp="223" pin="1"/><net_sink comp="119" pin=0"/></net>

<net id="229"><net_src comp="223" pin="1"/><net_sink comp="144" pin=1"/></net>

<net id="233"><net_src comp="126" pin="2"/><net_sink comp="230" pin=0"/></net>

<net id="237"><net_src comp="68" pin="3"/><net_sink comp="234" pin=0"/></net>

<net id="238"><net_src comp="234" pin="1"/><net_sink comp="75" pin=0"/></net>

<net id="242"><net_src comp="81" pin="3"/><net_sink comp="239" pin=0"/></net>

<net id="243"><net_src comp="239" pin="1"/><net_sink comp="88" pin=0"/></net>

<net id="247"><net_src comp="75" pin="3"/><net_sink comp="244" pin=0"/></net>

<net id="248"><net_src comp="244" pin="1"/><net_sink comp="149" pin=0"/></net>

<net id="252"><net_src comp="88" pin="3"/><net_sink comp="249" pin=0"/></net>

<net id="253"><net_src comp="249" pin="1"/><net_sink comp="153" pin=0"/></net>

<net id="257"><net_src comp="149" pin="1"/><net_sink comp="254" pin=0"/></net>

<net id="258"><net_src comp="254" pin="1"/><net_sink comp="94" pin=0"/></net>

<net id="262"><net_src comp="153" pin="1"/><net_sink comp="259" pin=0"/></net>

<net id="263"><net_src comp="259" pin="1"/><net_sink comp="94" pin=1"/></net>

<net id="267"><net_src comp="157" pin="1"/><net_sink comp="264" pin=0"/></net>

<net id="268"><net_src comp="264" pin="1"/><net_sink comp="94" pin=0"/></net>

<net id="269"><net_src comp="264" pin="1"/><net_sink comp="200" pin=2"/></net>

<net id="273"><net_src comp="179" pin="2"/><net_sink comp="270" pin=0"/></net>

<net id="274"><net_src comp="270" pin="1"/><net_sink comp="191" pin=1"/></net>

<net id="278"><net_src comp="185" pin="2"/><net_sink comp="275" pin=0"/></net>

<net id="279"><net_src comp="275" pin="1"/><net_sink comp="191" pin=0"/></net>

<net id="283"><net_src comp="98" pin="2"/><net_sink comp="280" pin=0"/></net>

<net id="284"><net_src comp="280" pin="1"/><net_sink comp="195" pin=1"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
 - Input state : 
	Port: example : A | {1 2 }
	Port: example : B | {1 2 }
	Port: example : n | {1 }
  - Chain level:
	State 1
		store_ln8 : 1
		store_ln8 : 1
		i_1 : 1
		i_cast : 2
		icmp_ln8 : 3
		add_ln8 : 2
		br_ln8 : 4
		i_cast1 : 2
		A_addr : 3
		A_load : 4
		B_addr : 3
		B_load : 4
		store_ln8 : 3
	State 2
	State 3
		d : 1
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
		ret_ln16 : 1
	State 10
		tmp : 1
		trunc_ln11 : 1
		icmp_ln11 : 2
		icmp_ln11_1 : 2
		acc_1 : 1
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
		store_ln8 : 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|--------------------|---------|---------|---------|
| Operation|   Functional Unit  |   DSP   |    FF   |   LUT   |
|----------|--------------------|---------|---------|---------|
|   fadd   |      grp_fu_94     |    2    |   306   |   246   |
|----------|--------------------|---------|---------|---------|
|          |   icmp_ln8_fu_126  |    0    |    0    |    20   |
|   icmp   |  icmp_ln11_fu_179  |    0    |    0    |    11   |
|          | icmp_ln11_1_fu_185 |    0    |    0    |    16   |
|----------|--------------------|---------|---------|---------|
|    add   |   add_ln8_fu_132   |    0    |    0    |    38   |
|----------|--------------------|---------|---------|---------|
|  select  |    acc_2_fu_200    |    0    |    0    |    32   |
|----------|--------------------|---------|---------|---------|
|    or    |   or_ln11_fu_191   |    0    |    0    |    2    |
|----------|--------------------|---------|---------|---------|
|    and   |   and_ln11_fu_195  |    0    |    0    |    2    |
|----------|--------------------|---------|---------|---------|
|   read   |  n_read_read_fu_62 |    0    |    0    |    0    |
|----------|--------------------|---------|---------|---------|
|   fcmp   |      grp_fu_98     |    0    |    0    |    0    |
|----------|--------------------|---------|---------|---------|
|   zext   |    i_cast_fu_122   |    0    |    0    |    0    |
|          |   i_cast1_fu_138   |    0    |    0    |    0    |
|----------|--------------------|---------|---------|---------|
|partselect|     tmp_fu_165     |    0    |    0    |    0    |
|----------|--------------------|---------|---------|---------|
|   trunc  |  trunc_ln11_fu_175 |    0    |    0    |    0    |
|----------|--------------------|---------|---------|---------|
|   Total  |                    |    2    |   306   |   367   |
|----------|--------------------|---------|---------|---------|

Memories:
N/A

* Register list:
+----------------------+--------+
|                      |   FF   |
+----------------------+--------+
|    A_addr_reg_234    |    7   |
|    A_load_reg_244    |   32   |
|    B_addr_reg_239    |    7   |
|    B_load_reg_249    |   32   |
|   acc_load_reg_264   |   32   |
|      acc_reg_215     |   32   |
|bitcast_ln10_1_reg_259|   32   |
| bitcast_ln10_reg_254 |   32   |
|       i_reg_223      |   31   |
|  icmp_ln11_1_reg_275 |    1   |
|   icmp_ln11_reg_270  |    1   |
|   icmp_ln8_reg_230   |    1   |
|        reg_103       |   32   |
|     tmp_1_reg_280    |    1   |
+----------------------+--------+
|         Total        |   273  |
+----------------------+--------+

* Multiplexer (MUX) list: 
|------------------|------|------|------|--------||---------||---------|
|       Comp       |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|------------------|------|------|------|--------||---------||---------|
| grp_access_fu_75 |  p0  |   2  |   7  |   14   ||    9    |
| grp_access_fu_88 |  p0  |   2  |   7  |   14   ||    9    |
|     grp_fu_94    |  p0  |   4  |  32  |   128  ||    20   |
|     grp_fu_94    |  p1  |   3  |  32  |   96   ||    14   |
|------------------|------|------|------|--------||---------||---------|
|       Total      |      |      |      |   252  ||  1.855  ||    52   |
|------------------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+--------+
|           |   DSP  |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+--------+
|  Function |    2   |    -   |   306  |   367  |
|   Memory  |    -   |    -   |    -   |    -   |
|Multiplexer|    -   |    1   |    -   |   52   |
|  Register |    -   |    -   |   273  |    -   |
+-----------+--------+--------+--------+--------+
|   Total   |    2   |    1   |   579  |   419  |
+-----------+--------+--------+--------+--------+
