

================================================================
== Vitis HLS Report for 'example'
================================================================
* Date:           Wed Mar  8 23:01:35 2023

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        dynamatic_example
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xck24-ubva530-2LV-c


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  5.00 ns|  4.088 ns|     0.50 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- LOOP_I  |        ?|        ?|        17|          8|          1|     ?|       yes|
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 8, depth = 17


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 17
* Pipeline : 1
  Pipeline-0 : II = 8, D = 17, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.43>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%acc = alloca i32 1"   --->   Operation 20 'alloca' 'acc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 21 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 0"   --->   Operation 22 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%spectopmodule_ln3 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_2" [dynamatic_example/example.cpp:3]   --->   Operation 23 'spectopmodule' 'spectopmodule_ln3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %A, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 24 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %A"   --->   Operation 25 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %B, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 26 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %B"   --->   Operation 27 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %n"   --->   Operation 28 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %n, void @empty_1, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 29 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%n_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %n" [dynamatic_example/example.cpp:3]   --->   Operation 30 'read' 'n_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.42ns)   --->   "%store_ln8 = store i31 0, i31 %i" [dynamatic_example/example.cpp:8]   --->   Operation 31 'store' 'store_ln8' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 32 [1/1] (0.42ns)   --->   "%store_ln8 = store i32 0, i32 %acc" [dynamatic_example/example.cpp:8]   --->   Operation 32 'store' 'store_ln8' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%br_ln8 = br void %for.body" [dynamatic_example/example.cpp:8]   --->   Operation 33 'br' 'br_ln8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%i_1 = load i31 %i" [dynamatic_example/example.cpp:8]   --->   Operation 34 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%i_cast = zext i31 %i_1" [dynamatic_example/example.cpp:8]   --->   Operation 35 'zext' 'i_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 36 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.99ns)   --->   "%icmp_ln8 = icmp_slt  i32 %i_cast, i32 %n_read" [dynamatic_example/example.cpp:8]   --->   Operation 37 'icmp' 'icmp_ln8' <Predicate = true> <Delay = 0.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (1.00ns)   --->   "%add_ln8 = add i31 %i_1, i31 1" [dynamatic_example/example.cpp:8]   --->   Operation 38 'add' 'add_ln8' <Predicate = true> <Delay = 1.00> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%br_ln8 = br i1 %icmp_ln8, void %for.end.loopexit, void %for.body.split" [dynamatic_example/example.cpp:8]   --->   Operation 39 'br' 'br_ln8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%i_cast1 = zext i31 %i_1" [dynamatic_example/example.cpp:8]   --->   Operation 40 'zext' 'i_cast1' <Predicate = (icmp_ln8)> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%A_addr = getelementptr i32 %A, i64 0, i64 %i_cast1" [dynamatic_example/example.cpp:10]   --->   Operation 41 'getelementptr' 'A_addr' <Predicate = (icmp_ln8)> <Delay = 0.00>
ST_1 : Operation 42 [2/2] (1.23ns)   --->   "%A_load = load i7 %A_addr" [dynamatic_example/example.cpp:10]   --->   Operation 42 'load' 'A_load' <Predicate = (icmp_ln8)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%B_addr = getelementptr i32 %B, i64 0, i64 %i_cast1" [dynamatic_example/example.cpp:10]   --->   Operation 43 'getelementptr' 'B_addr' <Predicate = (icmp_ln8)> <Delay = 0.00>
ST_1 : Operation 44 [2/2] (1.23ns)   --->   "%B_load = load i7 %B_addr" [dynamatic_example/example.cpp:10]   --->   Operation 44 'load' 'B_load' <Predicate = (icmp_ln8)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_1 : Operation 45 [1/1] (0.42ns)   --->   "%store_ln8 = store i31 %add_ln8, i31 %i" [dynamatic_example/example.cpp:8]   --->   Operation 45 'store' 'store_ln8' <Predicate = (icmp_ln8)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 1.23>
ST_2 : Operation 46 [1/2] (1.23ns)   --->   "%A_load = load i7 %A_addr" [dynamatic_example/example.cpp:10]   --->   Operation 46 'load' 'A_load' <Predicate = (icmp_ln8)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>
ST_2 : Operation 47 [1/2] (1.23ns)   --->   "%B_load = load i7 %B_addr" [dynamatic_example/example.cpp:10]   --->   Operation 47 'load' 'B_load' <Predicate = (icmp_ln8)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 100> <RAM>

State 3 <SV = 2> <Delay = 4.08>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%bitcast_ln10 = bitcast i32 %A_load" [dynamatic_example/example.cpp:10]   --->   Operation 48 'bitcast' 'bitcast_ln10' <Predicate = (icmp_ln8)> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%bitcast_ln10_1 = bitcast i32 %B_load" [dynamatic_example/example.cpp:10]   --->   Operation 49 'bitcast' 'bitcast_ln10_1' <Predicate = (icmp_ln8)> <Delay = 0.00>
ST_3 : Operation 50 [7/7] (4.08ns)   --->   "%d = fsub i32 %bitcast_ln10, i32 %bitcast_ln10_1" [dynamatic_example/example.cpp:10]   --->   Operation 50 'fsub' 'd' <Predicate = (icmp_ln8)> <Delay = 4.08> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 4.08>
ST_4 : Operation 51 [6/7] (4.08ns)   --->   "%d = fsub i32 %bitcast_ln10, i32 %bitcast_ln10_1" [dynamatic_example/example.cpp:10]   --->   Operation 51 'fsub' 'd' <Predicate = (icmp_ln8)> <Delay = 4.08> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 4.08>
ST_5 : Operation 52 [5/7] (4.08ns)   --->   "%d = fsub i32 %bitcast_ln10, i32 %bitcast_ln10_1" [dynamatic_example/example.cpp:10]   --->   Operation 52 'fsub' 'd' <Predicate = (icmp_ln8)> <Delay = 4.08> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 4.08>
ST_6 : Operation 53 [4/7] (4.08ns)   --->   "%d = fsub i32 %bitcast_ln10, i32 %bitcast_ln10_1" [dynamatic_example/example.cpp:10]   --->   Operation 53 'fsub' 'd' <Predicate = (icmp_ln8)> <Delay = 4.08> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 4.08>
ST_7 : Operation 54 [3/7] (4.08ns)   --->   "%d = fsub i32 %bitcast_ln10, i32 %bitcast_ln10_1" [dynamatic_example/example.cpp:10]   --->   Operation 54 'fsub' 'd' <Predicate = (icmp_ln8)> <Delay = 4.08> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 4.08>
ST_8 : Operation 55 [2/7] (4.08ns)   --->   "%d = fsub i32 %bitcast_ln10, i32 %bitcast_ln10_1" [dynamatic_example/example.cpp:10]   --->   Operation 55 'fsub' 'd' <Predicate = (icmp_ln8)> <Delay = 4.08> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 4.08>
ST_9 : Operation 56 [1/7] (4.08ns)   --->   "%d = fsub i32 %bitcast_ln10, i32 %bitcast_ln10_1" [dynamatic_example/example.cpp:10]   --->   Operation 56 'fsub' 'd' <Predicate = true> <Delay = 4.08> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 78 [1/1] (0.00ns)   --->   "%acc_load_1 = load i32 %acc" [dynamatic_example/example.cpp:16]   --->   Operation 78 'load' 'acc_load_1' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_9 : Operation 79 [1/1] (0.00ns)   --->   "%ret_ln16 = ret i32 %acc_load_1" [dynamatic_example/example.cpp:16]   --->   Operation 79 'ret' 'ret_ln16' <Predicate = (!icmp_ln8)> <Delay = 0.00>

State 10 <SV = 9> <Delay = 4.08>
ST_10 : Operation 57 [1/1] (0.00ns)   --->   "%acc_load = load i32 %acc" [dynamatic_example/example.cpp:13]   --->   Operation 57 'load' 'acc_load' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 58 [1/1] (0.00ns)   --->   "%bitcast_ln11 = bitcast i32 %d" [dynamatic_example/example.cpp:11]   --->   Operation 58 'bitcast' 'bitcast_ln11' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 59 [1/1] (0.00ns)   --->   "%tmp = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln11, i32 23, i32 30" [dynamatic_example/example.cpp:11]   --->   Operation 59 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 60 [1/1] (0.00ns)   --->   "%trunc_ln11 = trunc i32 %bitcast_ln11" [dynamatic_example/example.cpp:11]   --->   Operation 60 'trunc' 'trunc_ln11' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 61 [1/1] (0.84ns)   --->   "%icmp_ln11 = icmp_ne  i8 %tmp, i8 255" [dynamatic_example/example.cpp:11]   --->   Operation 61 'icmp' 'icmp_ln11' <Predicate = true> <Delay = 0.84> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 62 [1/1] (1.05ns)   --->   "%icmp_ln11_1 = icmp_eq  i23 %trunc_ln11, i23 0" [dynamatic_example/example.cpp:11]   --->   Operation 62 'icmp' 'icmp_ln11_1' <Predicate = true> <Delay = 1.05> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 63 [2/2] (2.78ns)   --->   "%tmp_1 = fcmp_oge  i32 %d, i32 0" [dynamatic_example/example.cpp:11]   --->   Operation 63 'fcmp' 'tmp_1' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 64 [7/7] (4.08ns)   --->   "%acc_1 = fadd i32 %acc_load, i32 %d" [dynamatic_example/example.cpp:13]   --->   Operation 64 'fadd' 'acc_1' <Predicate = true> <Delay = 4.08> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 4.08>
ST_11 : Operation 65 [1/2] (2.78ns)   --->   "%tmp_1 = fcmp_oge  i32 %d, i32 0" [dynamatic_example/example.cpp:11]   --->   Operation 65 'fcmp' 'tmp_1' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 66 [6/7] (4.08ns)   --->   "%acc_1 = fadd i32 %acc_load, i32 %d" [dynamatic_example/example.cpp:13]   --->   Operation 66 'fadd' 'acc_1' <Predicate = true> <Delay = 4.08> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 4.08>
ST_12 : Operation 67 [5/7] (4.08ns)   --->   "%acc_1 = fadd i32 %acc_load, i32 %d" [dynamatic_example/example.cpp:13]   --->   Operation 67 'fadd' 'acc_1' <Predicate = true> <Delay = 4.08> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 4.08>
ST_13 : Operation 68 [4/7] (4.08ns)   --->   "%acc_1 = fadd i32 %acc_load, i32 %d" [dynamatic_example/example.cpp:13]   --->   Operation 68 'fadd' 'acc_1' <Predicate = true> <Delay = 4.08> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 4.08>
ST_14 : Operation 69 [3/7] (4.08ns)   --->   "%acc_1 = fadd i32 %acc_load, i32 %d" [dynamatic_example/example.cpp:13]   --->   Operation 69 'fadd' 'acc_1' <Predicate = true> <Delay = 4.08> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 4.08>
ST_15 : Operation 70 [2/7] (4.08ns)   --->   "%acc_1 = fadd i32 %acc_load, i32 %d" [dynamatic_example/example.cpp:13]   --->   Operation 70 'fadd' 'acc_1' <Predicate = true> <Delay = 4.08> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 4.08>
ST_16 : Operation 71 [1/7] (4.08ns)   --->   "%acc_1 = fadd i32 %acc_load, i32 %d" [dynamatic_example/example.cpp:13]   --->   Operation 71 'fadd' 'acc_1' <Predicate = true> <Delay = 4.08> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 6> <II = 1> <Delay = 4.08> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 0.87>
ST_17 : Operation 72 [1/1] (0.00ns)   --->   "%specloopname_ln5 = specloopname void @_ssdm_op_SpecLoopName, void @empty_3" [dynamatic_example/example.cpp:5]   --->   Operation 72 'specloopname' 'specloopname_ln5' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node acc_2)   --->   "%or_ln11 = or i1 %icmp_ln11_1, i1 %icmp_ln11" [dynamatic_example/example.cpp:11]   --->   Operation 73 'or' 'or_ln11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node acc_2)   --->   "%and_ln11 = and i1 %or_ln11, i1 %tmp_1" [dynamatic_example/example.cpp:11]   --->   Operation 74 'and' 'and_ln11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 75 [1/1] (0.44ns) (out node of the LUT)   --->   "%acc_2 = select i1 %and_ln11, i32 %acc_1, i32 %acc_load" [dynamatic_example/example.cpp:11]   --->   Operation 75 'select' 'acc_2' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_17 : Operation 76 [1/1] (0.42ns)   --->   "%store_ln8 = store i32 %acc_2, i32 %acc" [dynamatic_example/example.cpp:8]   --->   Operation 76 'store' 'store_ln8' <Predicate = true> <Delay = 0.42>
ST_17 : Operation 77 [1/1] (0.00ns)   --->   "%br_ln8 = br void %for.body" [dynamatic_example/example.cpp:8]   --->   Operation 77 'br' 'br_ln8' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 0.5ns.

 <State 1>: 1.43ns
The critical path consists of the following:
	'alloca' operation ('i') [5]  (0 ns)
	'load' operation ('i', dynamatic_example/example.cpp:8) on local variable 'i' [19]  (0 ns)
	'add' operation ('add_ln8', dynamatic_example/example.cpp:8) [23]  (1.01 ns)
	'store' operation ('store_ln8', dynamatic_example/example.cpp:8) of variable 'add_ln8', dynamatic_example/example.cpp:8 on local variable 'i' [46]  (0.427 ns)

 <State 2>: 1.24ns
The critical path consists of the following:
	'load' operation ('A_load', dynamatic_example/example.cpp:10) on array 'A' [30]  (1.24 ns)

 <State 3>: 4.09ns
The critical path consists of the following:
	'fsub' operation ('d', dynamatic_example/example.cpp:10) [35]  (4.09 ns)

 <State 4>: 4.09ns
The critical path consists of the following:
	'fsub' operation ('d', dynamatic_example/example.cpp:10) [35]  (4.09 ns)

 <State 5>: 4.09ns
The critical path consists of the following:
	'fsub' operation ('d', dynamatic_example/example.cpp:10) [35]  (4.09 ns)

 <State 6>: 4.09ns
The critical path consists of the following:
	'fsub' operation ('d', dynamatic_example/example.cpp:10) [35]  (4.09 ns)

 <State 7>: 4.09ns
The critical path consists of the following:
	'fsub' operation ('d', dynamatic_example/example.cpp:10) [35]  (4.09 ns)

 <State 8>: 4.09ns
The critical path consists of the following:
	'fsub' operation ('d', dynamatic_example/example.cpp:10) [35]  (4.09 ns)

 <State 9>: 4.09ns
The critical path consists of the following:
	'fsub' operation ('d', dynamatic_example/example.cpp:10) [35]  (4.09 ns)

 <State 10>: 4.09ns
The critical path consists of the following:
	'load' operation ('acc_load', dynamatic_example/example.cpp:13) on local variable 'acc' [26]  (0 ns)
	'fadd' operation ('acc', dynamatic_example/example.cpp:13) [44]  (4.09 ns)

 <State 11>: 4.09ns
The critical path consists of the following:
	'fadd' operation ('acc', dynamatic_example/example.cpp:13) [44]  (4.09 ns)

 <State 12>: 4.09ns
The critical path consists of the following:
	'fadd' operation ('acc', dynamatic_example/example.cpp:13) [44]  (4.09 ns)

 <State 13>: 4.09ns
The critical path consists of the following:
	'fadd' operation ('acc', dynamatic_example/example.cpp:13) [44]  (4.09 ns)

 <State 14>: 4.09ns
The critical path consists of the following:
	'fadd' operation ('acc', dynamatic_example/example.cpp:13) [44]  (4.09 ns)

 <State 15>: 4.09ns
The critical path consists of the following:
	'fadd' operation ('acc', dynamatic_example/example.cpp:13) [44]  (4.09 ns)

 <State 16>: 4.09ns
The critical path consists of the following:
	'fadd' operation ('acc', dynamatic_example/example.cpp:13) [44]  (4.09 ns)

 <State 17>: 0.876ns
The critical path consists of the following:
	'or' operation ('or_ln11', dynamatic_example/example.cpp:11) [41]  (0 ns)
	'and' operation ('and_ln11', dynamatic_example/example.cpp:11) [43]  (0 ns)
	'select' operation ('acc', dynamatic_example/example.cpp:11) [45]  (0.449 ns)
	'store' operation ('store_ln8', dynamatic_example/example.cpp:8) of variable 'acc', dynamatic_example/example.cpp:11 on local variable 'acc' [47]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
