// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matvec_matvec,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xck24-ubva530-2LV-c,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.601000,HLS_SYN_LAT=482,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2461,HLS_SYN_LUT=2576,HLS_VERSION=2022_2}" *)

module matvec (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        M_address0,
        M_ce0,
        M_q0,
        M_address1,
        M_ce1,
        M_q1,
        V_address0,
        V_ce0,
        V_q0,
        V_address1,
        V_ce1,
        V_q1,
        Out_r_address0,
        Out_r_ce0,
        Out_r_we0,
        Out_r_d0
);

parameter    ap_ST_fsm_state1 = 17'd1;
parameter    ap_ST_fsm_state2 = 17'd2;
parameter    ap_ST_fsm_state3 = 17'd4;
parameter    ap_ST_fsm_state4 = 17'd8;
parameter    ap_ST_fsm_state5 = 17'd16;
parameter    ap_ST_fsm_state6 = 17'd32;
parameter    ap_ST_fsm_state7 = 17'd64;
parameter    ap_ST_fsm_state8 = 17'd128;
parameter    ap_ST_fsm_state9 = 17'd256;
parameter    ap_ST_fsm_state10 = 17'd512;
parameter    ap_ST_fsm_state11 = 17'd1024;
parameter    ap_ST_fsm_state12 = 17'd2048;
parameter    ap_ST_fsm_state13 = 17'd4096;
parameter    ap_ST_fsm_state14 = 17'd8192;
parameter    ap_ST_fsm_state15 = 17'd16384;
parameter    ap_ST_fsm_state16 = 17'd32768;
parameter    ap_ST_fsm_state17 = 17'd65536;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] M_address0;
output   M_ce0;
input  [31:0] M_q0;
output  [9:0] M_address1;
output   M_ce1;
input  [31:0] M_q1;
output  [4:0] V_address0;
output   V_ce0;
input  [31:0] V_q0;
output  [4:0] V_address1;
output   V_ce1;
input  [31:0] V_q1;
output  [4:0] Out_r_address0;
output   Out_r_ce0;
output   Out_r_we0;
output  [31:0] Out_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] V_address0;
reg V_ce0;
reg[4:0] V_address1;
reg V_ce1;

(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] V_load_reg_413;
wire    ap_CS_fsm_state2;
reg   [31:0] V_load_1_reg_418;
reg   [31:0] V_load_2_reg_433;
wire    ap_CS_fsm_state3;
reg   [31:0] V_load_3_reg_438;
reg   [31:0] V_load_4_reg_453;
wire    ap_CS_fsm_state4;
reg   [31:0] V_load_5_reg_458;
reg   [31:0] V_load_6_reg_473;
wire    ap_CS_fsm_state5;
reg   [31:0] V_load_7_reg_478;
reg   [31:0] V_load_8_reg_493;
wire    ap_CS_fsm_state6;
reg   [31:0] V_load_9_reg_498;
reg   [31:0] V_load_10_reg_513;
wire    ap_CS_fsm_state7;
reg   [31:0] V_load_11_reg_518;
reg   [31:0] V_load_12_reg_533;
wire    ap_CS_fsm_state8;
reg   [31:0] V_load_13_reg_538;
reg   [31:0] V_load_14_reg_553;
wire    ap_CS_fsm_state9;
reg   [31:0] V_load_15_reg_558;
reg   [31:0] V_load_16_reg_573;
wire    ap_CS_fsm_state10;
reg   [31:0] V_load_17_reg_578;
reg   [31:0] V_load_18_reg_593;
wire    ap_CS_fsm_state11;
reg   [31:0] V_load_19_reg_598;
reg   [31:0] V_load_20_reg_613;
wire    ap_CS_fsm_state12;
reg   [31:0] V_load_21_reg_618;
reg   [31:0] V_load_22_reg_633;
wire    ap_CS_fsm_state13;
reg   [31:0] V_load_23_reg_638;
reg   [31:0] V_load_24_reg_653;
wire    ap_CS_fsm_state14;
reg   [31:0] V_load_25_reg_658;
reg   [31:0] V_load_26_reg_673;
wire    ap_CS_fsm_state15;
reg   [31:0] V_load_27_reg_678;
reg   [31:0] V_load_28_reg_693;
wire    ap_CS_fsm_state16;
reg   [31:0] V_load_29_reg_698;
wire    grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_ap_start;
wire    grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_ap_done;
wire    grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_ap_idle;
wire    grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_ap_ready;
wire   [9:0] grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_M_address0;
wire    grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_M_ce0;
wire   [9:0] grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_M_address1;
wire    grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_M_ce1;
wire   [4:0] grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_Out_r_address0;
wire    grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_Out_r_ce0;
wire    grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_Out_r_we0;
wire   [31:0] grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_Out_r_d0;
reg    grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_ap_start_reg;
wire    ap_CS_fsm_state17;
reg   [16:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
reg    ap_ST_fsm_state17_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 17'd1;
#0 grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_ap_start_reg = 1'b0;
end

matvec_matvec_Pipeline_VITIS_LOOP_7_1 grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_ap_start),
    .ap_done(grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_ap_done),
    .ap_idle(grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_ap_idle),
    .ap_ready(grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_ap_ready),
    .M_address0(grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_M_address0),
    .M_ce0(grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_M_ce0),
    .M_q0(M_q0),
    .M_address1(grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_M_address1),
    .M_ce1(grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_M_ce1),
    .M_q1(M_q1),
    .V_load(V_load_reg_413),
    .V_load_1(V_load_1_reg_418),
    .V_load_2(V_load_2_reg_433),
    .V_load_3(V_load_3_reg_438),
    .V_load_4(V_load_4_reg_453),
    .V_load_5(V_load_5_reg_458),
    .V_load_6(V_load_6_reg_473),
    .V_load_7(V_load_7_reg_478),
    .V_load_8(V_load_8_reg_493),
    .V_load_9(V_load_9_reg_498),
    .V_load_10(V_load_10_reg_513),
    .V_load_11(V_load_11_reg_518),
    .V_load_12(V_load_12_reg_533),
    .V_load_13(V_load_13_reg_538),
    .V_load_14(V_load_14_reg_553),
    .V_load_15(V_load_15_reg_558),
    .V_load_16(V_load_16_reg_573),
    .V_load_17(V_load_17_reg_578),
    .V_load_18(V_load_18_reg_593),
    .V_load_19(V_load_19_reg_598),
    .V_load_20(V_load_20_reg_613),
    .V_load_21(V_load_21_reg_618),
    .V_load_22(V_load_22_reg_633),
    .V_load_23(V_load_23_reg_638),
    .V_load_24(V_load_24_reg_653),
    .V_load_25(V_load_25_reg_658),
    .V_load_26(V_load_26_reg_673),
    .V_load_27(V_load_27_reg_678),
    .V_load_28(V_load_28_reg_693),
    .V_load_29(V_load_29_reg_698),
    .Out_r_address0(grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_Out_r_address0),
    .Out_r_ce0(grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_Out_r_ce0),
    .Out_r_we0(grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_Out_r_we0),
    .Out_r_d0(grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_Out_r_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state16)) begin
            grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_ap_start_reg <= 1'b1;
        end else if ((grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_ap_ready == 1'b1)) begin
            grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        V_load_10_reg_513 <= V_q1;
        V_load_11_reg_518 <= V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        V_load_12_reg_533 <= V_q1;
        V_load_13_reg_538 <= V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        V_load_14_reg_553 <= V_q1;
        V_load_15_reg_558 <= V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        V_load_16_reg_573 <= V_q1;
        V_load_17_reg_578 <= V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        V_load_18_reg_593 <= V_q1;
        V_load_19_reg_598 <= V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        V_load_1_reg_418 <= V_q0;
        V_load_reg_413 <= V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        V_load_20_reg_613 <= V_q1;
        V_load_21_reg_618 <= V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        V_load_22_reg_633 <= V_q1;
        V_load_23_reg_638 <= V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        V_load_24_reg_653 <= V_q1;
        V_load_25_reg_658 <= V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        V_load_26_reg_673 <= V_q1;
        V_load_27_reg_678 <= V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        V_load_28_reg_693 <= V_q1;
        V_load_29_reg_698 <= V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        V_load_2_reg_433 <= V_q1;
        V_load_3_reg_438 <= V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        V_load_4_reg_453 <= V_q1;
        V_load_5_reg_458 <= V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        V_load_6_reg_473 <= V_q1;
        V_load_7_reg_478 <= V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        V_load_8_reg_493 <= V_q1;
        V_load_9_reg_498 <= V_q0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        V_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        V_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        V_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        V_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        V_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        V_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        V_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        V_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        V_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        V_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        V_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        V_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        V_address0 = 64'd1;
    end else begin
        V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        V_address1 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        V_address1 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        V_address1 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        V_address1 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        V_address1 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        V_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        V_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        V_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        V_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        V_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        V_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        V_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        V_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        V_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        V_address1 = 64'd0;
    end else begin
        V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        V_ce0 = 1'b1;
    end else begin
        V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        V_ce1 = 1'b1;
    end else begin
        V_ce1 = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

always @ (*) begin
    if ((grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_ap_done == 1'b0)) begin
        ap_ST_fsm_state17_blk = 1'b1;
    end else begin
        ap_ST_fsm_state17_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign M_address0 = grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_M_address0;

assign M_address1 = grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_M_address1;

assign M_ce0 = grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_M_ce0;

assign M_ce1 = grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_M_ce1;

assign Out_r_address0 = grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_Out_r_address0;

assign Out_r_ce0 = grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_Out_r_ce0;

assign Out_r_d0 = grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_Out_r_d0;

assign Out_r_we0 = grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_Out_r_we0;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_ap_start = grp_matvec_Pipeline_VITIS_LOOP_7_1_fu_363_ap_start_reg;

endmodule //matvec
