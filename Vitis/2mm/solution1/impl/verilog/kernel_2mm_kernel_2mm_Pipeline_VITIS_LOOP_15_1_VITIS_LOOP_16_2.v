// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kernel_2mm_kernel_2mm_Pipeline_VITIS_LOOP_15_1_VITIS_LOOP_16_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_address0,
        A_ce0,
        A_q0,
        A_address1,
        A_ce1,
        A_q1,
        tmp_address0,
        tmp_ce0,
        tmp_we0,
        tmp_d0,
        B_address0,
        B_ce0,
        B_q0,
        B_address1,
        B_ce1,
        B_q1,
        alpha,
        grp_fu_84_p_din0,
        grp_fu_84_p_din1,
        grp_fu_84_p_dout0,
        grp_fu_84_p_ce,
        grp_fu_88_p_din0,
        grp_fu_88_p_din1,
        grp_fu_88_p_dout0,
        grp_fu_88_p_ce,
        grp_fu_92_p_din0,
        grp_fu_92_p_din1,
        grp_fu_92_p_dout0,
        grp_fu_92_p_ce,
        grp_fu_96_p_din0,
        grp_fu_96_p_din1,
        grp_fu_96_p_dout0,
        grp_fu_96_p_ce,
        grp_fu_100_p_din0,
        grp_fu_100_p_din1,
        grp_fu_100_p_dout0,
        grp_fu_100_p_ce,
        grp_fu_104_p_din0,
        grp_fu_104_p_din1,
        grp_fu_104_p_dout0,
        grp_fu_104_p_ce,
        grp_fu_108_p_din0,
        grp_fu_108_p_din1,
        grp_fu_108_p_dout0,
        grp_fu_108_p_ce,
        grp_fu_112_p_din0,
        grp_fu_112_p_din1,
        grp_fu_112_p_dout0,
        grp_fu_112_p_ce,
        grp_fu_116_p_din0,
        grp_fu_116_p_din1,
        grp_fu_116_p_dout0,
        grp_fu_116_p_ce,
        grp_fu_120_p_din0,
        grp_fu_120_p_din1,
        grp_fu_120_p_dout0,
        grp_fu_120_p_ce,
        grp_fu_124_p_din0,
        grp_fu_124_p_din1,
        grp_fu_124_p_dout0,
        grp_fu_124_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 5'd1;
parameter    ap_ST_fsm_pp0_stage1 = 5'd2;
parameter    ap_ST_fsm_pp0_stage2 = 5'd4;
parameter    ap_ST_fsm_pp0_stage3 = 5'd8;
parameter    ap_ST_fsm_pp0_stage4 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] A_address0;
output   A_ce0;
input  [31:0] A_q0;
output  [6:0] A_address1;
output   A_ce1;
input  [31:0] A_q1;
output  [6:0] tmp_address0;
output   tmp_ce0;
output   tmp_we0;
output  [31:0] tmp_d0;
output  [6:0] B_address0;
output   B_ce0;
input  [31:0] B_q0;
output  [6:0] B_address1;
output   B_ce1;
input  [31:0] B_q1;
input  [31:0] alpha;
output  [31:0] grp_fu_84_p_din0;
output  [31:0] grp_fu_84_p_din1;
input  [31:0] grp_fu_84_p_dout0;
output   grp_fu_84_p_ce;
output  [31:0] grp_fu_88_p_din0;
output  [31:0] grp_fu_88_p_din1;
input  [31:0] grp_fu_88_p_dout0;
output   grp_fu_88_p_ce;
output  [31:0] grp_fu_92_p_din0;
output  [31:0] grp_fu_92_p_din1;
input  [31:0] grp_fu_92_p_dout0;
output   grp_fu_92_p_ce;
output  [31:0] grp_fu_96_p_din0;
output  [31:0] grp_fu_96_p_din1;
input  [31:0] grp_fu_96_p_dout0;
output   grp_fu_96_p_ce;
output  [31:0] grp_fu_100_p_din0;
output  [31:0] grp_fu_100_p_din1;
input  [31:0] grp_fu_100_p_dout0;
output   grp_fu_100_p_ce;
output  [31:0] grp_fu_104_p_din0;
output  [31:0] grp_fu_104_p_din1;
input  [31:0] grp_fu_104_p_dout0;
output   grp_fu_104_p_ce;
output  [31:0] grp_fu_108_p_din0;
output  [31:0] grp_fu_108_p_din1;
input  [31:0] grp_fu_108_p_dout0;
output   grp_fu_108_p_ce;
output  [31:0] grp_fu_112_p_din0;
output  [31:0] grp_fu_112_p_din1;
input  [31:0] grp_fu_112_p_dout0;
output   grp_fu_112_p_ce;
output  [31:0] grp_fu_116_p_din0;
output  [31:0] grp_fu_116_p_din1;
input  [31:0] grp_fu_116_p_dout0;
output   grp_fu_116_p_ce;
output  [31:0] grp_fu_120_p_din0;
output  [31:0] grp_fu_120_p_din1;
input  [31:0] grp_fu_120_p_dout0;
output   grp_fu_120_p_ce;
output  [31:0] grp_fu_124_p_din0;
output  [31:0] grp_fu_124_p_din1;
input  [31:0] grp_fu_124_p_dout0;
output   grp_fu_124_p_ce;

reg ap_idle;
reg[6:0] A_address0;
reg A_ce0;
reg[6:0] A_address1;
reg A_ce1;
reg tmp_ce0;
reg tmp_we0;
reg[6:0] B_address0;
reg B_ce0;
reg[6:0] B_address1;
reg B_ce1;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state10_pp0_stage4_iter1;
wire    ap_block_state15_pp0_stage4_iter2;
wire    ap_block_state20_pp0_stage4_iter3;
wire    ap_block_pp0_stage4_subdone;
reg   [0:0] icmp_ln15_reg_823;
reg    ap_condition_exit_pp0_iter0_stage4;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
wire    ap_block_state16_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
reg   [3:0] i_2_reg_816;
wire   [0:0] icmp_ln15_fu_324_p2;
wire   [3:0] add_ln15_fu_339_p2;
reg   [3:0] add_ln15_reg_827;
wire   [0:0] icmp_ln16_fu_345_p2;
reg   [0:0] icmp_ln16_reg_834;
wire   [3:0] select_ln15_fu_351_p3;
reg   [3:0] select_ln15_reg_840;
wire   [6:0] zext_ln18_3_fu_359_p1;
reg   [6:0] zext_ln18_3_reg_849;
reg   [6:0] zext_ln18_3_reg_849_pp0_iter1_reg;
wire   [6:0] add_ln20_17_fu_363_p2;
reg   [6:0] add_ln20_17_reg_857;
wire   [3:0] select_ln15_1_fu_422_p3;
reg   [3:0] select_ln15_1_reg_862;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_state12_pp0_stage1_iter2;
wire    ap_block_state17_pp0_stage1_iter3;
wire    ap_block_pp0_stage1_11001;
reg   [3:0] select_ln15_1_reg_862_pp0_iter1_reg;
wire   [6:0] select_ln15_2_fu_427_p3;
reg   [6:0] select_ln15_2_reg_868;
reg   [6:0] select_ln15_2_reg_868_pp0_iter1_reg;
wire   [6:0] add_ln15_6_fu_434_p2;
reg   [6:0] add_ln15_6_reg_880;
wire   [6:0] add_ln15_7_fu_440_p2;
reg   [6:0] add_ln15_7_reg_885;
wire   [6:0] add_ln20_18_fu_462_p2;
reg   [6:0] add_ln20_18_reg_900;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_state13_pp0_stage2_iter2;
wire    ap_block_state18_pp0_stage2_iter3;
wire    ap_block_pp0_stage2_11001;
wire   [6:0] add_ln15_8_fu_490_p2;
reg   [6:0] add_ln15_8_reg_915;
wire   [5:0] zext_ln18_1_fu_499_p1;
reg   [5:0] zext_ln18_1_reg_920;
wire   [4:0] add_ln20_11_fu_505_p2;
reg   [4:0] add_ln20_11_reg_931;
wire   [5:0] add_ln20_12_fu_511_p2;
reg   [5:0] add_ln20_12_reg_936;
reg  signed [31:0] B_load_7_reg_946;
reg  signed [31:0] B_load_8_reg_951;
reg  signed [31:0] A_load_7_reg_956;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state9_pp0_stage3_iter1;
wire    ap_block_state14_pp0_stage3_iter2;
wire    ap_block_state19_pp0_stage3_iter3;
wire    ap_block_pp0_stage3_11001;
reg  signed [31:0] A_load_8_reg_961;
wire   [5:0] add_ln20_13_fu_533_p2;
reg   [5:0] add_ln20_13_reg_981;
wire   [5:0] add_ln20_14_fu_538_p2;
reg   [5:0] add_ln20_14_reg_986;
reg  signed [31:0] B_load_reg_991;
reg  signed [31:0] B_load_9_reg_996;
reg  signed [31:0] A_load_9_reg_1001;
wire    ap_block_pp0_stage4_11001;
wire   [6:0] add_ln20_15_fu_559_p2;
reg   [6:0] add_ln20_15_reg_1016;
wire   [6:0] add_ln20_16_fu_564_p2;
reg   [6:0] add_ln20_16_reg_1021;
reg  signed [31:0] B_load_1_reg_1026;
reg  signed [31:0] B_load_2_reg_1031;
reg  signed [31:0] B_load_3_reg_1046;
reg  signed [31:0] B_load_4_reg_1051;
reg  signed [31:0] B_load_5_reg_1066;
reg  signed [31:0] B_load_6_reg_1071;
reg  signed [31:0] A_load_reg_1076;
reg  signed [31:0] A_load_1_reg_1081;
wire   [6:0] add_ln15_1_fu_615_p2;
reg   [6:0] add_ln15_1_reg_1086;
reg  signed [31:0] mul_ln20_14_reg_1091;
reg  signed [31:0] mul_ln20_16_reg_1096;
wire   [6:0] add_ln15_2_fu_632_p2;
reg   [6:0] add_ln15_2_reg_1106;
wire   [6:0] add_ln15_3_fu_637_p2;
reg   [6:0] add_ln15_3_reg_1111;
reg  signed [31:0] mul_ln20_reg_1116;
reg  signed [31:0] mul_ln20_18_reg_1121;
reg  signed [31:0] A_load_2_reg_1126;
wire   [6:0] add_ln15_4_fu_682_p2;
reg   [6:0] add_ln15_4_reg_1141;
wire   [6:0] add_ln15_5_fu_687_p2;
reg   [6:0] add_ln15_5_reg_1146;
wire   [6:0] add_ln18_1_fu_692_p2;
reg   [6:0] add_ln18_1_reg_1151;
reg   [6:0] add_ln18_1_reg_1151_pp0_iter2_reg;
reg  signed [31:0] mul_ln20_2_reg_1156;
reg  signed [31:0] mul_ln20_4_reg_1161;
reg  signed [31:0] A_load_3_reg_1166;
reg  signed [31:0] A_load_4_reg_1171;
reg  signed [31:0] mul_ln20_6_reg_1186;
reg  signed [31:0] mul_ln20_8_reg_1191;
reg  signed [31:0] A_load_5_reg_1196;
reg  signed [31:0] A_load_6_reg_1201;
reg  signed [31:0] mul_ln20_10_reg_1206;
reg  signed [31:0] mul_ln20_12_reg_1211;
reg   [31:0] mul_ln20_15_reg_1216;
wire   [31:0] grp_fu_646_p2;
reg   [31:0] mul_ln20_17_reg_1221;
wire   [31:0] grp_fu_697_p2;
reg   [31:0] mul_ln20_1_reg_1226;
wire   [31:0] grp_fu_701_p2;
reg   [31:0] mul_ln20_19_reg_1231;
wire   [31:0] grp_fu_713_p2;
reg   [31:0] mul_ln20_3_reg_1236;
wire   [31:0] grp_fu_717_p2;
reg   [31:0] mul_ln20_5_reg_1241;
wire   [31:0] add_ln20_6_fu_741_p2;
reg   [31:0] add_ln20_6_reg_1246;
wire   [31:0] grp_fu_721_p2;
reg   [31:0] mul_ln20_7_reg_1251;
wire   [31:0] grp_fu_725_p2;
reg   [31:0] mul_ln20_9_reg_1256;
wire   [31:0] add_ln20_fu_746_p2;
reg   [31:0] add_ln20_reg_1261;
wire   [31:0] grp_fu_729_p2;
reg   [31:0] mul_ln20_11_reg_1266;
wire   [31:0] grp_fu_733_p2;
reg   [31:0] mul_ln20_13_reg_1271;
wire   [31:0] add_ln20_2_fu_754_p2;
reg   [31:0] add_ln20_2_reg_1276;
wire   [31:0] add_ln20_7_fu_763_p2;
reg   [31:0] add_ln20_7_reg_1281;
wire   [31:0] add_ln20_8_fu_772_p2;
reg   [31:0] add_ln20_8_reg_1286;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln20_18_fu_446_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln20_19_fu_457_p1;
wire   [63:0] zext_ln20_9_fu_482_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln20_10_fu_486_p1;
wire   [63:0] j_cast_fu_495_p1;
wire   [63:0] zext_ln20_20_fu_517_p1;
wire   [63:0] zext_ln20_11_fu_521_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln20_12_fu_525_p1;
wire   [63:0] zext_ln20_13_fu_529_p1;
wire   [63:0] zext_ln20_14_fu_551_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln20_15_fu_555_p1;
wire   [63:0] zext_ln20_16_fu_577_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln20_17_fu_581_p1;
wire   [63:0] zext_ln20_2_fu_593_p1;
wire   [63:0] zext_ln20_3_fu_602_p1;
wire   [63:0] zext_ln20_4_fu_628_p1;
wire   [63:0] zext_ln20_5_fu_674_p1;
wire   [63:0] zext_ln20_6_fu_678_p1;
wire   [63:0] zext_ln20_7_fu_705_p1;
wire   [63:0] zext_ln20_8_fu_709_p1;
wire   [63:0] zext_ln18_4_fu_777_p1;
reg   [3:0] j_fu_94;
wire   [3:0] add_ln16_fu_467_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_j_load;
reg   [3:0] i_fu_98;
reg   [3:0] ap_sig_allocacmp_i_2;
reg   [6:0] indvar_flatten_fu_102;
wire   [6:0] add_ln15_9_fu_330_p2;
reg   [6:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [4:0] tmp_2_fu_381_p3;
wire   [6:0] tmp_1_fu_374_p3;
wire   [6:0] zext_ln20_fu_388_p1;
wire   [4:0] tmp_4_fu_405_p3;
wire   [6:0] tmp_3_fu_398_p3;
wire   [6:0] zext_ln20_1_fu_412_p1;
wire   [6:0] add_ln20_10_fu_416_p2;
wire   [6:0] add_ln20_9_fu_392_p2;
wire   [6:0] tmp_7_cast_fu_450_p3;
wire   [4:0] zext_ln18_2_fu_502_p1;
wire   [6:0] or_ln15_fu_597_p2;
wire   [4:0] tmp_6_fu_657_p3;
wire   [6:0] tmp_5_fu_650_p3;
wire   [6:0] zext_ln18_fu_664_p1;
wire   [6:0] add_ln18_fu_668_p2;
wire   [31:0] add_ln20_5_fu_737_p2;
wire   [31:0] add_ln20_1_fu_750_p2;
wire   [31:0] add_ln20_4_fu_759_p2;
wire   [31:0] add_ln20_3_fu_768_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [4:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to3;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

kernel_2mm_mul_32s_32s_32_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_5_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_ln20_16_reg_1096),
    .din1(A_load_8_reg_961),
    .ce(1'b1),
    .dout(grp_fu_646_p2)
);

kernel_2mm_mul_32s_32s_32_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_5_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_ln20_reg_1116),
    .din1(A_load_reg_1076),
    .ce(1'b1),
    .dout(grp_fu_697_p2)
);

kernel_2mm_mul_32s_32s_32_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_5_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_ln20_18_reg_1121),
    .din1(A_load_9_reg_1001),
    .ce(1'b1),
    .dout(grp_fu_701_p2)
);

kernel_2mm_mul_32s_32s_32_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_5_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_ln20_2_reg_1156),
    .din1(A_load_1_reg_1081),
    .ce(1'b1),
    .dout(grp_fu_713_p2)
);

kernel_2mm_mul_32s_32s_32_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_5_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_ln20_4_reg_1161),
    .din1(A_load_2_reg_1126),
    .ce(1'b1),
    .dout(grp_fu_717_p2)
);

kernel_2mm_mul_32s_32s_32_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_5_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_ln20_6_reg_1186),
    .din1(A_load_3_reg_1166),
    .ce(1'b1),
    .dout(grp_fu_721_p2)
);

kernel_2mm_mul_32s_32s_32_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_5_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_ln20_8_reg_1191),
    .din1(A_load_4_reg_1171),
    .ce(1'b1),
    .dout(grp_fu_725_p2)
);

kernel_2mm_mul_32s_32s_32_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_5_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_ln20_10_reg_1206),
    .din1(A_load_5_reg_1196),
    .ce(1'b1),
    .dout(grp_fu_729_p2)
);

kernel_2mm_mul_32s_32s_32_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_5_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_ln20_12_reg_1211),
    .din1(A_load_6_reg_1201),
    .ce(1'b1),
    .dout(grp_fu_733_p2)
);

kernel_2mm_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage4),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage4)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_98 <= 4'd0;
    end else if (((icmp_ln15_reg_823 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_fu_98 <= select_ln15_1_fu_422_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln15_fu_324_p2 == 1'd0))) begin
            indvar_flatten_fu_102 <= add_ln15_9_fu_330_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_102 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_94 <= 4'd0;
    end else if (((icmp_ln15_reg_823 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        j_fu_94 <= add_ln16_fu_467_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        A_load_1_reg_1081 <= A_q0;
        A_load_reg_1076 <= A_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        A_load_2_reg_1126 <= A_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_load_3_reg_1166 <= A_q1;
        A_load_4_reg_1171 <= A_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        A_load_5_reg_1196 <= A_q1;
        A_load_6_reg_1201 <= A_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_reg_823 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        A_load_7_reg_956 <= A_q1;
        A_load_8_reg_961 <= A_q0;
        B_load_9_reg_996 <= B_q0;
        B_load_reg_991 <= B_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_reg_823 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        A_load_9_reg_1001 <= A_q1;
        B_load_1_reg_1026 <= B_q1;
        B_load_2_reg_1031 <= B_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        B_load_3_reg_1046 <= B_q1;
        B_load_4_reg_1051 <= B_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        B_load_5_reg_1066 <= B_q1;
        B_load_6_reg_1071 <= B_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_reg_823 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        B_load_7_reg_946 <= B_q1;
        B_load_8_reg_951 <= B_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln15_1_reg_1086[6 : 1] <= add_ln15_1_fu_615_p2[6 : 1];
        add_ln20_7_reg_1281 <= add_ln20_7_fu_763_p2;
        mul_ln20_14_reg_1091 <= grp_fu_84_p_dout0;
        mul_ln20_15_reg_1216 <= grp_fu_124_p_dout0;
        mul_ln20_16_reg_1096 <= grp_fu_88_p_dout0;
        mul_ln20_17_reg_1221 <= grp_fu_646_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln15_2_reg_1106[6 : 1] <= add_ln15_2_fu_632_p2[6 : 1];
        add_ln15_3_reg_1111[6 : 1] <= add_ln15_3_fu_637_p2[6 : 1];
        add_ln20_8_reg_1286 <= add_ln20_8_fu_772_p2;
        mul_ln20_18_reg_1121 <= grp_fu_96_p_dout0;
        mul_ln20_19_reg_1231 <= grp_fu_701_p2;
        mul_ln20_1_reg_1226 <= grp_fu_697_p2;
        mul_ln20_reg_1116 <= grp_fu_92_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln15_4_reg_1141[6 : 1] <= add_ln15_4_fu_682_p2[6 : 1];
        add_ln15_5_reg_1146[6 : 1] <= add_ln15_5_fu_687_p2[6 : 1];
        add_ln18_1_reg_1151 <= add_ln18_1_fu_692_p2;
        add_ln18_1_reg_1151_pp0_iter2_reg <= add_ln18_1_reg_1151;
        add_ln20_6_reg_1246 <= add_ln20_6_fu_741_p2;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        mul_ln20_2_reg_1156 <= grp_fu_100_p_dout0;
        mul_ln20_3_reg_1236 <= grp_fu_713_p2;
        mul_ln20_4_reg_1161 <= grp_fu_104_p_dout0;
        mul_ln20_5_reg_1241 <= grp_fu_717_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_reg_823 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln15_6_reg_880[6 : 1] <= add_ln15_6_fu_434_p2[6 : 1];
        add_ln15_7_reg_885[6 : 1] <= add_ln15_7_fu_440_p2[6 : 1];
        add_ln20_18_reg_900 <= add_ln20_18_fu_462_p2;
        select_ln15_1_reg_862 <= select_ln15_1_fu_422_p3;
        select_ln15_2_reg_868[6 : 1] <= select_ln15_2_fu_427_p3[6 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_reg_823 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln15_8_reg_915[6 : 1] <= add_ln15_8_fu_490_p2[6 : 1];
        add_ln20_11_reg_931 <= add_ln20_11_fu_505_p2;
        add_ln20_12_reg_936 <= add_ln20_12_fu_511_p2;
        zext_ln18_1_reg_920[3 : 0] <= zext_ln18_1_fu_499_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln15_fu_324_p2 == 1'd0))) begin
        add_ln15_reg_827 <= add_ln15_fu_339_p2;
        add_ln20_17_reg_857 <= add_ln20_17_fu_363_p2;
        icmp_ln16_reg_834 <= icmp_ln16_fu_345_p2;
        select_ln15_reg_840 <= select_ln15_fu_351_p3;
        zext_ln18_3_reg_849[3 : 0] <= zext_ln18_3_fu_359_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_reg_823 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln20_13_reg_981 <= add_ln20_13_fu_533_p2;
        add_ln20_14_reg_986 <= add_ln20_14_fu_538_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_reg_823 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln20_15_reg_1016 <= add_ln20_15_fu_559_p2;
        add_ln20_16_reg_1021 <= add_ln20_16_fu_564_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln20_2_reg_1276 <= add_ln20_2_fu_754_p2;
        mul_ln20_10_reg_1206 <= grp_fu_116_p_dout0;
        mul_ln20_11_reg_1266 <= grp_fu_729_p2;
        mul_ln20_12_reg_1211 <= grp_fu_120_p_dout0;
        mul_ln20_13_reg_1271 <= grp_fu_733_p2;
        select_ln15_1_reg_862_pp0_iter1_reg <= select_ln15_1_reg_862;
        select_ln15_2_reg_868_pp0_iter1_reg[6 : 1] <= select_ln15_2_reg_868[6 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln20_reg_1261 <= add_ln20_fu_746_p2;
        i_2_reg_816 <= ap_sig_allocacmp_i_2;
        icmp_ln15_reg_823 <= icmp_ln15_fu_324_p2;
        mul_ln20_6_reg_1186 <= grp_fu_108_p_dout0;
        mul_ln20_7_reg_1251 <= grp_fu_721_p2;
        mul_ln20_8_reg_1191 <= grp_fu_112_p_dout0;
        mul_ln20_9_reg_1256 <= grp_fu_725_p2;
        zext_ln18_3_reg_849_pp0_iter1_reg[3 : 0] <= zext_ln18_3_reg_849[3 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_address0 = zext_ln20_8_fu_709_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        A_address0 = zext_ln20_6_fu_678_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        A_address0 = zext_ln20_4_fu_628_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        A_address0 = zext_ln20_3_fu_602_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        A_address0 = zext_ln20_10_fu_486_p1;
    end else begin
        A_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_address1 = zext_ln20_7_fu_705_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        A_address1 = zext_ln20_5_fu_674_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        A_address1 = zext_ln20_2_fu_593_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        A_address1 = zext_ln20_11_fu_521_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        A_address1 = zext_ln20_9_fu_482_p1;
    end else begin
        A_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        A_ce0 = 1'b1;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        A_ce1 = 1'b1;
    end else begin
        A_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        B_address0 = zext_ln20_17_fu_581_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        B_address0 = zext_ln20_15_fu_555_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        B_address0 = zext_ln20_13_fu_529_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        B_address0 = zext_ln20_20_fu_517_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        B_address0 = zext_ln20_19_fu_457_p1;
    end else begin
        B_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        B_address1 = zext_ln20_16_fu_577_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        B_address1 = zext_ln20_14_fu_551_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        B_address1 = zext_ln20_12_fu_525_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        B_address1 = j_cast_fu_495_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        B_address1 = zext_ln20_18_fu_446_p1;
    end else begin
        B_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        B_ce0 = 1'b1;
    end else begin
        B_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        B_ce1 = 1'b1;
    end else begin
        B_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln15_reg_823 == 1'd1) & (1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_condition_exit_pp0_iter0_stage4 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to3 = 1'b1;
    end else begin
        ap_idle_pp0_1to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_2 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_2 = i_fu_98;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 7'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_102;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 4'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_94;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_ce0 = 1'b1;
    end else begin
        tmp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_we0 = 1'b1;
    end else begin
        tmp_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to3 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln15_1_fu_615_p2 = (select_ln15_2_reg_868_pp0_iter1_reg + 7'd2);

assign add_ln15_2_fu_632_p2 = (select_ln15_2_reg_868_pp0_iter1_reg + 7'd3);

assign add_ln15_3_fu_637_p2 = (select_ln15_2_reg_868_pp0_iter1_reg + 7'd4);

assign add_ln15_4_fu_682_p2 = (select_ln15_2_reg_868_pp0_iter1_reg + 7'd5);

assign add_ln15_5_fu_687_p2 = (select_ln15_2_reg_868_pp0_iter1_reg + 7'd6);

assign add_ln15_6_fu_434_p2 = (select_ln15_2_fu_427_p3 + 7'd7);

assign add_ln15_7_fu_440_p2 = (select_ln15_2_fu_427_p3 + 7'd8);

assign add_ln15_8_fu_490_p2 = (select_ln15_2_reg_868 + 7'd9);

assign add_ln15_9_fu_330_p2 = (ap_sig_allocacmp_indvar_flatten_load + 7'd1);

assign add_ln15_fu_339_p2 = (ap_sig_allocacmp_i_2 + 4'd1);

assign add_ln16_fu_467_p2 = (select_ln15_reg_840 + 4'd1);

assign add_ln18_1_fu_692_p2 = (add_ln18_fu_668_p2 + zext_ln18_3_reg_849_pp0_iter1_reg);

assign add_ln18_fu_668_p2 = (tmp_5_fu_650_p3 + zext_ln18_fu_664_p1);

assign add_ln20_10_fu_416_p2 = (tmp_3_fu_398_p3 + zext_ln20_1_fu_412_p1);

assign add_ln20_11_fu_505_p2 = (zext_ln18_2_fu_502_p1 + 5'd10);

assign add_ln20_12_fu_511_p2 = (zext_ln18_1_fu_499_p1 + 6'd20);

assign add_ln20_13_fu_533_p2 = (zext_ln18_1_reg_920 + 6'd30);

assign add_ln20_14_fu_538_p2 = ($signed(zext_ln18_1_reg_920) + $signed(6'd40));

assign add_ln20_15_fu_559_p2 = (zext_ln18_3_reg_849 + 7'd50);

assign add_ln20_16_fu_564_p2 = (zext_ln18_3_reg_849 + 7'd60);

assign add_ln20_17_fu_363_p2 = ($signed(zext_ln18_3_fu_359_p1) + $signed(7'd70));

assign add_ln20_18_fu_462_p2 = ($signed(zext_ln18_3_reg_849) + $signed(7'd90));

assign add_ln20_1_fu_750_p2 = (mul_ln20_7_reg_1251 + mul_ln20_9_reg_1256);

assign add_ln20_2_fu_754_p2 = (add_ln20_1_fu_750_p2 + mul_ln20_5_reg_1241);

assign add_ln20_3_fu_768_p2 = (add_ln20_2_reg_1276 + add_ln20_reg_1261);

assign add_ln20_4_fu_759_p2 = (mul_ln20_11_reg_1266 + mul_ln20_13_reg_1271);

assign add_ln20_5_fu_737_p2 = (mul_ln20_17_reg_1221 + mul_ln20_19_reg_1231);

assign add_ln20_6_fu_741_p2 = (add_ln20_5_fu_737_p2 + mul_ln20_15_reg_1216);

assign add_ln20_7_fu_763_p2 = (add_ln20_6_reg_1246 + add_ln20_4_fu_759_p2);

assign add_ln20_8_fu_772_p2 = (add_ln20_7_reg_1281 + add_ln20_3_fu_768_p2);

assign add_ln20_9_fu_392_p2 = (tmp_1_fu_374_p3 + zext_ln20_fu_388_p1);

assign add_ln20_fu_746_p2 = (mul_ln20_3_reg_1236 + mul_ln20_1_reg_1226);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage4;

assign grp_fu_100_p_ce = 1'b1;

assign grp_fu_100_p_din0 = B_load_1_reg_1026;

assign grp_fu_100_p_din1 = alpha;

assign grp_fu_104_p_ce = 1'b1;

assign grp_fu_104_p_din0 = B_load_2_reg_1031;

assign grp_fu_104_p_din1 = alpha;

assign grp_fu_108_p_ce = 1'b1;

assign grp_fu_108_p_din0 = B_load_3_reg_1046;

assign grp_fu_108_p_din1 = alpha;

assign grp_fu_112_p_ce = 1'b1;

assign grp_fu_112_p_din0 = B_load_4_reg_1051;

assign grp_fu_112_p_din1 = alpha;

assign grp_fu_116_p_ce = 1'b1;

assign grp_fu_116_p_din0 = B_load_5_reg_1066;

assign grp_fu_116_p_din1 = alpha;

assign grp_fu_120_p_ce = 1'b1;

assign grp_fu_120_p_din0 = B_load_6_reg_1071;

assign grp_fu_120_p_din1 = alpha;

assign grp_fu_124_p_ce = 1'b1;

assign grp_fu_124_p_din0 = mul_ln20_14_reg_1091;

assign grp_fu_124_p_din1 = A_load_7_reg_956;

assign grp_fu_84_p_ce = 1'b1;

assign grp_fu_84_p_din0 = B_load_7_reg_946;

assign grp_fu_84_p_din1 = alpha;

assign grp_fu_88_p_ce = 1'b1;

assign grp_fu_88_p_din0 = B_load_8_reg_951;

assign grp_fu_88_p_din1 = alpha;

assign grp_fu_92_p_ce = 1'b1;

assign grp_fu_92_p_din0 = B_load_reg_991;

assign grp_fu_92_p_din1 = alpha;

assign grp_fu_96_p_ce = 1'b1;

assign grp_fu_96_p_din0 = B_load_9_reg_996;

assign grp_fu_96_p_din1 = alpha;

assign icmp_ln15_fu_324_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 7'd100) ? 1'b1 : 1'b0);

assign icmp_ln16_fu_345_p2 = ((ap_sig_allocacmp_j_load == 4'd10) ? 1'b1 : 1'b0);

assign j_cast_fu_495_p1 = select_ln15_reg_840;

assign or_ln15_fu_597_p2 = (select_ln15_2_reg_868 | 7'd1);

assign select_ln15_1_fu_422_p3 = ((icmp_ln16_reg_834[0:0] == 1'b1) ? add_ln15_reg_827 : i_2_reg_816);

assign select_ln15_2_fu_427_p3 = ((icmp_ln16_reg_834[0:0] == 1'b1) ? add_ln20_10_fu_416_p2 : add_ln20_9_fu_392_p2);

assign select_ln15_fu_351_p3 = ((icmp_ln16_fu_345_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_j_load);

assign tmp_1_fu_374_p3 = {{i_2_reg_816}, {3'd0}};

assign tmp_2_fu_381_p3 = {{i_2_reg_816}, {1'd0}};

assign tmp_3_fu_398_p3 = {{add_ln15_reg_827}, {3'd0}};

assign tmp_4_fu_405_p3 = {{add_ln15_reg_827}, {1'd0}};

assign tmp_5_fu_650_p3 = {{select_ln15_1_reg_862_pp0_iter1_reg}, {3'd0}};

assign tmp_6_fu_657_p3 = {{select_ln15_1_reg_862_pp0_iter1_reg}, {1'd0}};

assign tmp_7_cast_fu_450_p3 = {{3'd5}, {select_ln15_reg_840}};

assign tmp_address0 = zext_ln18_4_fu_777_p1;

assign tmp_d0 = add_ln20_8_reg_1286;

assign zext_ln18_1_fu_499_p1 = select_ln15_reg_840;

assign zext_ln18_2_fu_502_p1 = select_ln15_reg_840;

assign zext_ln18_3_fu_359_p1 = select_ln15_fu_351_p3;

assign zext_ln18_4_fu_777_p1 = add_ln18_1_reg_1151_pp0_iter2_reg;

assign zext_ln18_fu_664_p1 = tmp_6_fu_657_p3;

assign zext_ln20_10_fu_486_p1 = add_ln15_7_reg_885;

assign zext_ln20_11_fu_521_p1 = add_ln15_8_reg_915;

assign zext_ln20_12_fu_525_p1 = add_ln20_11_reg_931;

assign zext_ln20_13_fu_529_p1 = add_ln20_12_reg_936;

assign zext_ln20_14_fu_551_p1 = add_ln20_13_reg_981;

assign zext_ln20_15_fu_555_p1 = add_ln20_14_reg_986;

assign zext_ln20_16_fu_577_p1 = add_ln20_15_reg_1016;

assign zext_ln20_17_fu_581_p1 = add_ln20_16_reg_1021;

assign zext_ln20_18_fu_446_p1 = add_ln20_17_reg_857;

assign zext_ln20_19_fu_457_p1 = tmp_7_cast_fu_450_p3;

assign zext_ln20_1_fu_412_p1 = tmp_4_fu_405_p3;

assign zext_ln20_20_fu_517_p1 = add_ln20_18_reg_900;

assign zext_ln20_2_fu_593_p1 = select_ln15_2_reg_868;

assign zext_ln20_3_fu_602_p1 = or_ln15_fu_597_p2;

assign zext_ln20_4_fu_628_p1 = add_ln15_1_reg_1086;

assign zext_ln20_5_fu_674_p1 = add_ln15_2_reg_1106;

assign zext_ln20_6_fu_678_p1 = add_ln15_3_reg_1111;

assign zext_ln20_7_fu_705_p1 = add_ln15_4_reg_1141;

assign zext_ln20_8_fu_709_p1 = add_ln15_5_reg_1146;

assign zext_ln20_9_fu_482_p1 = add_ln15_6_reg_880;

assign zext_ln20_fu_388_p1 = tmp_2_fu_381_p3;

always @ (posedge ap_clk) begin
    zext_ln18_3_reg_849[6:4] <= 3'b000;
    zext_ln18_3_reg_849_pp0_iter1_reg[6:4] <= 3'b000;
    select_ln15_2_reg_868[0] <= 1'b0;
    select_ln15_2_reg_868_pp0_iter1_reg[0] <= 1'b0;
    add_ln15_6_reg_880[0] <= 1'b1;
    add_ln15_7_reg_885[0] <= 1'b0;
    add_ln15_8_reg_915[0] <= 1'b1;
    zext_ln18_1_reg_920[5:4] <= 2'b00;
    add_ln15_1_reg_1086[0] <= 1'b0;
    add_ln15_2_reg_1106[0] <= 1'b1;
    add_ln15_3_reg_1111[0] <= 1'b0;
    add_ln15_4_reg_1141[0] <= 1'b1;
    add_ln15_5_reg_1146[0] <= 1'b0;
end

endmodule //kernel_2mm_kernel_2mm_Pipeline_VITIS_LOOP_15_1_VITIS_LOOP_16_2
