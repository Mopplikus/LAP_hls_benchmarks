-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel_2mm_kernel_2mm_Pipeline_VITIS_LOOP_22_4_VITIS_LOOP_23_5 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    tmp_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    tmp_ce0 : OUT STD_LOGIC;
    tmp_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    tmp_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    tmp_ce1 : OUT STD_LOGIC;
    tmp_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    C_ce0 : OUT STD_LOGIC;
    C_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    C_ce1 : OUT STD_LOGIC;
    C_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    D_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    D_ce0 : OUT STD_LOGIC;
    D_we0 : OUT STD_LOGIC;
    D_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    D_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    beta : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_84_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_84_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_84_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_84_p_ce : OUT STD_LOGIC;
    grp_fu_88_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_88_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_88_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_88_p_ce : OUT STD_LOGIC;
    grp_fu_92_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_92_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_92_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_92_p_ce : OUT STD_LOGIC;
    grp_fu_96_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_96_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_96_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_96_p_ce : OUT STD_LOGIC;
    grp_fu_100_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_100_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_100_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_100_p_ce : OUT STD_LOGIC;
    grp_fu_104_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_104_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_104_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_104_p_ce : OUT STD_LOGIC;
    grp_fu_108_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_108_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_108_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_108_p_ce : OUT STD_LOGIC;
    grp_fu_112_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_112_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_112_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_112_p_ce : OUT STD_LOGIC;
    grp_fu_116_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_116_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_116_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_116_p_ce : OUT STD_LOGIC;
    grp_fu_120_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_120_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_120_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_120_p_ce : OUT STD_LOGIC;
    grp_fu_124_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_124_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_124_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_124_p_ce : OUT STD_LOGIC );
end;


architecture behav of kernel_2mm_kernel_2mm_Pipeline_VITIS_LOOP_22_4_VITIS_LOOP_23_5 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_64 : STD_LOGIC_VECTOR (6 downto 0) := "1100100";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv7_32 : STD_LOGIC_VECTOR (6 downto 0) := "0110010";
    constant ap_const_lv7_3C : STD_LOGIC_VECTOR (6 downto 0) := "0111100";
    constant ap_const_lv7_5 : STD_LOGIC_VECTOR (6 downto 0) := "0000101";
    constant ap_const_lv7_6 : STD_LOGIC_VECTOR (6 downto 0) := "0000110";
    constant ap_const_lv7_46 : STD_LOGIC_VECTOR (6 downto 0) := "1000110";
    constant ap_const_lv7_7 : STD_LOGIC_VECTOR (6 downto 0) := "0000111";
    constant ap_const_lv7_8 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv7_5A : STD_LOGIC_VECTOR (6 downto 0) := "1011010";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv7_9 : STD_LOGIC_VECTOR (6 downto 0) := "0001001";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv6_14 : STD_LOGIC_VECTOR (5 downto 0) := "010100";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state15_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal icmp_ln22_reg_786 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage4 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_1_reg_781 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln22_fu_350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln22_fu_365_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln22_reg_790 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln23_fu_371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln23_reg_795 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln22_fu_377_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln22_reg_800 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln22_2_fu_411_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln22_2_reg_809 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln27_12_fu_419_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln27_12_reg_823 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln27_16_fu_423_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln27_16_reg_830 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln27_17_fu_429_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln27_17_reg_835 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal add_ln22_4_fu_485_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln22_4_reg_850 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln22_5_fu_490_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln22_5_reg_855 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln27_18_fu_503_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln27_18_reg_870 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln25_1_fu_508_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln25_1_reg_875 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_8_reg_880 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state13_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal empty_9_reg_885 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln22_6_fu_536_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln22_6_reg_900 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln22_7_fu_541_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln22_7_reg_905 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln27_19_fu_562_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln27_19_reg_920 : STD_LOGIC_VECTOR (6 downto 0);
    signal D_addr_reg_925 : STD_LOGIC_VECTOR (6 downto 0);
    signal D_addr_reg_925_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal D_addr_reg_925_pp0_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal C_load_5_reg_930 : STD_LOGIC_VECTOR (31 downto 0);
    signal C_load_6_reg_935 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln22_1_fu_571_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln22_1_reg_940 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state14_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal empty_13_reg_945 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_14_reg_950 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln22_8_fu_584_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln22_8_reg_965 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln27_13_fu_593_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln27_13_reg_970 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln27_12_fu_599_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln27_12_reg_981 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln27_13_fu_605_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln27_13_reg_986 : STD_LOGIC_VECTOR (5 downto 0);
    signal D_load_reg_996 : STD_LOGIC_VECTOR (31 downto 0);
    signal C_load_7_reg_1001 : STD_LOGIC_VECTOR (31 downto 0);
    signal C_load_8_reg_1006 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal add_ln22_2_fu_619_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln22_2_reg_1016 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln22_3_fu_624_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln22_3_reg_1021 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_15_reg_1026 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_16_reg_1031 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln27_14_fu_641_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln27_14_reg_1051 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln27_15_fu_646_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln27_15_reg_1056 : STD_LOGIC_VECTOR (5 downto 0);
    signal C_load_reg_1061 : STD_LOGIC_VECTOR (31 downto 0);
    signal C_load_9_reg_1066 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_10_reg_1071 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_17_reg_1086 : STD_LOGIC_VECTOR (31 downto 0);
    signal C_load_1_reg_1101 : STD_LOGIC_VECTOR (31 downto 0);
    signal C_load_2_reg_1106 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_11_reg_1111 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_12_reg_1116 : STD_LOGIC_VECTOR (31 downto 0);
    signal C_load_3_reg_1121 : STD_LOGIC_VECTOR (31 downto 0);
    signal C_load_4_reg_1126 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln25_reg_1131 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln27_5_reg_1136 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln27_6_reg_1141 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln27_reg_1146 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln27_7_reg_1151 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln27_8_reg_1156 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln27_4_fu_711_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln27_4_reg_1161 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln27_1_reg_1166 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln27_2_reg_1171 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln27_9_reg_1176 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln27_fu_715_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln27_reg_1181 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln27_3_reg_1186 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln27_4_reg_1191 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln27_7_fu_723_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln27_7_reg_1196 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln27_2_fu_732_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln27_2_reg_1201 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln27_8_fu_741_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln27_8_reg_1206 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln27_9_fu_750_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln27_9_reg_1211 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal zext_ln27_2_fu_471_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln27_3_fu_480_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln27_19_fu_495_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln27_20_fu_499_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln27_7_fu_528_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln27_8_fu_532_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln27_21_fu_546_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln27_22_fu_557_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln25_1_fu_567_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln27_9_fu_576_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln27_10_fu_580_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_1_cast_fu_589_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln27_23_fu_611_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln27_4_fu_615_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal zext_ln27_11_fu_629_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln27_15_fu_633_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln27_16_fu_637_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln27_5_fu_663_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln27_6_fu_667_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln27_17_fu_671_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln27_18_fu_675_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_fu_94 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln23_fu_513_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_j_load : STD_LOGIC_VECTOR (3 downto 0);
    signal i_fu_98 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln22_1_fu_440_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_allocacmp_i_1 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten53_fu_102 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln22_9_fu_356_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_allocacmp_indvar_flatten53_load : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_9_fu_332_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_8_fu_324_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln27_fu_340_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1_fu_393_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_385_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln27_1_fu_401_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln27_11_fu_405_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln27_10_fu_344_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_3_fu_453_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_2_fu_445_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln25_fu_461_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln22_fu_475_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln25_fu_465_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_14_cast_fu_550_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln27_14_fu_596_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln27_6_fu_719_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln27_1_fu_728_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln27_5_fu_737_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln27_3_fu_746_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to2 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component kernel_2mm_mul_32s_32s_32_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kernel_2mm_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component kernel_2mm_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage4,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage4)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    i_fu_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_fu_98 <= ap_const_lv4_0;
            elsif (((icmp_ln22_reg_786 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                i_fu_98 <= select_ln22_1_fu_440_p3;
            end if; 
        end if;
    end process;

    indvar_flatten53_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln22_fu_350_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indvar_flatten53_fu_102 <= add_ln22_9_fu_356_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten53_fu_102 <= ap_const_lv7_0;
                end if;
            end if; 
        end if;
    end process;

    j_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                j_fu_94 <= ap_const_lv4_0;
            elsif (((icmp_ln22_reg_786 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                j_fu_94 <= add_ln23_fu_513_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                C_load_1_reg_1101 <= C_q1;
                C_load_2_reg_1106 <= C_q0;
                empty_10_reg_1071 <= tmp_q1;
                empty_17_reg_1086 <= tmp_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                C_load_3_reg_1121 <= C_q1;
                C_load_4_reg_1126 <= C_q0;
                empty_11_reg_1111 <= tmp_q1;
                empty_12_reg_1116 <= tmp_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln22_reg_786 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                C_load_5_reg_930 <= C_q1;
                C_load_6_reg_935 <= C_q0;
                empty_8_reg_880 <= tmp_q1;
                empty_9_reg_885 <= tmp_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln22_reg_786 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                C_load_7_reg_1001 <= C_q1;
                C_load_8_reg_1006 <= C_q0;
                D_load_reg_996 <= D_q0;
                empty_13_reg_945 <= tmp_q1;
                empty_14_reg_950 <= tmp_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln22_reg_786 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                C_load_9_reg_1066 <= C_q0;
                C_load_reg_1061 <= C_q1;
                empty_15_reg_1026 <= tmp_q1;
                empty_16_reg_1031 <= tmp_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln22_reg_786 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                D_addr_reg_925 <= zext_ln25_1_fu_567_p1(7 - 1 downto 0);
                    add_ln22_6_reg_900(6 downto 1) <= add_ln22_6_fu_536_p2(6 downto 1);
                    add_ln22_7_reg_905(6 downto 1) <= add_ln22_7_fu_541_p2(6 downto 1);
                add_ln27_19_reg_920 <= add_ln27_19_fu_562_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                D_addr_reg_925_pp0_iter1_reg <= D_addr_reg_925;
                D_addr_reg_925_pp0_iter2_reg <= D_addr_reg_925_pp0_iter1_reg;
                add_ln27_2_reg_1201 <= add_ln27_2_fu_732_p2;
                add_ln27_8_reg_1206 <= add_ln27_8_fu_741_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln22_reg_786 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                    add_ln22_1_reg_940(6 downto 1) <= add_ln22_1_fu_571_p2(6 downto 1);
                    add_ln22_8_reg_965(6 downto 1) <= add_ln22_8_fu_584_p2(6 downto 1);
                add_ln27_12_reg_981 <= add_ln27_12_fu_599_p2;
                add_ln27_13_reg_986 <= add_ln27_13_fu_605_p2;
                    zext_ln27_13_reg_970(3 downto 0) <= zext_ln27_13_fu_593_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln22_reg_786 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                    add_ln22_2_reg_1016(6 downto 1) <= add_ln22_2_fu_619_p2(6 downto 1);
                    add_ln22_3_reg_1021(6 downto 1) <= add_ln22_3_fu_624_p2(6 downto 1);
                add_ln27_14_reg_1051 <= add_ln27_14_fu_641_p2;
                add_ln27_15_reg_1056 <= add_ln27_15_fu_646_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln22_reg_786 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    add_ln22_4_reg_850(6 downto 1) <= add_ln22_4_fu_485_p2(6 downto 1);
                    add_ln22_5_reg_855(6 downto 1) <= add_ln22_5_fu_490_p2(6 downto 1);
                add_ln25_1_reg_875 <= add_ln25_1_fu_508_p2;
                add_ln27_18_reg_870 <= add_ln27_18_fu_503_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln22_fu_350_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln22_reg_790 <= add_ln22_fu_365_p2;
                add_ln27_16_reg_830 <= add_ln27_16_fu_423_p2;
                add_ln27_17_reg_835 <= add_ln27_17_fu_429_p2;
                icmp_ln23_reg_795 <= icmp_ln23_fu_371_p2;
                    select_ln22_2_reg_809(6 downto 1) <= select_ln22_2_fu_411_p3(6 downto 1);
                select_ln22_reg_800 <= select_ln22_fu_377_p3;
                    zext_ln27_12_reg_823(3 downto 0) <= zext_ln27_12_fu_419_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                add_ln27_4_reg_1161 <= add_ln27_4_fu_711_p2;
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                mul_ln27_7_reg_1151 <= grp_fu_100_p_dout0;
                mul_ln27_8_reg_1156 <= grp_fu_104_p_dout0;
                mul_ln27_reg_1146 <= grp_fu_96_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                add_ln27_7_reg_1196 <= add_ln27_7_fu_723_p2;
                mul_ln27_3_reg_1186 <= grp_fu_120_p_dout0;
                mul_ln27_4_reg_1191 <= grp_fu_124_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                add_ln27_9_reg_1211 <= add_ln27_9_fu_750_p2;
                mul_ln25_reg_1131 <= grp_fu_84_p_dout0;
                mul_ln27_5_reg_1136 <= grp_fu_88_p_dout0;
                mul_ln27_6_reg_1141 <= grp_fu_92_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln27_reg_1181 <= add_ln27_fu_715_p2;
                i_1_reg_781 <= ap_sig_allocacmp_i_1;
                icmp_ln22_reg_786 <= icmp_ln22_fu_350_p2;
                mul_ln27_1_reg_1166 <= grp_fu_108_p_dout0;
                mul_ln27_2_reg_1171 <= grp_fu_112_p_dout0;
                mul_ln27_9_reg_1176 <= grp_fu_116_p_dout0;
            end if;
        end if;
    end process;
    select_ln22_2_reg_809(0) <= '0';
    zext_ln27_12_reg_823(6 downto 4) <= "000";
    add_ln22_4_reg_850(0) <= '1';
    add_ln22_5_reg_855(0) <= '0';
    add_ln22_6_reg_900(0) <= '1';
    add_ln22_7_reg_905(0) <= '0';
    add_ln22_1_reg_940(0) <= '0';
    add_ln22_8_reg_965(0) <= '1';
    zext_ln27_13_reg_970(5 downto 4) <= "00";
    add_ln22_2_reg_1016(0) <= '1';
    add_ln22_3_reg_1021(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage4_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to2, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to2 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;

    C_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage1, zext_ln27_20_fu_499_p1, ap_block_pp0_stage2, zext_ln27_22_fu_557_p1, ap_block_pp0_stage3, zext_ln27_23_fu_611_p1, ap_block_pp0_stage4, zext_ln27_16_fu_637_p1, ap_block_pp0_stage0, zext_ln27_18_fu_675_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            C_address0 <= zext_ln27_18_fu_675_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            C_address0 <= zext_ln27_16_fu_637_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            C_address0 <= zext_ln27_23_fu_611_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            C_address0 <= zext_ln27_22_fu_557_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            C_address0 <= zext_ln27_20_fu_499_p1(7 - 1 downto 0);
        else 
            C_address0 <= "XXXXXXX";
        end if; 
    end process;


    C_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage1, zext_ln27_19_fu_495_p1, ap_block_pp0_stage2, zext_ln27_21_fu_546_p1, ap_block_pp0_stage3, j_1_cast_fu_589_p1, ap_block_pp0_stage4, zext_ln27_15_fu_633_p1, ap_block_pp0_stage0, zext_ln27_17_fu_671_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            C_address1 <= zext_ln27_17_fu_671_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            C_address1 <= zext_ln27_15_fu_633_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            C_address1 <= j_1_cast_fu_589_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            C_address1 <= zext_ln27_21_fu_546_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            C_address1 <= zext_ln27_19_fu_495_p1(7 - 1 downto 0);
        else 
            C_address1 <= "XXXXXXX";
        end if; 
    end process;


    C_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            C_ce0 <= ap_const_logic_1;
        else 
            C_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    C_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            C_ce1 <= ap_const_logic_1;
        else 
            C_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    D_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, D_addr_reg_925_pp0_iter2_reg, ap_block_pp0_stage2, zext_ln25_1_fu_567_p1, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            D_address0 <= D_addr_reg_925_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            D_address0 <= zext_ln25_1_fu_567_p1(7 - 1 downto 0);
        else 
            D_address0 <= "XXXXXXX";
        end if; 
    end process;


    D_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            D_ce0 <= ap_const_logic_1;
        else 
            D_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    D_d0 <= add_ln27_9_reg_1211;

    D_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            D_we0 <= ap_const_logic_1;
        else 
            D_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln22_1_fu_571_p2 <= std_logic_vector(unsigned(select_ln22_2_reg_809) + unsigned(ap_const_lv7_2));
    add_ln22_2_fu_619_p2 <= std_logic_vector(unsigned(select_ln22_2_reg_809) + unsigned(ap_const_lv7_3));
    add_ln22_3_fu_624_p2 <= std_logic_vector(unsigned(select_ln22_2_reg_809) + unsigned(ap_const_lv7_4));
    add_ln22_4_fu_485_p2 <= std_logic_vector(unsigned(select_ln22_2_reg_809) + unsigned(ap_const_lv7_5));
    add_ln22_5_fu_490_p2 <= std_logic_vector(unsigned(select_ln22_2_reg_809) + unsigned(ap_const_lv7_6));
    add_ln22_6_fu_536_p2 <= std_logic_vector(unsigned(select_ln22_2_reg_809) + unsigned(ap_const_lv7_7));
    add_ln22_7_fu_541_p2 <= std_logic_vector(unsigned(select_ln22_2_reg_809) + unsigned(ap_const_lv7_8));
    add_ln22_8_fu_584_p2 <= std_logic_vector(unsigned(select_ln22_2_reg_809) + unsigned(ap_const_lv7_9));
    add_ln22_9_fu_356_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten53_load) + unsigned(ap_const_lv7_1));
    add_ln22_fu_365_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_1) + unsigned(ap_const_lv4_1));
    add_ln23_fu_513_p2 <= std_logic_vector(unsigned(select_ln22_reg_800) + unsigned(ap_const_lv4_1));
    add_ln25_1_fu_508_p2 <= std_logic_vector(unsigned(add_ln25_fu_465_p2) + unsigned(zext_ln27_12_reg_823));
    add_ln25_fu_465_p2 <= std_logic_vector(unsigned(tmp_2_fu_445_p3) + unsigned(zext_ln25_fu_461_p1));
    add_ln27_10_fu_344_p2 <= std_logic_vector(unsigned(tmp_8_fu_324_p3) + unsigned(zext_ln27_fu_340_p1));
    add_ln27_11_fu_405_p2 <= std_logic_vector(unsigned(tmp_s_fu_385_p3) + unsigned(zext_ln27_1_fu_401_p1));
    add_ln27_12_fu_599_p2 <= std_logic_vector(unsigned(zext_ln27_14_fu_596_p1) + unsigned(ap_const_lv5_A));
    add_ln27_13_fu_605_p2 <= std_logic_vector(unsigned(zext_ln27_13_fu_593_p1) + unsigned(ap_const_lv6_14));
    add_ln27_14_fu_641_p2 <= std_logic_vector(unsigned(zext_ln27_13_reg_970) + unsigned(ap_const_lv6_1E));
    add_ln27_15_fu_646_p2 <= std_logic_vector(unsigned(zext_ln27_13_reg_970) + unsigned(ap_const_lv6_28));
    add_ln27_16_fu_423_p2 <= std_logic_vector(unsigned(zext_ln27_12_fu_419_p1) + unsigned(ap_const_lv7_32));
    add_ln27_17_fu_429_p2 <= std_logic_vector(unsigned(zext_ln27_12_fu_419_p1) + unsigned(ap_const_lv7_3C));
    add_ln27_18_fu_503_p2 <= std_logic_vector(unsigned(zext_ln27_12_reg_823) + unsigned(ap_const_lv7_46));
    add_ln27_19_fu_562_p2 <= std_logic_vector(unsigned(zext_ln27_12_reg_823) + unsigned(ap_const_lv7_5A));
    add_ln27_1_fu_728_p2 <= std_logic_vector(unsigned(mul_ln27_2_reg_1171) + unsigned(mul_ln27_3_reg_1186));
    add_ln27_2_fu_732_p2 <= std_logic_vector(unsigned(add_ln27_1_fu_728_p2) + unsigned(mul_ln27_1_reg_1166));
    add_ln27_3_fu_746_p2 <= std_logic_vector(unsigned(add_ln27_2_reg_1201) + unsigned(add_ln27_reg_1181));
    add_ln27_4_fu_711_p2 <= std_logic_vector(unsigned(mul_ln27_5_reg_1136) + unsigned(mul_ln27_6_reg_1141));
    add_ln27_5_fu_737_p2 <= std_logic_vector(unsigned(add_ln27_4_reg_1161) + unsigned(mul_ln27_4_reg_1191));
    add_ln27_6_fu_719_p2 <= std_logic_vector(unsigned(mul_ln27_8_reg_1156) + unsigned(mul_ln27_9_reg_1176));
    add_ln27_7_fu_723_p2 <= std_logic_vector(unsigned(add_ln27_6_fu_719_p2) + unsigned(mul_ln27_7_reg_1151));
    add_ln27_8_fu_741_p2 <= std_logic_vector(unsigned(add_ln27_7_reg_1196) + unsigned(add_ln27_5_fu_737_p2));
    add_ln27_9_fu_750_p2 <= std_logic_vector(unsigned(add_ln27_8_reg_1206) + unsigned(add_ln27_3_fu_746_p2));
    add_ln27_fu_715_p2 <= std_logic_vector(unsigned(mul_ln27_reg_1146) + unsigned(mul_ln25_reg_1131));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage4_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_subdone, icmp_ln22_reg_786)
    begin
        if (((icmp_ln22_reg_786 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_condition_exit_pp0_iter0_stage4 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to2_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to2 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage4;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, i_fu_98)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i_1 <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_i_1 <= i_fu_98;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten53_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten53_fu_102)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten53_load <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_indvar_flatten53_load <= indvar_flatten53_fu_102;
        end if; 
    end process;


    ap_sig_allocacmp_j_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, j_fu_94, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_j_load <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_j_load <= j_fu_94;
        end if; 
    end process;

    grp_fu_100_p_ce <= ap_const_logic_1;
    grp_fu_100_p_din0 <= C_load_7_reg_1001;
    grp_fu_100_p_din1 <= empty_15_reg_1026;
    grp_fu_104_p_ce <= ap_const_logic_1;
    grp_fu_104_p_din0 <= C_load_8_reg_1006;
    grp_fu_104_p_din1 <= empty_16_reg_1031;
    grp_fu_108_p_ce <= ap_const_logic_1;
    grp_fu_108_p_din0 <= C_load_1_reg_1101;
    grp_fu_108_p_din1 <= empty_9_reg_885;
    grp_fu_112_p_ce <= ap_const_logic_1;
    grp_fu_112_p_din0 <= C_load_2_reg_1106;
    grp_fu_112_p_din1 <= empty_10_reg_1071;
    grp_fu_116_p_ce <= ap_const_logic_1;
    grp_fu_116_p_din0 <= C_load_9_reg_1066;
    grp_fu_116_p_din1 <= empty_17_reg_1086;
    grp_fu_120_p_ce <= ap_const_logic_1;
    grp_fu_120_p_din0 <= C_load_3_reg_1121;
    grp_fu_120_p_din1 <= empty_11_reg_1111;
    grp_fu_124_p_ce <= ap_const_logic_1;
    grp_fu_124_p_din0 <= C_load_4_reg_1126;
    grp_fu_124_p_din1 <= empty_12_reg_1116;
    grp_fu_84_p_ce <= ap_const_logic_1;
    grp_fu_84_p_din0 <= D_load_reg_996;
    grp_fu_84_p_din1 <= beta;
    grp_fu_88_p_ce <= ap_const_logic_1;
    grp_fu_88_p_din0 <= C_load_5_reg_930;
    grp_fu_88_p_din1 <= empty_13_reg_945;
    grp_fu_92_p_ce <= ap_const_logic_1;
    grp_fu_92_p_din0 <= C_load_6_reg_935;
    grp_fu_92_p_din1 <= empty_14_reg_950;
    grp_fu_96_p_ce <= ap_const_logic_1;
    grp_fu_96_p_din0 <= C_load_reg_1061;
    grp_fu_96_p_din1 <= empty_8_reg_880;
    icmp_ln22_fu_350_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten53_load = ap_const_lv7_64) else "0";
    icmp_ln23_fu_371_p2 <= "1" when (ap_sig_allocacmp_j_load = ap_const_lv4_A) else "0";
    j_1_cast_fu_589_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln22_reg_800),64));
    or_ln22_fu_475_p2 <= (select_ln22_2_reg_809 or ap_const_lv7_1);
    select_ln22_1_fu_440_p3 <= 
        add_ln22_reg_790 when (icmp_ln23_reg_795(0) = '1') else 
        i_1_reg_781;
    select_ln22_2_fu_411_p3 <= 
        add_ln27_11_fu_405_p2 when (icmp_ln23_fu_371_p2(0) = '1') else 
        add_ln27_10_fu_344_p2;
    select_ln22_fu_377_p3 <= 
        ap_const_lv4_0 when (icmp_ln23_fu_371_p2(0) = '1') else 
        ap_sig_allocacmp_j_load;
    tmp_14_cast_fu_550_p3 <= (ap_const_lv3_5 & select_ln22_reg_800);
    tmp_1_fu_393_p3 <= (add_ln22_fu_365_p2 & ap_const_lv1_0);
    tmp_2_fu_445_p3 <= (select_ln22_1_fu_440_p3 & ap_const_lv3_0);
    tmp_3_fu_453_p3 <= (select_ln22_1_fu_440_p3 & ap_const_lv1_0);
    tmp_8_fu_324_p3 <= (ap_sig_allocacmp_i_1 & ap_const_lv3_0);
    tmp_9_fu_332_p3 <= (ap_sig_allocacmp_i_1 & ap_const_lv1_0);

    tmp_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage1, zext_ln27_3_fu_480_p1, ap_block_pp0_stage2, zext_ln27_8_fu_532_p1, ap_block_pp0_stage3, zext_ln27_10_fu_580_p1, ap_block_pp0_stage4, zext_ln27_11_fu_629_p1, ap_block_pp0_stage0, zext_ln27_6_fu_667_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_address0 <= zext_ln27_6_fu_667_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            tmp_address0 <= zext_ln27_11_fu_629_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            tmp_address0 <= zext_ln27_10_fu_580_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            tmp_address0 <= zext_ln27_8_fu_532_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tmp_address0 <= zext_ln27_3_fu_480_p1(7 - 1 downto 0);
        else 
            tmp_address0 <= "XXXXXXX";
        end if; 
    end process;


    tmp_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, zext_ln27_2_fu_471_p1, ap_block_pp0_stage1, zext_ln27_7_fu_528_p1, ap_block_pp0_stage2, zext_ln27_9_fu_576_p1, ap_block_pp0_stage3, zext_ln27_4_fu_615_p1, ap_block_pp0_stage4, zext_ln27_5_fu_663_p1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_address1 <= zext_ln27_5_fu_663_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            tmp_address1 <= zext_ln27_4_fu_615_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            tmp_address1 <= zext_ln27_9_fu_576_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            tmp_address1 <= zext_ln27_7_fu_528_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tmp_address1 <= zext_ln27_2_fu_471_p1(7 - 1 downto 0);
        else 
            tmp_address1 <= "XXXXXXX";
        end if; 
    end process;


    tmp_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            tmp_ce0 <= ap_const_logic_1;
        else 
            tmp_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            tmp_ce1 <= ap_const_logic_1;
        else 
            tmp_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_s_fu_385_p3 <= (add_ln22_fu_365_p2 & ap_const_lv3_0);
    zext_ln25_1_fu_567_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln25_1_reg_875),64));
    zext_ln25_fu_461_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_453_p3),7));
    zext_ln27_10_fu_580_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln22_7_reg_905),64));
    zext_ln27_11_fu_629_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln22_8_reg_965),64));
    zext_ln27_12_fu_419_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln22_fu_377_p3),7));
    zext_ln27_13_fu_593_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln22_reg_800),6));
    zext_ln27_14_fu_596_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln22_reg_800),5));
    zext_ln27_15_fu_633_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln27_12_reg_981),64));
    zext_ln27_16_fu_637_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln27_13_reg_986),64));
    zext_ln27_17_fu_671_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln27_14_reg_1051),64));
    zext_ln27_18_fu_675_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln27_15_reg_1056),64));
    zext_ln27_19_fu_495_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln27_16_reg_830),64));
    zext_ln27_1_fu_401_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_393_p3),7));
    zext_ln27_20_fu_499_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln27_17_reg_835),64));
    zext_ln27_21_fu_546_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln27_18_reg_870),64));
    zext_ln27_22_fu_557_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_cast_fu_550_p3),64));
    zext_ln27_23_fu_611_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln27_19_reg_920),64));
    zext_ln27_2_fu_471_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln22_2_reg_809),64));
    zext_ln27_3_fu_480_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln22_fu_475_p2),64));
    zext_ln27_4_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln22_1_reg_940),64));
    zext_ln27_5_fu_663_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln22_2_reg_1016),64));
    zext_ln27_6_fu_667_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln22_3_reg_1021),64));
    zext_ln27_7_fu_528_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln22_4_reg_850),64));
    zext_ln27_8_fu_532_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln22_5_reg_855),64));
    zext_ln27_9_fu_576_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln22_6_reg_900),64));
    zext_ln27_fu_340_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_332_p3),7));
end behav;
