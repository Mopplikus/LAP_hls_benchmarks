// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module stencil_2d_stencil_2d_Pipeline_VITIS_LOOP_8_1_VITIS_LOOP_10_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        orig_address0,
        orig_ce0,
        orig_q0,
        orig_address1,
        orig_ce1,
        orig_q1,
        filter_load,
        filter_load_1,
        filter_load_2,
        filter_load_3,
        filter_load_4,
        filter_load_5,
        filter_load_6,
        filter_load_7,
        filter_load_8,
        sol_address0,
        sol_ce0,
        sol_we0,
        sol_d0,
        add21_lcssa_lcssa_phi_out,
        add21_lcssa_lcssa_phi_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 5'd1;
parameter    ap_ST_fsm_pp0_stage1 = 5'd2;
parameter    ap_ST_fsm_pp0_stage2 = 5'd4;
parameter    ap_ST_fsm_pp0_stage3 = 5'd8;
parameter    ap_ST_fsm_pp0_stage4 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] orig_address0;
output   orig_ce0;
input  [31:0] orig_q0;
output  [9:0] orig_address1;
output   orig_ce1;
input  [31:0] orig_q1;
input  [31:0] filter_load;
input  [31:0] filter_load_1;
input  [31:0] filter_load_2;
input  [31:0] filter_load_3;
input  [31:0] filter_load_4;
input  [31:0] filter_load_5;
input  [31:0] filter_load_6;
input  [31:0] filter_load_7;
input  [31:0] filter_load_8;
output  [9:0] sol_address0;
output   sol_ce0;
output   sol_we0;
output  [31:0] sol_d0;
output  [31:0] add21_lcssa_lcssa_phi_out;
output   add21_lcssa_lcssa_phi_out_ap_vld;

reg ap_idle;
reg[9:0] orig_address0;
reg orig_ce0;
reg[9:0] orig_address1;
reg orig_ce1;
reg sol_ce0;
reg sol_we0;
reg add21_lcssa_lcssa_phi_out_ap_vld;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] icmp_ln8_reg_742;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [4:0] r_1_reg_732;
wire   [4:0] empty_6_fu_298_p2;
reg   [4:0] empty_6_reg_737;
wire   [0:0] icmp_ln8_fu_362_p2;
wire   [0:0] icmp_ln10_fu_377_p2;
reg   [0:0] icmp_ln10_reg_746;
wire   [4:0] select_ln8_fu_383_p3;
reg   [4:0] select_ln8_reg_751;
wire   [9:0] add_ln17_fu_451_p2;
reg   [9:0] add_ln17_reg_756;
wire   [63:0] zext_ln17_4_fu_457_p1;
reg   [63:0] zext_ln17_4_reg_761;
reg   [63:0] zext_ln17_4_reg_761_pp0_iter1_reg;
wire   [9:0] add_ln17_3_fu_473_p2;
reg   [9:0] add_ln17_3_reg_776;
wire   [9:0] add_ln17_6_fu_479_p2;
reg   [9:0] add_ln17_6_reg_783;
wire   [31:0] mul_ln17_fu_490_p2;
reg   [31:0] mul_ln17_reg_790;
wire    ap_block_pp0_stage1_11001;
wire   [31:0] mul_ln17_1_fu_495_p2;
reg   [31:0] mul_ln17_1_reg_795;
wire   [31:0] mul_ln17_2_fu_514_p2;
reg   [31:0] mul_ln17_2_reg_810;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire   [31:0] mul_ln17_3_fu_519_p2;
reg   [31:0] mul_ln17_3_reg_815;
wire   [31:0] mul_ln17_4_fu_544_p2;
reg   [31:0] mul_ln17_4_reg_830;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire   [31:0] mul_ln17_5_fu_549_p2;
reg   [31:0] mul_ln17_5_reg_835;
wire   [31:0] mul_ln17_6_fu_573_p2;
reg   [31:0] mul_ln17_6_reg_850;
wire    ap_block_pp0_stage4_11001;
wire   [31:0] mul_ln17_7_fu_578_p2;
reg   [31:0] mul_ln17_7_reg_855;
wire   [31:0] add_ln18_1_fu_593_p2;
reg   [31:0] add_ln18_1_reg_865;
wire   [31:0] mul_ln17_8_fu_612_p2;
reg   [31:0] mul_ln17_8_reg_870;
wire   [31:0] add_ln18_fu_617_p2;
reg   [31:0] add_ln18_reg_875;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln17_5_fu_468_p1;
wire   [63:0] zext_ln17_6_fu_505_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln17_7_fu_510_p1;
wire   [63:0] zext_ln17_8_fu_529_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln17_9_fu_539_p1;
wire   [63:0] zext_ln17_fu_554_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln17_1_fu_563_p1;
wire   [63:0] zext_ln17_2_fu_588_p1;
wire    ap_block_pp0_stage4;
reg   [31:0] add21_lcssa_lcssa_phi_fu_80;
wire   [31:0] add_ln18_7_fu_644_p2;
reg   [4:0] c_fu_84;
wire   [4:0] add_ln10_fu_597_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_c_load;
reg   [4:0] r_fu_88;
wire   [4:0] select_ln8_4_fu_568_p3;
reg   [4:0] ap_sig_allocacmp_r_1;
reg   [9:0] indvar_flatten_fu_92;
wire   [9:0] add_ln8_fu_368_p2;
reg   [9:0] ap_sig_allocacmp_indvar_flatten_load;
wire    ap_block_pp0_stage1_01001;
wire   [5:0] p_shl1_fu_280_p3;
wire   [9:0] p_shl_fu_272_p3;
wire   [9:0] p_shl1_cast_fu_288_p1;
wire   [5:0] p_shl3_1_fu_312_p3;
wire   [9:0] p_shl2_1_fu_304_p3;
wire   [9:0] p_shl3_1_cast_fu_320_p1;
wire   [4:0] empty_8_fu_330_p2;
wire   [5:0] p_shl3_2_fu_344_p3;
wire   [9:0] p_shl2_2_fu_336_p3;
wire   [9:0] p_shl3_2_cast_fu_352_p1;
wire   [9:0] empty_7_fu_324_p2;
wire   [9:0] empty_fu_292_p2;
wire   [9:0] empty_9_fu_356_p2;
wire   [4:0] p_mid110_fu_407_p2;
wire   [5:0] p_shl3_2_mid1_fu_421_p3;
wire   [9:0] p_shl2_2_mid1_fu_413_p3;
wire   [9:0] p_shl3_2_cast_mid1_fu_429_p1;
wire   [9:0] p_mid112_fu_433_p2;
wire   [9:0] select_ln8_1_fu_391_p3;
wire   [9:0] zext_ln17_3_fu_447_p1;
wire   [9:0] add_ln17_1_fu_462_p2;
wire   [9:0] select_ln8_2_fu_399_p3;
wire   [9:0] select_ln8_3_fu_439_p3;
wire   [9:0] add_ln17_2_fu_500_p2;
wire   [9:0] add_ln17_4_fu_524_p2;
wire   [9:0] add_ln17_5_fu_534_p2;
wire   [9:0] add_ln17_7_fu_558_p2;
wire   [9:0] add_ln17_8_fu_583_p2;
wire   [31:0] add_ln18_4_fu_629_p2;
wire   [31:0] add_ln18_5_fu_633_p2;
wire   [31:0] add_ln18_3_fu_625_p2;
wire   [31:0] add_ln18_6_fu_638_p2;
wire   [31:0] add_ln18_2_fu_621_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [4:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

stencil_2d_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U1(
    .din0(orig_q1),
    .din1(filter_load),
    .dout(mul_ln17_fu_490_p2)
);

stencil_2d_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U2(
    .din0(orig_q0),
    .din1(filter_load_1),
    .dout(mul_ln17_1_fu_495_p2)
);

stencil_2d_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U3(
    .din0(orig_q1),
    .din1(filter_load_2),
    .dout(mul_ln17_2_fu_514_p2)
);

stencil_2d_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U4(
    .din0(orig_q0),
    .din1(filter_load_3),
    .dout(mul_ln17_3_fu_519_p2)
);

stencil_2d_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U5(
    .din0(orig_q1),
    .din1(filter_load_4),
    .dout(mul_ln17_4_fu_544_p2)
);

stencil_2d_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U6(
    .din0(orig_q0),
    .din1(filter_load_5),
    .dout(mul_ln17_5_fu_549_p2)
);

stencil_2d_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U7(
    .din0(orig_q1),
    .din1(filter_load_6),
    .dout(mul_ln17_6_fu_573_p2)
);

stencil_2d_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U8(
    .din0(orig_q0),
    .din1(filter_load_7),
    .dout(mul_ln17_7_fu_578_p2)
);

stencil_2d_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U9(
    .din0(orig_q0),
    .din1(filter_load_8),
    .dout(mul_ln17_8_fu_612_p2)
);

stencil_2d_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_fu_84 <= 5'd0;
    end else if (((icmp_ln8_reg_742 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        c_fu_84 <= add_ln10_fu_597_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_fu_362_p2 == 1'd0))) begin
            indvar_flatten_fu_92 <= add_ln8_fu_368_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_92 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        r_fu_88 <= 5'd0;
    end else if (((icmp_ln8_reg_742 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        r_fu_88 <= select_ln8_4_fu_568_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add21_lcssa_lcssa_phi_fu_80 <= add_ln18_7_fu_644_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_fu_362_p2 == 1'd0))) begin
        add_ln17_3_reg_776 <= add_ln17_3_fu_473_p2;
        add_ln17_6_reg_783 <= add_ln17_6_fu_479_p2;
        add_ln17_reg_756 <= add_ln17_fu_451_p2;
        icmp_ln10_reg_746 <= icmp_ln10_fu_377_p2;
        select_ln8_reg_751 <= select_ln8_fu_383_p3;
        zext_ln17_4_reg_761[9 : 0] <= zext_ln17_4_fu_457_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_742 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln18_1_reg_865 <= add_ln18_1_fu_593_p2;
        mul_ln17_6_reg_850 <= mul_ln17_6_fu_573_p2;
        mul_ln17_7_reg_855 <= mul_ln17_7_fu_578_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln18_reg_875 <= add_ln18_fu_617_p2;
        empty_6_reg_737 <= empty_6_fu_298_p2;
        icmp_ln8_reg_742 <= icmp_ln8_fu_362_p2;
        mul_ln17_8_reg_870 <= mul_ln17_8_fu_612_p2;
        r_1_reg_732 <= ap_sig_allocacmp_r_1;
        zext_ln17_4_reg_761_pp0_iter1_reg[9 : 0] <= zext_ln17_4_reg_761[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_742 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_ln17_1_reg_795 <= mul_ln17_1_fu_495_p2;
        mul_ln17_reg_790 <= mul_ln17_fu_490_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_742 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_ln17_2_reg_810 <= mul_ln17_2_fu_514_p2;
        mul_ln17_3_reg_815 <= mul_ln17_3_fu_519_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_742 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_ln17_4_reg_830 <= mul_ln17_4_fu_544_p2;
        mul_ln17_5_reg_835 <= mul_ln17_5_fu_549_p2;
    end
end

always @ (*) begin
    if (((icmp_ln8_reg_742 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add21_lcssa_lcssa_phi_out_ap_vld = 1'b1;
    end else begin
        add21_lcssa_lcssa_phi_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln8_reg_742 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_c_load = 5'd0;
    end else begin
        ap_sig_allocacmp_c_load = c_fu_84;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_92;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_r_1 = 5'd0;
    end else begin
        ap_sig_allocacmp_r_1 = r_fu_88;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            orig_address0 = zext_ln17_2_fu_588_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            orig_address0 = zext_ln17_1_fu_563_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            orig_address0 = zext_ln17_9_fu_539_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            orig_address0 = zext_ln17_7_fu_510_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            orig_address0 = zext_ln17_5_fu_468_p1;
        end else begin
            orig_address0 = 'bx;
        end
    end else begin
        orig_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            orig_address1 = zext_ln17_fu_554_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            orig_address1 = zext_ln17_8_fu_529_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            orig_address1 = zext_ln17_6_fu_505_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            orig_address1 = zext_ln17_4_fu_457_p1;
        end else begin
            orig_address1 = 'bx;
        end
    end else begin
        orig_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        orig_ce0 = 1'b1;
    end else begin
        orig_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        orig_ce1 = 1'b1;
    end else begin
        orig_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sol_ce0 = 1'b1;
    end else begin
        sol_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sol_we0 = 1'b1;
    end else begin
        sol_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add21_lcssa_lcssa_phi_out = add21_lcssa_lcssa_phi_fu_80;

assign add_ln10_fu_597_p2 = (select_ln8_reg_751 + 5'd1);

assign add_ln17_1_fu_462_p2 = (add_ln17_fu_451_p2 + 10'd1);

assign add_ln17_2_fu_500_p2 = (add_ln17_reg_756 + 10'd2);

assign add_ln17_3_fu_473_p2 = (select_ln8_2_fu_399_p3 + zext_ln17_3_fu_447_p1);

assign add_ln17_4_fu_524_p2 = (add_ln17_3_reg_776 + 10'd1);

assign add_ln17_5_fu_534_p2 = (add_ln17_3_reg_776 + 10'd2);

assign add_ln17_6_fu_479_p2 = (select_ln8_3_fu_439_p3 + zext_ln17_3_fu_447_p1);

assign add_ln17_7_fu_558_p2 = (add_ln17_6_reg_783 + 10'd1);

assign add_ln17_8_fu_583_p2 = (add_ln17_6_reg_783 + 10'd2);

assign add_ln17_fu_451_p2 = (select_ln8_1_fu_391_p3 + zext_ln17_3_fu_447_p1);

assign add_ln18_1_fu_593_p2 = (mul_ln17_5_reg_835 + mul_ln17_4_reg_830);

assign add_ln18_2_fu_621_p2 = (add_ln18_1_reg_865 + add_ln18_reg_875);

assign add_ln18_3_fu_625_p2 = (mul_ln17_reg_790 + mul_ln17_1_reg_795);

assign add_ln18_4_fu_629_p2 = (mul_ln17_2_reg_810 + mul_ln17_8_reg_870);

assign add_ln18_5_fu_633_p2 = (add_ln18_4_fu_629_p2 + mul_ln17_3_reg_815);

assign add_ln18_6_fu_638_p2 = (add_ln18_5_fu_633_p2 + add_ln18_3_fu_625_p2);

assign add_ln18_7_fu_644_p2 = (add_ln18_6_fu_638_p2 + add_ln18_2_fu_621_p2);

assign add_ln18_fu_617_p2 = (mul_ln17_6_reg_850 + mul_ln17_7_reg_855);

assign add_ln8_fu_368_p2 = (ap_sig_allocacmp_indvar_flatten_load + 10'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign empty_6_fu_298_p2 = (ap_sig_allocacmp_r_1 + 5'd1);

assign empty_7_fu_324_p2 = (p_shl2_1_fu_304_p3 - p_shl3_1_cast_fu_320_p1);

assign empty_8_fu_330_p2 = (ap_sig_allocacmp_r_1 + 5'd2);

assign empty_9_fu_356_p2 = (p_shl2_2_fu_336_p3 - p_shl3_2_cast_fu_352_p1);

assign empty_fu_292_p2 = (p_shl_fu_272_p3 - p_shl1_cast_fu_288_p1);

assign icmp_ln10_fu_377_p2 = ((ap_sig_allocacmp_c_load == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_362_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 10'd784) ? 1'b1 : 1'b0);

assign p_mid110_fu_407_p2 = (ap_sig_allocacmp_r_1 + 5'd3);

assign p_mid112_fu_433_p2 = (p_shl2_2_mid1_fu_413_p3 - p_shl3_2_cast_mid1_fu_429_p1);

assign p_shl1_cast_fu_288_p1 = p_shl1_fu_280_p3;

assign p_shl1_fu_280_p3 = {{ap_sig_allocacmp_r_1}, {1'd0}};

assign p_shl2_1_fu_304_p3 = {{empty_6_fu_298_p2}, {5'd0}};

assign p_shl2_2_fu_336_p3 = {{empty_8_fu_330_p2}, {5'd0}};

assign p_shl2_2_mid1_fu_413_p3 = {{p_mid110_fu_407_p2}, {5'd0}};

assign p_shl3_1_cast_fu_320_p1 = p_shl3_1_fu_312_p3;

assign p_shl3_1_fu_312_p3 = {{empty_6_fu_298_p2}, {1'd0}};

assign p_shl3_2_cast_fu_352_p1 = p_shl3_2_fu_344_p3;

assign p_shl3_2_cast_mid1_fu_429_p1 = p_shl3_2_mid1_fu_421_p3;

assign p_shl3_2_fu_344_p3 = {{empty_8_fu_330_p2}, {1'd0}};

assign p_shl3_2_mid1_fu_421_p3 = {{p_mid110_fu_407_p2}, {1'd0}};

assign p_shl_fu_272_p3 = {{ap_sig_allocacmp_r_1}, {5'd0}};

assign select_ln8_1_fu_391_p3 = ((icmp_ln10_fu_377_p2[0:0] == 1'b1) ? empty_7_fu_324_p2 : empty_fu_292_p2);

assign select_ln8_2_fu_399_p3 = ((icmp_ln10_fu_377_p2[0:0] == 1'b1) ? empty_9_fu_356_p2 : empty_7_fu_324_p2);

assign select_ln8_3_fu_439_p3 = ((icmp_ln10_fu_377_p2[0:0] == 1'b1) ? p_mid112_fu_433_p2 : empty_9_fu_356_p2);

assign select_ln8_4_fu_568_p3 = ((icmp_ln10_reg_746[0:0] == 1'b1) ? empty_6_reg_737 : r_1_reg_732);

assign select_ln8_fu_383_p3 = ((icmp_ln10_fu_377_p2[0:0] == 1'b1) ? 5'd0 : ap_sig_allocacmp_c_load);

assign sol_address0 = zext_ln17_4_reg_761_pp0_iter1_reg;

assign sol_d0 = (add_ln18_6_fu_638_p2 + add_ln18_2_fu_621_p2);

assign zext_ln17_1_fu_563_p1 = add_ln17_7_fu_558_p2;

assign zext_ln17_2_fu_588_p1 = add_ln17_8_fu_583_p2;

assign zext_ln17_3_fu_447_p1 = select_ln8_fu_383_p3;

assign zext_ln17_4_fu_457_p1 = add_ln17_fu_451_p2;

assign zext_ln17_5_fu_468_p1 = add_ln17_1_fu_462_p2;

assign zext_ln17_6_fu_505_p1 = add_ln17_2_fu_500_p2;

assign zext_ln17_7_fu_510_p1 = add_ln17_3_reg_776;

assign zext_ln17_8_fu_529_p1 = add_ln17_4_fu_524_p2;

assign zext_ln17_9_fu_539_p1 = add_ln17_5_fu_534_p2;

assign zext_ln17_fu_554_p1 = add_ln17_6_reg_783;

always @ (posedge ap_clk) begin
    zext_ln17_4_reg_761[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln17_4_reg_761_pp0_iter1_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
end

endmodule //stencil_2d_stencil_2d_Pipeline_VITIS_LOOP_8_1_VITIS_LOOP_10_2
