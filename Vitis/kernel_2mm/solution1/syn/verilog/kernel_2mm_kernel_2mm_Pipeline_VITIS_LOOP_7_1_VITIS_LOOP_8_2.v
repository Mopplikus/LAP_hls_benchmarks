// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kernel_2mm_kernel_2mm_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_8_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_address0,
        A_ce0,
        A_q0,
        A_address1,
        A_ce1,
        A_q1,
        tmp_address0,
        tmp_ce0,
        tmp_we0,
        tmp_d0,
        tmp_q0,
        B_address0,
        B_ce0,
        B_q0,
        B_address1,
        B_ce1,
        B_q1,
        alpha
);

parameter    ap_ST_fsm_pp0_stage0 = 5'd1;
parameter    ap_ST_fsm_pp0_stage1 = 5'd2;
parameter    ap_ST_fsm_pp0_stage2 = 5'd4;
parameter    ap_ST_fsm_pp0_stage3 = 5'd8;
parameter    ap_ST_fsm_pp0_stage4 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] A_address0;
output   A_ce0;
input  [31:0] A_q0;
output  [6:0] A_address1;
output   A_ce1;
input  [31:0] A_q1;
output  [6:0] tmp_address0;
output   tmp_ce0;
output   tmp_we0;
output  [31:0] tmp_d0;
input  [31:0] tmp_q0;
output  [6:0] B_address0;
output   B_ce0;
input  [31:0] B_q0;
output  [6:0] B_address1;
output   B_ce1;
input  [31:0] B_q1;
input  [31:0] alpha;

reg ap_idle;
reg[6:0] A_address0;
reg A_ce0;
reg[6:0] A_address1;
reg A_ce1;
reg[6:0] tmp_address0;
reg tmp_ce0;
reg tmp_we0;
reg[6:0] B_address0;
reg B_ce0;
reg[6:0] B_address1;
reg B_ce1;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state9_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_subdone;
reg   [0:0] icmp_ln7_reg_845;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_subdone;
reg  signed [31:0] reg_303;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire    ap_block_pp0_stage4_11001;
reg  signed [31:0] reg_307;
reg  signed [31:0] reg_311;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire    ap_block_pp0_stage3_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg  signed [31:0] reg_315;
reg  signed [31:0] reg_319;
reg  signed [31:0] reg_323;
wire  signed [31:0] grp_fu_327_p2;
reg  signed [31:0] reg_337;
wire  signed [31:0] grp_fu_332_p2;
reg  signed [31:0] reg_341;
wire   [31:0] grp_fu_345_p2;
reg   [31:0] reg_369;
wire   [31:0] grp_fu_351_p2;
reg   [31:0] reg_373;
wire   [31:0] grp_fu_357_p2;
reg   [31:0] reg_377;
wire   [31:0] grp_fu_363_p2;
reg   [31:0] reg_381;
reg   [3:0] i_1_reg_840;
wire   [0:0] icmp_ln7_fu_444_p2;
wire   [3:0] add_ln7_fu_459_p2;
reg   [3:0] add_ln7_reg_849;
wire   [0:0] icmp_ln8_fu_465_p2;
reg   [0:0] icmp_ln8_reg_854;
wire   [3:0] select_ln7_fu_471_p3;
reg   [3:0] select_ln7_reg_859;
wire   [6:0] select_ln7_2_fu_505_p3;
reg   [6:0] select_ln7_2_reg_868;
wire   [6:0] zext_ln9_3_fu_529_p1;
reg   [6:0] zext_ln9_3_reg_890;
wire   [5:0] zext_ln9_1_fu_618_p1;
reg   [5:0] zext_ln9_1_reg_937;
wire   [3:0] select_ln7_1_fu_683_p3;
reg   [3:0] select_ln7_1_reg_972;
wire   [31:0] add_ln11_4_fu_730_p2;
reg   [31:0] add_ln11_4_reg_998;
reg   [6:0] tmp_addr_reg_1003;
wire   [31:0] add_ln11_fu_785_p2;
reg   [31:0] add_ln11_reg_1008;
wire   [31:0] grp_fu_391_p2;
reg   [31:0] add_ln11_2_reg_1013;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln11_2_fu_513_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln11_3_fu_524_p1;
wire   [63:0] zext_ln11_16_fu_539_p1;
wire   [63:0] zext_ln11_17_fu_550_p1;
wire   [63:0] zext_ln11_7_fu_565_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln11_8_fu_575_p1;
wire   [63:0] j_cast_fu_580_p1;
wire   [63:0] zext_ln11_12_fu_593_p1;
wire   [63:0] zext_ln11_4_fu_603_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln11_5_fu_613_p1;
wire   [63:0] zext_ln11_13_fu_627_p1;
wire   [63:0] zext_ln11_14_fu_638_p1;
wire   [63:0] zext_ln11_6_fu_648_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln11_9_fu_658_p1;
wire   [63:0] zext_ln11_15_fu_668_p1;
wire   [63:0] zext_ln11_18_fu_678_p1;
wire   [63:0] zext_ln11_10_fu_693_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln11_11_fu_703_p1;
wire   [63:0] zext_ln11_19_fu_715_p1;
wire   [63:0] zext_ln11_20_fu_725_p1;
wire   [63:0] zext_ln9_4_fu_780_p1;
reg   [3:0] j_fu_94;
wire   [3:0] add_ln8_fu_736_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_j_load;
reg   [3:0] i_fu_98;
reg   [3:0] ap_sig_allocacmp_i_1;
reg   [6:0] indvar_flatten_fu_102;
wire   [6:0] add_ln7_9_fu_450_p2;
reg   [6:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [31:0] grp_fu_385_p2;
wire   [4:0] tmp_2_fu_426_p3;
wire   [6:0] tmp_1_fu_418_p3;
wire   [6:0] zext_ln11_fu_434_p1;
wire   [4:0] tmp_4_fu_487_p3;
wire   [6:0] tmp_3_fu_479_p3;
wire   [6:0] zext_ln11_1_fu_495_p1;
wire   [6:0] add_ln11_11_fu_499_p2;
wire   [6:0] add_ln11_10_fu_438_p2;
wire   [6:0] or_ln7_fu_518_p2;
wire   [6:0] add_ln11_16_fu_533_p2;
wire   [6:0] add_ln11_17_fu_544_p2;
wire   [6:0] add_ln7_4_fu_560_p2;
wire   [6:0] add_ln7_5_fu_570_p2;
wire   [4:0] zext_ln9_2_fu_584_p1;
wire   [4:0] add_ln11_12_fu_587_p2;
wire   [6:0] add_ln7_1_fu_598_p2;
wire   [6:0] add_ln7_2_fu_608_p2;
wire   [5:0] add_ln11_13_fu_621_p2;
wire   [5:0] add_ln11_14_fu_632_p2;
wire   [6:0] add_ln7_3_fu_643_p2;
wire   [6:0] add_ln7_6_fu_653_p2;
wire   [5:0] add_ln11_15_fu_663_p2;
wire   [6:0] add_ln11_18_fu_673_p2;
wire   [6:0] add_ln7_7_fu_688_p2;
wire   [6:0] add_ln7_8_fu_698_p2;
wire   [6:0] tmp_7_cast_fu_708_p3;
wire   [6:0] add_ln11_19_fu_720_p2;
wire   [4:0] tmp_6_fu_758_p3;
wire   [6:0] tmp_5_fu_751_p3;
wire   [6:0] zext_ln9_fu_765_p1;
wire   [6:0] add_ln9_fu_769_p2;
wire   [6:0] add_ln9_1_fu_775_p2;
wire   [31:0] add_ln11_5_fu_795_p2;
wire   [31:0] add_ln11_8_fu_800_p2;
wire   [31:0] add_ln11_3_fu_791_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [4:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

kernel_2mm_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U1(
    .din0(reg_311),
    .din1(alpha),
    .dout(grp_fu_327_p2)
);

kernel_2mm_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U2(
    .din0(reg_315),
    .din1(alpha),
    .dout(grp_fu_332_p2)
);

kernel_2mm_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U3(
    .din0(reg_337),
    .din1(reg_319),
    .dout(grp_fu_345_p2)
);

kernel_2mm_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U4(
    .din0(reg_341),
    .din1(reg_323),
    .dout(grp_fu_351_p2)
);

kernel_2mm_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U5(
    .din0(reg_337),
    .din1(reg_303),
    .dout(grp_fu_357_p2)
);

kernel_2mm_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U6(
    .din0(reg_341),
    .din1(reg_307),
    .dout(grp_fu_363_p2)
);

kernel_2mm_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_98 <= 4'd0;
    end else if (((icmp_ln7_reg_845 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        i_fu_98 <= select_ln7_1_fu_683_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln7_fu_444_p2 == 1'd0))) begin
            indvar_flatten_fu_102 <= add_ln7_9_fu_450_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_102 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_94 <= 4'd0;
    end else if (((icmp_ln7_reg_845 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        j_fu_94 <= add_ln8_fu_736_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln11_2_reg_1013 <= grp_fu_391_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln7_reg_845 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln11_4_reg_998 <= add_ln11_4_fu_730_p2;
        select_ln7_1_reg_972 <= select_ln7_1_fu_683_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln11_reg_1008 <= add_ln11_fu_785_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln7_fu_444_p2 == 1'd0))) begin
        add_ln7_reg_849 <= add_ln7_fu_459_p2;
        icmp_ln8_reg_854 <= icmp_ln8_fu_465_p2;
        select_ln7_2_reg_868[6 : 1] <= select_ln7_2_fu_505_p3[6 : 1];
        select_ln7_reg_859 <= select_ln7_fu_471_p3;
        zext_ln9_3_reg_890[3 : 0] <= zext_ln9_3_fu_529_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_1_reg_840 <= ap_sig_allocacmp_i_1;
        icmp_ln7_reg_845 <= icmp_ln7_fu_444_p2;
        tmp_addr_reg_1003 <= zext_ln9_4_fu_780_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln7_reg_845 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln7_reg_845 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_303 <= A_q1;
        reg_307 <= A_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln7_reg_845 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln7_reg_845 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln7_reg_845 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln7_reg_845 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_311 <= B_q1;
        reg_315 <= B_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln7_reg_845 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln7_reg_845 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_319 <= A_q1;
        reg_323 <= A_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln7_reg_845 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln7_reg_845 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln7_reg_845 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_337 <= grp_fu_327_p2;
        reg_341 <= grp_fu_332_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln7_reg_845 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_369 <= grp_fu_345_p2;
        reg_373 <= grp_fu_351_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln7_reg_845 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_377 <= grp_fu_357_p2;
        reg_381 <= grp_fu_363_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln7_reg_845 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        zext_ln9_1_reg_937[3 : 0] <= zext_ln9_1_fu_618_p1[3 : 0];
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            A_address0 = zext_ln11_11_fu_703_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            A_address0 = zext_ln11_9_fu_658_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            A_address0 = zext_ln11_5_fu_613_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            A_address0 = zext_ln11_8_fu_575_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            A_address0 = zext_ln11_3_fu_524_p1;
        end else begin
            A_address0 = 'bx;
        end
    end else begin
        A_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            A_address1 = zext_ln11_10_fu_693_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            A_address1 = zext_ln11_6_fu_648_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            A_address1 = zext_ln11_4_fu_603_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            A_address1 = zext_ln11_7_fu_565_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            A_address1 = zext_ln11_2_fu_513_p1;
        end else begin
            A_address1 = 'bx;
        end
    end else begin
        A_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        A_ce0 = 1'b1;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        A_ce1 = 1'b1;
    end else begin
        A_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            B_address0 = zext_ln11_20_fu_725_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            B_address0 = zext_ln11_18_fu_678_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            B_address0 = zext_ln11_14_fu_638_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            B_address0 = zext_ln11_12_fu_593_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            B_address0 = zext_ln11_17_fu_550_p1;
        end else begin
            B_address0 = 'bx;
        end
    end else begin
        B_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            B_address1 = zext_ln11_19_fu_715_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            B_address1 = zext_ln11_15_fu_668_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            B_address1 = zext_ln11_13_fu_627_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            B_address1 = j_cast_fu_580_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            B_address1 = zext_ln11_16_fu_539_p1;
        end else begin
            B_address1 = 'bx;
        end
    end else begin
        B_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        B_ce0 = 1'b1;
    end else begin
        B_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        B_ce1 = 1'b1;
    end else begin
        B_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln7_reg_845 == 1'd1) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_98;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 7'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_102;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 4'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_94;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            tmp_address0 = tmp_addr_reg_1003;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_address0 = zext_ln9_4_fu_780_p1;
        end else begin
            tmp_address0 = 'bx;
        end
    end else begin
        tmp_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        tmp_ce0 = 1'b1;
    end else begin
        tmp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_we0 = 1'b1;
    end else begin
        tmp_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln11_10_fu_438_p2 = (tmp_1_fu_418_p3 + zext_ln11_fu_434_p1);

assign add_ln11_11_fu_499_p2 = (tmp_3_fu_479_p3 + zext_ln11_1_fu_495_p1);

assign add_ln11_12_fu_587_p2 = (zext_ln9_2_fu_584_p1 + 5'd10);

assign add_ln11_13_fu_621_p2 = (zext_ln9_1_fu_618_p1 + 6'd20);

assign add_ln11_14_fu_632_p2 = (zext_ln9_1_fu_618_p1 + 6'd30);

assign add_ln11_15_fu_663_p2 = ($signed(zext_ln9_1_reg_937) + $signed(6'd40));

assign add_ln11_16_fu_533_p2 = (zext_ln9_3_fu_529_p1 + 7'd50);

assign add_ln11_17_fu_544_p2 = (zext_ln9_3_fu_529_p1 + 7'd60);

assign add_ln11_18_fu_673_p2 = ($signed(zext_ln9_3_reg_890) + $signed(7'd70));

assign add_ln11_19_fu_720_p2 = ($signed(zext_ln9_3_reg_890) + $signed(7'd90));

assign add_ln11_3_fu_791_p2 = (add_ln11_2_reg_1013 + add_ln11_reg_1008);

assign add_ln11_4_fu_730_p2 = (reg_369 + reg_373);

assign add_ln11_5_fu_795_p2 = (add_ln11_4_reg_998 + reg_377);

assign add_ln11_8_fu_800_p2 = (grp_fu_391_p2 + add_ln11_5_fu_795_p2);

assign add_ln11_fu_785_p2 = (tmp_q0 + reg_377);

assign add_ln7_1_fu_598_p2 = (select_ln7_2_reg_868 + 7'd2);

assign add_ln7_2_fu_608_p2 = (select_ln7_2_reg_868 + 7'd3);

assign add_ln7_3_fu_643_p2 = (select_ln7_2_reg_868 + 7'd4);

assign add_ln7_4_fu_560_p2 = (select_ln7_2_reg_868 + 7'd5);

assign add_ln7_5_fu_570_p2 = (select_ln7_2_reg_868 + 7'd6);

assign add_ln7_6_fu_653_p2 = (select_ln7_2_reg_868 + 7'd7);

assign add_ln7_7_fu_688_p2 = (select_ln7_2_reg_868 + 7'd8);

assign add_ln7_8_fu_698_p2 = (select_ln7_2_reg_868 + 7'd9);

assign add_ln7_9_fu_450_p2 = (ap_sig_allocacmp_indvar_flatten_load + 7'd1);

assign add_ln7_fu_459_p2 = (ap_sig_allocacmp_i_1 + 4'd1);

assign add_ln8_fu_736_p2 = (select_ln7_reg_859 + 4'd1);

assign add_ln9_1_fu_775_p2 = (add_ln9_fu_769_p2 + zext_ln9_3_reg_890);

assign add_ln9_fu_769_p2 = (tmp_5_fu_751_p3 + zext_ln9_fu_765_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign grp_fu_385_p2 = (reg_369 + reg_373);

assign grp_fu_391_p2 = (grp_fu_385_p2 + reg_381);

assign icmp_ln7_fu_444_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 7'd100) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_465_p2 = ((ap_sig_allocacmp_j_load == 4'd10) ? 1'b1 : 1'b0);

assign j_cast_fu_580_p1 = select_ln7_reg_859;

assign or_ln7_fu_518_p2 = (select_ln7_2_fu_505_p3 | 7'd1);

assign select_ln7_1_fu_683_p3 = ((icmp_ln8_reg_854[0:0] == 1'b1) ? add_ln7_reg_849 : i_1_reg_840);

assign select_ln7_2_fu_505_p3 = ((icmp_ln8_fu_465_p2[0:0] == 1'b1) ? add_ln11_11_fu_499_p2 : add_ln11_10_fu_438_p2);

assign select_ln7_fu_471_p3 = ((icmp_ln8_fu_465_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_j_load);

assign tmp_1_fu_418_p3 = {{ap_sig_allocacmp_i_1}, {3'd0}};

assign tmp_2_fu_426_p3 = {{ap_sig_allocacmp_i_1}, {1'd0}};

assign tmp_3_fu_479_p3 = {{add_ln7_fu_459_p2}, {3'd0}};

assign tmp_4_fu_487_p3 = {{add_ln7_fu_459_p2}, {1'd0}};

assign tmp_5_fu_751_p3 = {{select_ln7_1_reg_972}, {3'd0}};

assign tmp_6_fu_758_p3 = {{select_ln7_1_reg_972}, {1'd0}};

assign tmp_7_cast_fu_708_p3 = {{3'd5}, {select_ln7_reg_859}};

assign tmp_d0 = (add_ln11_8_fu_800_p2 + add_ln11_3_fu_791_p2);

assign zext_ln11_10_fu_693_p1 = add_ln7_7_fu_688_p2;

assign zext_ln11_11_fu_703_p1 = add_ln7_8_fu_698_p2;

assign zext_ln11_12_fu_593_p1 = add_ln11_12_fu_587_p2;

assign zext_ln11_13_fu_627_p1 = add_ln11_13_fu_621_p2;

assign zext_ln11_14_fu_638_p1 = add_ln11_14_fu_632_p2;

assign zext_ln11_15_fu_668_p1 = add_ln11_15_fu_663_p2;

assign zext_ln11_16_fu_539_p1 = add_ln11_16_fu_533_p2;

assign zext_ln11_17_fu_550_p1 = add_ln11_17_fu_544_p2;

assign zext_ln11_18_fu_678_p1 = add_ln11_18_fu_673_p2;

assign zext_ln11_19_fu_715_p1 = tmp_7_cast_fu_708_p3;

assign zext_ln11_1_fu_495_p1 = tmp_4_fu_487_p3;

assign zext_ln11_20_fu_725_p1 = add_ln11_19_fu_720_p2;

assign zext_ln11_2_fu_513_p1 = select_ln7_2_fu_505_p3;

assign zext_ln11_3_fu_524_p1 = or_ln7_fu_518_p2;

assign zext_ln11_4_fu_603_p1 = add_ln7_1_fu_598_p2;

assign zext_ln11_5_fu_613_p1 = add_ln7_2_fu_608_p2;

assign zext_ln11_6_fu_648_p1 = add_ln7_3_fu_643_p2;

assign zext_ln11_7_fu_565_p1 = add_ln7_4_fu_560_p2;

assign zext_ln11_8_fu_575_p1 = add_ln7_5_fu_570_p2;

assign zext_ln11_9_fu_658_p1 = add_ln7_6_fu_653_p2;

assign zext_ln11_fu_434_p1 = tmp_2_fu_426_p3;

assign zext_ln9_1_fu_618_p1 = select_ln7_reg_859;

assign zext_ln9_2_fu_584_p1 = select_ln7_reg_859;

assign zext_ln9_3_fu_529_p1 = select_ln7_fu_471_p3;

assign zext_ln9_4_fu_780_p1 = add_ln9_1_fu_775_p2;

assign zext_ln9_fu_765_p1 = tmp_6_fu_758_p3;

always @ (posedge ap_clk) begin
    select_ln7_2_reg_868[0] <= 1'b0;
    zext_ln9_3_reg_890[6:4] <= 3'b000;
    zext_ln9_1_reg_937[5:4] <= 2'b00;
end

endmodule //kernel_2mm_kernel_2mm_Pipeline_VITIS_LOOP_7_1_VITIS_LOOP_8_2
