// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kernel_2mm_kernel_2mm_Pipeline_VITIS_LOOP_15_4_VITIS_LOOP_16_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        tmp_address0,
        tmp_ce0,
        tmp_q0,
        tmp_address1,
        tmp_ce1,
        tmp_q1,
        C_address0,
        C_ce0,
        C_q0,
        C_address1,
        C_ce1,
        C_q1,
        D_address0,
        D_ce0,
        D_we0,
        D_d0,
        D_q0,
        beta
);

parameter    ap_ST_fsm_pp0_stage0 = 5'd1;
parameter    ap_ST_fsm_pp0_stage1 = 5'd2;
parameter    ap_ST_fsm_pp0_stage2 = 5'd4;
parameter    ap_ST_fsm_pp0_stage3 = 5'd8;
parameter    ap_ST_fsm_pp0_stage4 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] tmp_address0;
output   tmp_ce0;
input  [31:0] tmp_q0;
output  [6:0] tmp_address1;
output   tmp_ce1;
input  [31:0] tmp_q1;
output  [6:0] C_address0;
output   C_ce0;
input  [31:0] C_q0;
output  [6:0] C_address1;
output   C_ce1;
input  [31:0] C_q1;
output  [6:0] D_address0;
output   D_ce0;
output   D_we0;
output  [31:0] D_d0;
input  [31:0] D_q0;
input  [31:0] beta;

reg ap_idle;
reg[6:0] tmp_address0;
reg tmp_ce0;
reg[6:0] tmp_address1;
reg tmp_ce1;
reg[6:0] C_address0;
reg C_ce0;
reg[6:0] C_address1;
reg C_ce1;
reg[6:0] D_address0;
reg D_ce0;
reg D_we0;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_subdone;
reg   [0:0] icmp_ln15_reg_834;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_subdone;
reg  signed [31:0] reg_303;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire    ap_block_pp0_stage4_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg  signed [31:0] reg_307;
reg  signed [31:0] reg_311;
reg  signed [31:0] reg_315;
reg  signed [31:0] reg_319;
wire    ap_block_pp0_stage2_11001;
wire   [31:0] grp_fu_324_p2;
reg   [31:0] reg_336;
wire   [0:0] icmp_ln15_fu_387_p2;
wire   [3:0] select_ln15_fu_414_p3;
reg   [3:0] select_ln15_reg_838;
wire   [6:0] select_ln15_2_fu_482_p3;
reg   [6:0] select_ln15_2_reg_847;
wire   [6:0] zext_ln19_12_fu_506_p1;
reg   [6:0] zext_ln19_12_reg_869;
reg   [6:0] D_addr_reg_885;
reg   [6:0] D_addr_reg_885_pp0_iter1_reg;
reg  signed [31:0] D_load_reg_910;
reg  signed [31:0] empty_14_reg_925;
wire   [5:0] zext_ln19_13_fu_611_p1;
reg   [5:0] zext_ln19_13_reg_930;
wire   [31:0] x_fu_636_p2;
reg   [31:0] x_reg_945;
reg  signed [31:0] C_load_reg_950;
reg  signed [31:0] C_load_1_reg_955;
wire   [31:0] mul_ln19_fu_680_p2;
reg   [31:0] mul_ln19_reg_980;
wire   [31:0] mul_ln19_5_fu_685_p2;
reg   [31:0] mul_ln19_5_reg_985;
wire   [31:0] mul_ln19_6_fu_691_p2;
reg   [31:0] mul_ln19_6_reg_990;
wire   [31:0] mul_ln19_1_fu_738_p2;
reg   [31:0] mul_ln19_1_reg_1015;
wire   [31:0] mul_ln19_3_fu_743_p2;
reg   [31:0] mul_ln19_3_reg_1020;
wire   [31:0] add_ln19_fu_749_p2;
reg   [31:0] add_ln19_reg_1025;
wire   [31:0] add_ln19_4_fu_753_p2;
reg   [31:0] add_ln19_4_reg_1030;
wire   [31:0] grp_fu_330_p2;
reg   [31:0] mul_ln19_7_reg_1035;
wire   [31:0] add_ln19_2_fu_772_p2;
reg   [31:0] add_ln19_2_reg_1040;
reg   [31:0] mul_ln19_8_reg_1045;
reg   [31:0] mul_ln19_9_reg_1050;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln19_2_fu_490_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln19_3_fu_501_p1;
wire   [63:0] zext_ln19_19_fu_516_p1;
wire   [63:0] zext_ln19_20_fu_527_p1;
wire   [63:0] zext_ln17_1_fu_538_p1;
wire   [63:0] zext_ln19_7_fu_558_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln19_8_fu_568_p1;
wire   [63:0] j_1_cast_fu_573_p1;
wire   [63:0] zext_ln19_15_fu_586_p1;
wire   [63:0] zext_ln19_4_fu_596_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln19_5_fu_606_p1;
wire   [63:0] zext_ln19_16_fu_620_p1;
wire   [63:0] zext_ln19_17_fu_631_p1;
wire   [63:0] zext_ln19_6_fu_645_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln19_9_fu_655_p1;
wire   [63:0] zext_ln19_18_fu_665_p1;
wire   [63:0] zext_ln19_21_fu_675_p1;
wire   [63:0] zext_ln19_10_fu_701_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln19_11_fu_711_p1;
wire   [63:0] zext_ln19_22_fu_723_p1;
wire   [63:0] zext_ln19_23_fu_733_p1;
reg   [3:0] j_fu_94;
wire   [3:0] add_ln16_fu_757_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_j_load;
reg   [3:0] i_1_fu_98;
wire   [3:0] select_ln15_1_fu_448_p3;
reg   [3:0] ap_sig_allocacmp_i;
reg   [6:0] indvar_flatten53_fu_102;
wire   [6:0] add_ln15_9_fu_393_p2;
reg   [6:0] ap_sig_allocacmp_indvar_flatten53_load;
wire   [4:0] tmp_9_fu_369_p3;
wire   [6:0] tmp_8_fu_361_p3;
wire   [6:0] zext_ln19_fu_377_p1;
wire   [0:0] icmp_ln16_fu_408_p2;
wire   [3:0] add_ln15_fu_402_p2;
wire   [4:0] tmp_1_fu_430_p3;
wire   [6:0] tmp_s_fu_422_p3;
wire   [6:0] zext_ln19_1_fu_438_p1;
wire   [4:0] tmp_3_fu_464_p3;
wire   [6:0] tmp_2_fu_456_p3;
wire   [6:0] zext_ln17_fu_472_p1;
wire   [6:0] add_ln19_11_fu_442_p2;
wire   [6:0] add_ln19_10_fu_381_p2;
wire   [6:0] or_ln15_fu_495_p2;
wire   [6:0] add_ln19_16_fu_510_p2;
wire   [6:0] add_ln19_17_fu_521_p2;
wire   [6:0] add_ln17_fu_476_p2;
wire   [6:0] add_ln17_1_fu_532_p2;
wire   [6:0] add_ln15_4_fu_553_p2;
wire   [6:0] add_ln15_5_fu_563_p2;
wire   [4:0] zext_ln19_14_fu_577_p1;
wire   [4:0] add_ln19_12_fu_580_p2;
wire   [6:0] add_ln15_1_fu_591_p2;
wire   [6:0] add_ln15_2_fu_601_p2;
wire   [5:0] add_ln19_13_fu_614_p2;
wire   [5:0] add_ln19_14_fu_625_p2;
wire   [6:0] add_ln15_3_fu_640_p2;
wire   [6:0] add_ln15_6_fu_650_p2;
wire   [5:0] add_ln19_15_fu_660_p2;
wire   [6:0] add_ln19_18_fu_670_p2;
wire   [6:0] add_ln15_7_fu_696_p2;
wire   [6:0] add_ln15_8_fu_706_p2;
wire   [6:0] tmp_14_cast_fu_716_p3;
wire   [6:0] add_ln19_19_fu_728_p2;
wire   [31:0] add_ln19_1_fu_767_p2;
wire   [31:0] add_ln19_6_fu_786_p2;
wire   [31:0] add_ln19_7_fu_790_p2;
wire   [31:0] add_ln19_5_fu_781_p2;
wire   [31:0] add_ln19_8_fu_795_p2;
wire   [31:0] add_ln19_3_fu_777_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [4:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

kernel_2mm_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U12(
    .din0(reg_311),
    .din1(reg_303),
    .dout(grp_fu_324_p2)
);

kernel_2mm_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U13(
    .din0(reg_315),
    .din1(reg_307),
    .dout(grp_fu_330_p2)
);

kernel_2mm_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U14(
    .din0(D_load_reg_910),
    .din1(beta),
    .dout(x_fu_636_p2)
);

kernel_2mm_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U15(
    .din0(C_load_reg_950),
    .din1(reg_303),
    .dout(mul_ln19_fu_680_p2)
);

kernel_2mm_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U16(
    .din0(reg_311),
    .din1(reg_319),
    .dout(mul_ln19_5_fu_685_p2)
);

kernel_2mm_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U17(
    .din0(reg_315),
    .din1(empty_14_reg_925),
    .dout(mul_ln19_6_fu_691_p2)
);

kernel_2mm_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U18(
    .din0(C_load_1_reg_955),
    .din1(reg_307),
    .dout(mul_ln19_1_fu_738_p2)
);

kernel_2mm_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U19(
    .din0(reg_315),
    .din1(reg_319),
    .dout(mul_ln19_3_fu_743_p2)
);

kernel_2mm_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln15_fu_387_p2 == 1'd0))) begin
            i_1_fu_98 <= select_ln15_1_fu_448_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_1_fu_98 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln15_fu_387_p2 == 1'd0))) begin
            indvar_flatten53_fu_102 <= add_ln15_9_fu_393_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten53_fu_102 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_94 <= 4'd0;
    end else if (((icmp_ln15_reg_834 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        j_fu_94 <= add_ln16_fu_757_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_reg_834 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            reg_319 <= tmp_q0;
        end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            reg_319 <= tmp_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_reg_834 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        C_load_1_reg_955 <= C_q0;
        C_load_reg_950 <= C_q1;
        empty_14_reg_925 <= tmp_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln15_fu_387_p2 == 1'd0))) begin
        D_addr_reg_885 <= zext_ln17_1_fu_538_p1;
        select_ln15_2_reg_847[6 : 1] <= select_ln15_2_fu_482_p3[6 : 1];
        select_ln15_reg_838 <= select_ln15_fu_414_p3;
        zext_ln19_12_reg_869[3 : 0] <= zext_ln19_12_fu_506_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        D_addr_reg_885_pp0_iter1_reg <= D_addr_reg_885;
        add_ln19_2_reg_1040 <= add_ln19_2_fu_772_p2;
        icmp_ln15_reg_834 <= icmp_ln15_fu_387_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_reg_834 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        D_load_reg_910 <= D_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_reg_834 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln19_4_reg_1030 <= add_ln19_4_fu_753_p2;
        add_ln19_reg_1025 <= add_ln19_fu_749_p2;
        mul_ln19_1_reg_1015 <= mul_ln19_1_fu_738_p2;
        mul_ln19_3_reg_1020 <= mul_ln19_3_fu_743_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_reg_834 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_ln19_5_reg_985 <= mul_ln19_5_fu_685_p2;
        mul_ln19_6_reg_990 <= mul_ln19_6_fu_691_p2;
        mul_ln19_reg_980 <= mul_ln19_fu_680_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_ln19_7_reg_1035 <= grp_fu_330_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_ln19_8_reg_1045 <= grp_fu_324_p2;
        mul_ln19_9_reg_1050 <= grp_fu_330_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln15_reg_834 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln15_reg_834 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln15_reg_834 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_303 <= tmp_q1;
        reg_311 <= C_q1;
        reg_315 <= C_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln15_reg_834 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln15_reg_834 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_307 <= tmp_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln15_reg_834 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        reg_336 <= grp_fu_324_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_reg_834 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        x_reg_945 <= x_fu_636_p2;
        zext_ln19_13_reg_930[3 : 0] <= zext_ln19_13_fu_611_p1[3 : 0];
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            C_address0 = zext_ln19_23_fu_733_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            C_address0 = zext_ln19_21_fu_675_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            C_address0 = zext_ln19_17_fu_631_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            C_address0 = zext_ln19_15_fu_586_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            C_address0 = zext_ln19_20_fu_527_p1;
        end else begin
            C_address0 = 'bx;
        end
    end else begin
        C_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            C_address1 = zext_ln19_22_fu_723_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            C_address1 = zext_ln19_18_fu_665_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            C_address1 = zext_ln19_16_fu_620_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            C_address1 = j_1_cast_fu_573_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            C_address1 = zext_ln19_19_fu_516_p1;
        end else begin
            C_address1 = 'bx;
        end
    end else begin
        C_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        C_ce0 = 1'b1;
    end else begin
        C_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        C_ce1 = 1'b1;
    end else begin
        C_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        D_address0 = D_addr_reg_885_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        D_address0 = zext_ln17_1_fu_538_p1;
    end else begin
        D_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        D_ce0 = 1'b1;
    end else begin
        D_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        D_we0 = 1'b1;
    end else begin
        D_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln15_reg_834 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i = 4'd0;
    end else begin
        ap_sig_allocacmp_i = i_1_fu_98;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten53_load = 7'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten53_load = indvar_flatten53_fu_102;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 4'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_94;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            tmp_address0 = zext_ln19_11_fu_711_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            tmp_address0 = zext_ln19_9_fu_655_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            tmp_address0 = zext_ln19_5_fu_606_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_address0 = zext_ln19_8_fu_568_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_address0 = zext_ln19_3_fu_501_p1;
        end else begin
            tmp_address0 = 'bx;
        end
    end else begin
        tmp_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            tmp_address1 = zext_ln19_10_fu_701_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            tmp_address1 = zext_ln19_6_fu_645_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            tmp_address1 = zext_ln19_4_fu_596_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_address1 = zext_ln19_7_fu_558_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_address1 = zext_ln19_2_fu_490_p1;
        end else begin
            tmp_address1 = 'bx;
        end
    end else begin
        tmp_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        tmp_ce0 = 1'b1;
    end else begin
        tmp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        tmp_ce1 = 1'b1;
    end else begin
        tmp_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign D_d0 = (add_ln19_8_fu_795_p2 + add_ln19_3_fu_777_p2);

assign add_ln15_1_fu_591_p2 = (select_ln15_2_reg_847 + 7'd2);

assign add_ln15_2_fu_601_p2 = (select_ln15_2_reg_847 + 7'd3);

assign add_ln15_3_fu_640_p2 = (select_ln15_2_reg_847 + 7'd4);

assign add_ln15_4_fu_553_p2 = (select_ln15_2_reg_847 + 7'd5);

assign add_ln15_5_fu_563_p2 = (select_ln15_2_reg_847 + 7'd6);

assign add_ln15_6_fu_650_p2 = (select_ln15_2_reg_847 + 7'd7);

assign add_ln15_7_fu_696_p2 = (select_ln15_2_reg_847 + 7'd8);

assign add_ln15_8_fu_706_p2 = (select_ln15_2_reg_847 + 7'd9);

assign add_ln15_9_fu_393_p2 = (ap_sig_allocacmp_indvar_flatten53_load + 7'd1);

assign add_ln15_fu_402_p2 = (ap_sig_allocacmp_i + 4'd1);

assign add_ln16_fu_757_p2 = (select_ln15_reg_838 + 4'd1);

assign add_ln17_1_fu_532_p2 = (add_ln17_fu_476_p2 + zext_ln19_12_fu_506_p1);

assign add_ln17_fu_476_p2 = (tmp_2_fu_456_p3 + zext_ln17_fu_472_p1);

assign add_ln19_10_fu_381_p2 = (tmp_8_fu_361_p3 + zext_ln19_fu_377_p1);

assign add_ln19_11_fu_442_p2 = (tmp_s_fu_422_p3 + zext_ln19_1_fu_438_p1);

assign add_ln19_12_fu_580_p2 = (zext_ln19_14_fu_577_p1 + 5'd10);

assign add_ln19_13_fu_614_p2 = (zext_ln19_13_fu_611_p1 + 6'd20);

assign add_ln19_14_fu_625_p2 = (zext_ln19_13_fu_611_p1 + 6'd30);

assign add_ln19_15_fu_660_p2 = ($signed(zext_ln19_13_reg_930) + $signed(6'd40));

assign add_ln19_16_fu_510_p2 = (zext_ln19_12_fu_506_p1 + 7'd50);

assign add_ln19_17_fu_521_p2 = (zext_ln19_12_fu_506_p1 + 7'd60);

assign add_ln19_18_fu_670_p2 = ($signed(zext_ln19_12_reg_869) + $signed(7'd70));

assign add_ln19_19_fu_728_p2 = ($signed(zext_ln19_12_reg_869) + $signed(7'd90));

assign add_ln19_1_fu_767_p2 = (reg_336 + mul_ln19_3_reg_1020);

assign add_ln19_2_fu_772_p2 = (add_ln19_1_fu_767_p2 + mul_ln19_1_reg_1015);

assign add_ln19_3_fu_777_p2 = (add_ln19_2_reg_1040 + add_ln19_reg_1025);

assign add_ln19_4_fu_753_p2 = (mul_ln19_5_reg_985 + mul_ln19_6_reg_990);

assign add_ln19_5_fu_781_p2 = (add_ln19_4_reg_1030 + reg_336);

assign add_ln19_6_fu_786_p2 = (mul_ln19_8_reg_1045 + mul_ln19_9_reg_1050);

assign add_ln19_7_fu_790_p2 = (add_ln19_6_fu_786_p2 + mul_ln19_7_reg_1035);

assign add_ln19_8_fu_795_p2 = (add_ln19_7_fu_790_p2 + add_ln19_5_fu_781_p2);

assign add_ln19_fu_749_p2 = (mul_ln19_reg_980 + x_reg_945);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign icmp_ln15_fu_387_p2 = ((ap_sig_allocacmp_indvar_flatten53_load == 7'd100) ? 1'b1 : 1'b0);

assign icmp_ln16_fu_408_p2 = ((ap_sig_allocacmp_j_load == 4'd10) ? 1'b1 : 1'b0);

assign j_1_cast_fu_573_p1 = select_ln15_reg_838;

assign or_ln15_fu_495_p2 = (select_ln15_2_fu_482_p3 | 7'd1);

assign select_ln15_1_fu_448_p3 = ((icmp_ln16_fu_408_p2[0:0] == 1'b1) ? add_ln15_fu_402_p2 : ap_sig_allocacmp_i);

assign select_ln15_2_fu_482_p3 = ((icmp_ln16_fu_408_p2[0:0] == 1'b1) ? add_ln19_11_fu_442_p2 : add_ln19_10_fu_381_p2);

assign select_ln15_fu_414_p3 = ((icmp_ln16_fu_408_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_j_load);

assign tmp_14_cast_fu_716_p3 = {{3'd5}, {select_ln15_reg_838}};

assign tmp_1_fu_430_p3 = {{add_ln15_fu_402_p2}, {1'd0}};

assign tmp_2_fu_456_p3 = {{select_ln15_1_fu_448_p3}, {3'd0}};

assign tmp_3_fu_464_p3 = {{select_ln15_1_fu_448_p3}, {1'd0}};

assign tmp_8_fu_361_p3 = {{ap_sig_allocacmp_i}, {3'd0}};

assign tmp_9_fu_369_p3 = {{ap_sig_allocacmp_i}, {1'd0}};

assign tmp_s_fu_422_p3 = {{add_ln15_fu_402_p2}, {3'd0}};

assign zext_ln17_1_fu_538_p1 = add_ln17_1_fu_532_p2;

assign zext_ln17_fu_472_p1 = tmp_3_fu_464_p3;

assign zext_ln19_10_fu_701_p1 = add_ln15_7_fu_696_p2;

assign zext_ln19_11_fu_711_p1 = add_ln15_8_fu_706_p2;

assign zext_ln19_12_fu_506_p1 = select_ln15_fu_414_p3;

assign zext_ln19_13_fu_611_p1 = select_ln15_reg_838;

assign zext_ln19_14_fu_577_p1 = select_ln15_reg_838;

assign zext_ln19_15_fu_586_p1 = add_ln19_12_fu_580_p2;

assign zext_ln19_16_fu_620_p1 = add_ln19_13_fu_614_p2;

assign zext_ln19_17_fu_631_p1 = add_ln19_14_fu_625_p2;

assign zext_ln19_18_fu_665_p1 = add_ln19_15_fu_660_p2;

assign zext_ln19_19_fu_516_p1 = add_ln19_16_fu_510_p2;

assign zext_ln19_1_fu_438_p1 = tmp_1_fu_430_p3;

assign zext_ln19_20_fu_527_p1 = add_ln19_17_fu_521_p2;

assign zext_ln19_21_fu_675_p1 = add_ln19_18_fu_670_p2;

assign zext_ln19_22_fu_723_p1 = tmp_14_cast_fu_716_p3;

assign zext_ln19_23_fu_733_p1 = add_ln19_19_fu_728_p2;

assign zext_ln19_2_fu_490_p1 = select_ln15_2_fu_482_p3;

assign zext_ln19_3_fu_501_p1 = or_ln15_fu_495_p2;

assign zext_ln19_4_fu_596_p1 = add_ln15_1_fu_591_p2;

assign zext_ln19_5_fu_606_p1 = add_ln15_2_fu_601_p2;

assign zext_ln19_6_fu_645_p1 = add_ln15_3_fu_640_p2;

assign zext_ln19_7_fu_558_p1 = add_ln15_4_fu_553_p2;

assign zext_ln19_8_fu_568_p1 = add_ln15_5_fu_563_p2;

assign zext_ln19_9_fu_655_p1 = add_ln15_6_fu_650_p2;

assign zext_ln19_fu_377_p1 = tmp_9_fu_369_p3;

always @ (posedge ap_clk) begin
    select_ln15_2_reg_847[0] <= 1'b0;
    zext_ln19_12_reg_869[6:4] <= 3'b000;
    zext_ln19_13_reg_930[5:4] <= 2'b00;
end

endmodule //kernel_2mm_kernel_2mm_Pipeline_VITIS_LOOP_15_4_VITIS_LOOP_16_5
