// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module covariance_covariance_Pipeline_VITIS_LOOP_23_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        zext_ln22_1,
        data_address0,
        data_ce0,
        data_q0,
        data_address1,
        data_ce1,
        data_q1,
        zext_ln28,
        cov_address0,
        cov_ce0,
        cov_we0,
        cov_d0,
        data_load_32,
        data_load_34,
        data_load_36,
        data_load_38,
        data_load_40,
        data_load_42,
        data_load_44,
        data_load_46,
        data_load_48,
        data_load_50,
        data_load_52,
        data_load_54,
        data_load_56,
        data_load_58,
        data_load_60,
        data_load_62,
        data_load_64,
        data_load_66,
        data_load_68,
        data_load_70,
        data_load_72,
        data_load_74,
        data_load_76,
        data_load_78,
        data_load_80,
        data_load_82,
        data_load_84,
        data_load_86,
        data_load_88,
        data_load_90,
        data_load_92,
        data_load_94
);

parameter    ap_ST_fsm_pp0_stage0 = 16'd1;
parameter    ap_ST_fsm_pp0_stage1 = 16'd2;
parameter    ap_ST_fsm_pp0_stage2 = 16'd4;
parameter    ap_ST_fsm_pp0_stage3 = 16'd8;
parameter    ap_ST_fsm_pp0_stage4 = 16'd16;
parameter    ap_ST_fsm_pp0_stage5 = 16'd32;
parameter    ap_ST_fsm_pp0_stage6 = 16'd64;
parameter    ap_ST_fsm_pp0_stage7 = 16'd128;
parameter    ap_ST_fsm_pp0_stage8 = 16'd256;
parameter    ap_ST_fsm_pp0_stage9 = 16'd512;
parameter    ap_ST_fsm_pp0_stage10 = 16'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 16'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 16'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 16'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 16'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [4:0] zext_ln22_1;
output  [9:0] data_address0;
output   data_ce0;
input  [31:0] data_q0;
output  [9:0] data_address1;
output   data_ce1;
input  [31:0] data_q1;
input  [9:0] zext_ln28;
output  [9:0] cov_address0;
output   cov_ce0;
output   cov_we0;
output  [31:0] cov_d0;
input  [30:0] data_load_32;
input  [30:0] data_load_34;
input  [30:0] data_load_36;
input  [30:0] data_load_38;
input  [30:0] data_load_40;
input  [30:0] data_load_42;
input  [30:0] data_load_44;
input  [30:0] data_load_46;
input  [30:0] data_load_48;
input  [30:0] data_load_50;
input  [30:0] data_load_52;
input  [30:0] data_load_54;
input  [30:0] data_load_56;
input  [30:0] data_load_58;
input  [30:0] data_load_60;
input  [30:0] data_load_62;
input  [30:0] data_load_64;
input  [30:0] data_load_66;
input  [30:0] data_load_68;
input  [30:0] data_load_70;
input  [30:0] data_load_72;
input  [30:0] data_load_74;
input  [30:0] data_load_76;
input  [30:0] data_load_78;
input  [30:0] data_load_80;
input  [30:0] data_load_82;
input  [30:0] data_load_84;
input  [30:0] data_load_86;
input  [30:0] data_load_88;
input  [30:0] data_load_90;
input  [30:0] data_load_92;
input  [30:0] data_load_94;

reg ap_idle;
reg[9:0] data_address0;
reg data_ce0;
reg[9:0] data_address1;
reg data_ce1;
reg cov_ce0;
reg cov_we0;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_state26_pp0_stage9_iter1;
wire    ap_block_pp0_stage9_subdone;
reg   [0:0] icmp_ln23_reg_1565;
reg    ap_condition_exit_pp0_iter0_stage9;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state17_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [10:0] j_1_reg_1560;
wire   [0:0] icmp_ln23_fu_674_p2;
wire   [9:0] trunc_ln26_fu_685_p1;
reg   [9:0] trunc_ln26_reg_1569;
wire   [9:0] add_ln26_58_fu_700_p2;
reg   [9:0] add_ln26_58_reg_1612;
wire   [9:0] add_ln26_59_fu_706_p2;
reg   [9:0] add_ln26_59_reg_1617;
wire   [9:0] add_ln26_35_fu_712_p2;
reg   [9:0] add_ln26_35_reg_1622;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state18_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire   [9:0] add_ln26_36_fu_717_p2;
reg   [9:0] add_ln26_36_reg_1627;
wire  signed [30:0] trunc_ln26_1_fu_730_p1;
reg  signed [30:0] trunc_ln26_1_reg_1642;
wire  signed [30:0] trunc_ln26_17_fu_734_p1;
reg  signed [30:0] trunc_ln26_17_reg_1647;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state19_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire   [9:0] add_ln26_43_fu_746_p2;
reg   [9:0] add_ln26_43_reg_1662;
wire   [9:0] add_ln26_44_fu_751_p2;
reg   [9:0] add_ln26_44_reg_1667;
wire  signed [30:0] trunc_ln26_31_fu_764_p1;
reg  signed [30:0] trunc_ln26_31_reg_1672;
wire  signed [30:0] trunc_ln26_32_fu_768_p1;
reg  signed [30:0] trunc_ln26_32_reg_1677;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state20_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire   [9:0] add_ln26_46_fu_780_p2;
reg   [9:0] add_ln26_46_reg_1692;
wire   [9:0] add_ln26_47_fu_785_p2;
reg   [9:0] add_ln26_47_reg_1697;
wire  signed [30:0] trunc_ln26_7_fu_790_p1;
reg  signed [30:0] trunc_ln26_7_reg_1702;
wire  signed [30:0] trunc_ln26_8_fu_794_p1;
reg  signed [30:0] trunc_ln26_8_reg_1707;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state21_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
wire   [9:0] add_ln26_50_fu_814_p2;
reg   [9:0] add_ln26_50_reg_1722;
wire   [9:0] add_ln26_51_fu_819_p2;
reg   [9:0] add_ln26_51_reg_1727;
wire  signed [30:0] trunc_ln26_15_fu_832_p1;
reg  signed [30:0] trunc_ln26_15_reg_1732;
wire  signed [30:0] trunc_ln26_16_fu_836_p1;
reg  signed [30:0] trunc_ln26_16_reg_1737;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state22_pp0_stage5_iter1;
wire    ap_block_pp0_stage5_11001;
wire   [9:0] add_ln26_52_fu_848_p2;
reg   [9:0] add_ln26_52_reg_1752;
wire   [9:0] add_ln26_53_fu_853_p2;
reg   [9:0] add_ln26_53_reg_1757;
wire  signed [30:0] trunc_ln26_19_fu_866_p1;
reg  signed [30:0] trunc_ln26_19_reg_1762;
wire  signed [30:0] trunc_ln26_20_fu_870_p1;
reg  signed [30:0] trunc_ln26_20_reg_1767;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state23_pp0_stage6_iter1;
wire    ap_block_pp0_stage6_11001;
wire   [9:0] add_ln26_54_fu_882_p2;
reg   [9:0] add_ln26_54_reg_1782;
wire   [9:0] add_ln26_55_fu_887_p2;
reg   [9:0] add_ln26_55_reg_1787;
wire   [30:0] grp_fu_756_p2;
reg   [30:0] mul_ln26_reg_1792;
wire   [30:0] grp_fu_760_p2;
reg   [30:0] mul_ln26_16_reg_1797;
wire  signed [30:0] trunc_ln26_23_fu_900_p1;
reg  signed [30:0] trunc_ln26_23_reg_1802;
wire  signed [30:0] trunc_ln26_24_fu_904_p1;
reg  signed [30:0] trunc_ln26_24_reg_1807;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state24_pp0_stage7_iter1;
wire    ap_block_pp0_stage7_11001;
wire   [9:0] add_ln26_56_fu_916_p2;
reg   [9:0] add_ln26_56_reg_1822;
wire   [9:0] add_ln26_57_fu_921_p2;
reg   [9:0] add_ln26_57_reg_1827;
wire  signed [30:0] trunc_ln26_25_fu_934_p1;
reg  signed [30:0] trunc_ln26_25_reg_1832;
wire  signed [30:0] trunc_ln26_26_fu_938_p1;
reg  signed [30:0] trunc_ln26_26_reg_1837;
wire   [30:0] grp_fu_798_p2;
reg   [30:0] mul_ln26_30_reg_1842;
wire   [30:0] grp_fu_802_p2;
reg   [30:0] mul_ln26_31_reg_1847;
wire   [9:0] add_ln26_30_fu_942_p2;
reg   [9:0] add_ln26_30_reg_1852;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_state25_pp0_stage8_iter1;
wire    ap_block_pp0_stage8_11001;
wire   [9:0] add_ln26_31_fu_947_p2;
reg   [9:0] add_ln26_31_reg_1857;
wire   [30:0] grp_fu_824_p2;
reg   [30:0] mul_ln26_6_reg_1872;
wire   [30:0] grp_fu_828_p2;
reg   [30:0] mul_ln26_7_reg_1877;
wire  signed [30:0] trunc_ln26_27_fu_968_p1;
reg  signed [30:0] trunc_ln26_27_reg_1882;
wire  signed [30:0] trunc_ln26_28_fu_972_p1;
reg  signed [30:0] trunc_ln26_28_reg_1887;
wire   [30:0] add_ln26_26_fu_976_p2;
reg   [30:0] add_ln26_26_reg_1892;
wire    ap_block_pp0_stage9_11001;
wire   [9:0] add_ln26_32_fu_988_p2;
reg   [9:0] add_ln26_32_reg_1907;
wire   [9:0] add_ln26_33_fu_993_p2;
reg   [9:0] add_ln26_33_reg_1912;
wire   [30:0] grp_fu_858_p2;
reg   [30:0] mul_ln26_14_reg_1917;
wire   [30:0] grp_fu_862_p2;
reg   [30:0] mul_ln26_15_reg_1922;
wire  signed [30:0] trunc_ln26_29_fu_1006_p1;
reg  signed [30:0] trunc_ln26_29_reg_1927;
wire  signed [30:0] trunc_ln26_30_fu_1010_p1;
reg  signed [30:0] trunc_ln26_30_reg_1932;
wire   [30:0] add_ln26_4_fu_1014_p2;
reg   [30:0] add_ln26_4_reg_1937;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
wire   [9:0] add_ln26_34_fu_1026_p2;
reg   [9:0] add_ln26_34_reg_1952;
wire   [9:0] add_ln26_37_fu_1031_p2;
reg   [9:0] add_ln26_37_reg_1957;
wire  signed [30:0] trunc_ln26_2_fu_1036_p1;
reg  signed [30:0] trunc_ln26_2_reg_1962;
wire  signed [30:0] trunc_ln26_3_fu_1040_p1;
reg  signed [30:0] trunc_ln26_3_reg_1967;
wire   [30:0] grp_fu_892_p2;
reg   [30:0] mul_ln26_18_reg_1972;
wire   [30:0] grp_fu_896_p2;
reg   [30:0] mul_ln26_19_reg_1977;
wire   [30:0] add_ln26_11_fu_1052_p2;
reg   [30:0] add_ln26_11_reg_1982;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_11001;
wire   [9:0] add_ln26_38_fu_1064_p2;
reg   [9:0] add_ln26_38_reg_1997;
wire   [9:0] add_ln26_39_fu_1069_p2;
reg   [9:0] add_ln26_39_reg_2002;
wire  signed [30:0] trunc_ln26_4_fu_1082_p1;
reg  signed [30:0] trunc_ln26_4_reg_2007;
wire  signed [30:0] trunc_ln26_5_fu_1086_p1;
reg  signed [30:0] trunc_ln26_5_reg_2012;
wire   [30:0] grp_fu_926_p2;
reg   [30:0] mul_ln26_22_reg_2017;
wire   [30:0] grp_fu_930_p2;
reg   [30:0] mul_ln26_23_reg_2022;
wire   [30:0] add_ln26_16_fu_1090_p2;
reg   [30:0] add_ln26_16_reg_2027;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_11001;
wire   [9:0] add_ln26_40_fu_1102_p2;
reg   [9:0] add_ln26_40_reg_2042;
wire   [9:0] add_ln26_41_fu_1107_p2;
reg   [9:0] add_ln26_41_reg_2047;
wire  signed [30:0] trunc_ln26_6_fu_1120_p1;
reg  signed [30:0] trunc_ln26_6_reg_2052;
wire  signed [30:0] trunc_ln26_9_fu_1124_p1;
reg  signed [30:0] trunc_ln26_9_reg_2057;
wire   [30:0] grp_fu_960_p2;
reg   [30:0] mul_ln26_24_reg_2062;
wire   [30:0] grp_fu_964_p2;
reg   [30:0] mul_ln26_25_reg_2067;
wire   [30:0] add_ln26_19_fu_1128_p2;
reg   [30:0] add_ln26_19_reg_2072;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_11001;
wire   [9:0] add_ln26_42_fu_1140_p2;
reg   [9:0] add_ln26_42_reg_2087;
wire   [9:0] add_ln26_45_fu_1145_p2;
reg   [9:0] add_ln26_45_reg_2092;
wire  signed [30:0] trunc_ln26_10_fu_1158_p1;
reg  signed [30:0] trunc_ln26_10_reg_2097;
wire  signed [30:0] trunc_ln26_11_fu_1162_p1;
reg  signed [30:0] trunc_ln26_11_reg_2102;
wire   [30:0] grp_fu_998_p2;
reg   [30:0] mul_ln26_26_reg_2107;
wire   [30:0] grp_fu_1002_p2;
reg   [30:0] mul_ln26_27_reg_2112;
wire   [30:0] add_ln26_22_fu_1166_p2;
reg   [30:0] add_ln26_22_reg_2117;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_11001;
wire   [9:0] add_ln26_48_fu_1178_p2;
reg   [9:0] add_ln26_48_reg_2132;
wire   [9:0] add_ln26_49_fu_1183_p2;
reg   [9:0] add_ln26_49_reg_2137;
wire   [9:0] add_ln28_fu_1188_p2;
reg   [9:0] add_ln28_reg_2142;
wire  signed [30:0] trunc_ln26_12_fu_1200_p1;
reg  signed [30:0] trunc_ln26_12_reg_2147;
wire  signed [30:0] trunc_ln26_13_fu_1204_p1;
reg  signed [30:0] trunc_ln26_13_reg_2152;
wire   [30:0] grp_fu_1044_p2;
reg   [30:0] mul_ln26_28_reg_2157;
wire   [30:0] grp_fu_1048_p2;
reg   [30:0] mul_ln26_29_reg_2162;
wire   [30:0] add_ln26_23_fu_1208_p2;
reg   [30:0] add_ln26_23_reg_2167;
wire    ap_block_pp0_stage15_11001;
wire   [30:0] grp_fu_1074_p2;
reg   [30:0] mul_ln26_1_reg_2182;
wire   [30:0] grp_fu_1078_p2;
reg   [30:0] mul_ln26_2_reg_2187;
wire  signed [30:0] trunc_ln26_14_fu_1238_p1;
reg  signed [30:0] trunc_ln26_14_reg_2192;
wire  signed [30:0] trunc_ln26_18_fu_1242_p1;
reg  signed [30:0] trunc_ln26_18_reg_2197;
wire   [30:0] add_ln26_27_fu_1250_p2;
reg   [30:0] add_ln26_27_reg_2202;
wire   [30:0] grp_fu_1112_p2;
reg   [30:0] mul_ln26_3_reg_2207;
wire   [30:0] grp_fu_1116_p2;
reg   [30:0] mul_ln26_4_reg_2212;
wire  signed [30:0] trunc_ln26_21_fu_1263_p1;
reg  signed [30:0] trunc_ln26_21_reg_2217;
wire  signed [30:0] trunc_ln26_22_fu_1267_p1;
reg  signed [30:0] trunc_ln26_22_reg_2222;
wire   [30:0] add_ln26_fu_1271_p2;
reg   [30:0] add_ln26_reg_2227;
wire   [30:0] add_ln26_28_fu_1279_p2;
reg   [30:0] add_ln26_28_reg_2232;
wire   [30:0] grp_fu_1150_p2;
reg   [30:0] mul_ln26_5_reg_2237;
wire   [30:0] grp_fu_1154_p2;
reg   [30:0] mul_ln26_8_reg_2242;
wire   [30:0] add_ln26_1_fu_1292_p2;
reg   [30:0] add_ln26_1_reg_2247;
wire   [30:0] grp_fu_1192_p2;
reg   [30:0] mul_ln26_9_reg_2252;
wire   [30:0] grp_fu_1196_p2;
reg   [30:0] mul_ln26_10_reg_2257;
wire   [30:0] add_ln26_5_fu_1300_p2;
reg   [30:0] add_ln26_5_reg_2262;
wire   [30:0] grp_fu_1230_p2;
reg   [30:0] mul_ln26_11_reg_2267;
wire   [30:0] grp_fu_1234_p2;
reg   [30:0] mul_ln26_12_reg_2272;
wire   [30:0] add_ln26_6_fu_1309_p2;
reg   [30:0] add_ln26_6_reg_2277;
wire   [30:0] add_ln26_7_fu_1314_p2;
reg   [30:0] add_ln26_7_reg_2282;
wire   [30:0] grp_fu_1255_p2;
reg   [30:0] mul_ln26_13_reg_2287;
wire   [30:0] grp_fu_1259_p2;
reg   [30:0] mul_ln26_17_reg_2292;
wire   [30:0] add_ln26_8_fu_1318_p2;
reg   [30:0] add_ln26_8_reg_2297;
wire   [30:0] grp_fu_1284_p2;
reg   [30:0] mul_ln26_20_reg_2302;
wire   [30:0] grp_fu_1288_p2;
reg   [30:0] mul_ln26_21_reg_2307;
wire   [30:0] add_ln26_12_fu_1326_p2;
reg   [30:0] add_ln26_12_reg_2312;
wire   [30:0] add_ln26_17_fu_1335_p2;
reg   [30:0] add_ln26_17_reg_2317;
wire   [30:0] add_ln26_13_fu_1344_p2;
reg   [30:0] add_ln26_13_reg_2322;
wire   [30:0] add_ln26_20_fu_1353_p2;
reg   [30:0] add_ln26_20_reg_2327;
wire   [30:0] add_ln26_29_fu_1362_p2;
reg   [30:0] add_ln26_29_reg_2332;
wire   [30:0] add_ln27_fu_1371_p2;
reg   [30:0] add_ln27_reg_2337;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] j_2_cast_fu_680_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln26_15_fu_695_p1;
wire   [63:0] zext_ln26_29_fu_722_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln26_30_fu_726_p1;
wire   [63:0] zext_ln26_5_fu_738_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln26_6_fu_742_p1;
wire   [63:0] zext_ln26_13_fu_772_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln26_14_fu_776_p1;
wire   [63:0] zext_ln26_17_fu_806_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln26_18_fu_810_p1;
wire   [63:0] zext_ln26_21_fu_840_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln26_22_fu_844_p1;
wire   [63:0] zext_ln26_23_fu_874_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln26_24_fu_878_p1;
wire   [63:0] zext_ln26_25_fu_908_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln26_26_fu_912_p1;
wire   [63:0] zext_ln26_27_fu_952_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln26_28_fu_956_p1;
wire   [63:0] zext_ln26_fu_980_p1;
wire    ap_block_pp0_stage9;
wire   [63:0] zext_ln26_1_fu_984_p1;
wire   [63:0] zext_ln26_2_fu_1018_p1;
wire    ap_block_pp0_stage10;
wire   [63:0] zext_ln26_3_fu_1022_p1;
wire   [63:0] zext_ln26_4_fu_1056_p1;
wire    ap_block_pp0_stage11;
wire   [63:0] zext_ln26_7_fu_1060_p1;
wire   [63:0] zext_ln26_8_fu_1094_p1;
wire    ap_block_pp0_stage12;
wire   [63:0] zext_ln26_9_fu_1098_p1;
wire   [63:0] zext_ln26_10_fu_1132_p1;
wire    ap_block_pp0_stage13;
wire   [63:0] zext_ln26_11_fu_1136_p1;
wire   [63:0] zext_ln26_12_fu_1170_p1;
wire    ap_block_pp0_stage14;
wire   [63:0] zext_ln26_16_fu_1174_p1;
wire   [63:0] zext_ln26_19_fu_1222_p1;
wire    ap_block_pp0_stage15;
wire   [63:0] zext_ln26_20_fu_1226_p1;
wire   [63:0] zext_ln28_1_fu_1376_p1;
reg   [10:0] j_fu_176;
wire   [10:0] add_ln23_fu_1212_p2;
wire   [10:0] zext_ln22_1_cast_fu_662_p1;
wire    ap_loop_init;
reg   [10:0] ap_sig_allocacmp_j_1;
wire   [9:0] xor_ln26_fu_689_p2;
wire   [30:0] add_ln26_25_fu_1246_p2;
wire   [30:0] add_ln26_24_fu_1275_p2;
wire   [30:0] add_ln26_3_fu_1296_p2;
wire   [30:0] add_ln26_2_fu_1305_p2;
wire   [30:0] add_ln26_10_fu_1322_p2;
wire   [30:0] add_ln26_15_fu_1331_p2;
wire   [30:0] add_ln26_9_fu_1340_p2;
wire   [30:0] add_ln26_18_fu_1349_p2;
wire   [30:0] add_ln26_21_fu_1358_p2;
wire   [30:0] add_ln26_14_fu_1367_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [15:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_1_reg_1642),
    .din1(data_load_32),
    .ce(1'b1),
    .dout(grp_fu_756_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_17_reg_1647),
    .din1(data_load_64),
    .ce(1'b1),
    .dout(grp_fu_760_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_31_reg_1672),
    .din1(data_load_92),
    .ce(1'b1),
    .dout(grp_fu_798_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_32_reg_1677),
    .din1(data_load_94),
    .ce(1'b1),
    .dout(grp_fu_802_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_7_reg_1702),
    .din1(data_load_44),
    .ce(1'b1),
    .dout(grp_fu_824_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_8_reg_1707),
    .din1(data_load_46),
    .ce(1'b1),
    .dout(grp_fu_828_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_15_reg_1732),
    .din1(data_load_60),
    .ce(1'b1),
    .dout(grp_fu_858_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_16_reg_1737),
    .din1(data_load_62),
    .ce(1'b1),
    .dout(grp_fu_862_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_19_reg_1762),
    .din1(data_load_68),
    .ce(1'b1),
    .dout(grp_fu_892_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_20_reg_1767),
    .din1(data_load_70),
    .ce(1'b1),
    .dout(grp_fu_896_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_23_reg_1802),
    .din1(data_load_76),
    .ce(1'b1),
    .dout(grp_fu_926_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_24_reg_1807),
    .din1(data_load_78),
    .ce(1'b1),
    .dout(grp_fu_930_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_25_reg_1832),
    .din1(data_load_80),
    .ce(1'b1),
    .dout(grp_fu_960_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_26_reg_1837),
    .din1(data_load_82),
    .ce(1'b1),
    .dout(grp_fu_964_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_27_reg_1882),
    .din1(data_load_84),
    .ce(1'b1),
    .dout(grp_fu_998_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_28_reg_1887),
    .din1(data_load_86),
    .ce(1'b1),
    .dout(grp_fu_1002_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_29_reg_1927),
    .din1(data_load_88),
    .ce(1'b1),
    .dout(grp_fu_1044_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_30_reg_1932),
    .din1(data_load_90),
    .ce(1'b1),
    .dout(grp_fu_1048_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_2_reg_1962),
    .din1(data_load_34),
    .ce(1'b1),
    .dout(grp_fu_1074_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_3_reg_1967),
    .din1(data_load_36),
    .ce(1'b1),
    .dout(grp_fu_1078_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_4_reg_2007),
    .din1(data_load_38),
    .ce(1'b1),
    .dout(grp_fu_1112_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_5_reg_2012),
    .din1(data_load_40),
    .ce(1'b1),
    .dout(grp_fu_1116_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_6_reg_2052),
    .din1(data_load_42),
    .ce(1'b1),
    .dout(grp_fu_1150_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_9_reg_2057),
    .din1(data_load_48),
    .ce(1'b1),
    .dout(grp_fu_1154_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_10_reg_2097),
    .din1(data_load_50),
    .ce(1'b1),
    .dout(grp_fu_1192_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_11_reg_2102),
    .din1(data_load_52),
    .ce(1'b1),
    .dout(grp_fu_1196_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_12_reg_2147),
    .din1(data_load_54),
    .ce(1'b1),
    .dout(grp_fu_1230_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_13_reg_2152),
    .din1(data_load_56),
    .ce(1'b1),
    .dout(grp_fu_1234_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_14_reg_2192),
    .din1(data_load_58),
    .ce(1'b1),
    .dout(grp_fu_1255_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_18_reg_2197),
    .din1(data_load_66),
    .ce(1'b1),
    .dout(grp_fu_1259_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_21_reg_2217),
    .din1(data_load_72),
    .ce(1'b1),
    .dout(grp_fu_1284_p2)
);

covariance_mul_31s_31s_31_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_5_1_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln26_22_reg_2222),
    .din1(data_load_74),
    .ce(1'b1),
    .dout(grp_fu_1288_p2)
);

covariance_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage9),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage9_subdone) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage9)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage9_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_176 <= zext_ln22_1_cast_fu_662_p1;
    end else if (((icmp_ln23_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        j_fu_176 <= add_ln23_fu_1212_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        add_ln26_11_reg_1982 <= add_ln26_11_fu_1052_p2;
        add_ln26_34_reg_1952 <= add_ln26_34_fu_1026_p2;
        add_ln26_37_reg_1957 <= add_ln26_37_fu_1031_p2;
        mul_ln26_18_reg_1972 <= grp_fu_892_p2;
        mul_ln26_19_reg_1977 <= grp_fu_896_p2;
        trunc_ln26_2_reg_1962 <= trunc_ln26_2_fu_1036_p1;
        trunc_ln26_3_reg_1967 <= trunc_ln26_3_fu_1040_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        add_ln26_12_reg_2312 <= add_ln26_12_fu_1326_p2;
        add_ln26_17_reg_2317 <= add_ln26_17_fu_1335_p2;
        mul_ln26_20_reg_2302 <= grp_fu_1284_p2;
        mul_ln26_21_reg_2307 <= grp_fu_1288_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        add_ln26_13_reg_2322 <= add_ln26_13_fu_1344_p2;
        add_ln26_20_reg_2327 <= add_ln26_20_fu_1353_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        add_ln26_16_reg_2027 <= add_ln26_16_fu_1090_p2;
        add_ln26_38_reg_1997 <= add_ln26_38_fu_1064_p2;
        add_ln26_39_reg_2002 <= add_ln26_39_fu_1069_p2;
        mul_ln26_22_reg_2017 <= grp_fu_926_p2;
        mul_ln26_23_reg_2022 <= grp_fu_930_p2;
        trunc_ln26_4_reg_2007 <= trunc_ln26_4_fu_1082_p1;
        trunc_ln26_5_reg_2012 <= trunc_ln26_5_fu_1086_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        add_ln26_19_reg_2072 <= add_ln26_19_fu_1128_p2;
        add_ln26_40_reg_2042 <= add_ln26_40_fu_1102_p2;
        add_ln26_41_reg_2047 <= add_ln26_41_fu_1107_p2;
        mul_ln26_24_reg_2062 <= grp_fu_960_p2;
        mul_ln26_25_reg_2067 <= grp_fu_964_p2;
        trunc_ln26_6_reg_2052 <= trunc_ln26_6_fu_1120_p1;
        trunc_ln26_9_reg_2057 <= trunc_ln26_9_fu_1124_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln26_1_reg_2247 <= add_ln26_1_fu_1292_p2;
        mul_ln26_5_reg_2237 <= grp_fu_1150_p2;
        mul_ln26_8_reg_2242 <= grp_fu_1154_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        add_ln26_22_reg_2117 <= add_ln26_22_fu_1166_p2;
        add_ln26_42_reg_2087 <= add_ln26_42_fu_1140_p2;
        add_ln26_45_reg_2092 <= add_ln26_45_fu_1145_p2;
        mul_ln26_26_reg_2107 <= grp_fu_998_p2;
        mul_ln26_27_reg_2112 <= grp_fu_1002_p2;
        trunc_ln26_10_reg_2097 <= trunc_ln26_10_fu_1158_p1;
        trunc_ln26_11_reg_2102 <= trunc_ln26_11_fu_1162_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        add_ln26_23_reg_2167 <= add_ln26_23_fu_1208_p2;
        add_ln26_48_reg_2132 <= add_ln26_48_fu_1178_p2;
        add_ln26_49_reg_2137 <= add_ln26_49_fu_1183_p2;
        add_ln28_reg_2142 <= add_ln28_fu_1188_p2;
        mul_ln26_28_reg_2157 <= grp_fu_1044_p2;
        mul_ln26_29_reg_2162 <= grp_fu_1048_p2;
        trunc_ln26_12_reg_2147 <= trunc_ln26_12_fu_1200_p1;
        trunc_ln26_13_reg_2152 <= trunc_ln26_13_fu_1204_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        add_ln26_26_reg_1892 <= add_ln26_26_fu_976_p2;
        add_ln26_30_reg_1852 <= add_ln26_30_fu_942_p2;
        add_ln26_31_reg_1857 <= add_ln26_31_fu_947_p2;
        mul_ln26_6_reg_1872 <= grp_fu_824_p2;
        mul_ln26_7_reg_1877 <= grp_fu_828_p2;
        trunc_ln26_27_reg_1882 <= trunc_ln26_27_fu_968_p1;
        trunc_ln26_28_reg_1887 <= trunc_ln26_28_fu_972_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        add_ln26_27_reg_2202 <= add_ln26_27_fu_1250_p2;
        mul_ln26_1_reg_2182 <= grp_fu_1074_p2;
        mul_ln26_2_reg_2187 <= grp_fu_1078_p2;
        trunc_ln26_14_reg_2192 <= trunc_ln26_14_fu_1238_p1;
        trunc_ln26_18_reg_2197 <= trunc_ln26_18_fu_1242_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln26_28_reg_2232 <= add_ln26_28_fu_1279_p2;
        add_ln26_reg_2227 <= add_ln26_fu_1271_p2;
        icmp_ln23_reg_1565 <= icmp_ln23_fu_674_p2;
        j_1_reg_1560 <= ap_sig_allocacmp_j_1;
        mul_ln26_3_reg_2207 <= grp_fu_1112_p2;
        mul_ln26_4_reg_2212 <= grp_fu_1116_p2;
        trunc_ln26_21_reg_2217 <= trunc_ln26_21_fu_1263_p1;
        trunc_ln26_22_reg_2222 <= trunc_ln26_22_fu_1267_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        add_ln26_29_reg_2332 <= add_ln26_29_fu_1362_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        add_ln26_32_reg_1907 <= add_ln26_32_fu_988_p2;
        add_ln26_33_reg_1912 <= add_ln26_33_fu_993_p2;
        add_ln26_4_reg_1937 <= add_ln26_4_fu_1014_p2;
        mul_ln26_14_reg_1917 <= grp_fu_858_p2;
        mul_ln26_15_reg_1922 <= grp_fu_862_p2;
        trunc_ln26_29_reg_1927 <= trunc_ln26_29_fu_1006_p1;
        trunc_ln26_30_reg_1932 <= trunc_ln26_30_fu_1010_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln26_35_reg_1622 <= add_ln26_35_fu_712_p2;
        add_ln26_36_reg_1627 <= add_ln26_36_fu_717_p2;
        trunc_ln26_17_reg_1647 <= trunc_ln26_17_fu_734_p1;
        trunc_ln26_1_reg_1642 <= trunc_ln26_1_fu_730_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln26_43_reg_1662 <= add_ln26_43_fu_746_p2;
        add_ln26_44_reg_1667 <= add_ln26_44_fu_751_p2;
        trunc_ln26_31_reg_1672 <= trunc_ln26_31_fu_764_p1;
        trunc_ln26_32_reg_1677 <= trunc_ln26_32_fu_768_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln26_46_reg_1692 <= add_ln26_46_fu_780_p2;
        add_ln26_47_reg_1697 <= add_ln26_47_fu_785_p2;
        trunc_ln26_7_reg_1702 <= trunc_ln26_7_fu_790_p1;
        trunc_ln26_8_reg_1707 <= trunc_ln26_8_fu_794_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln26_50_reg_1722 <= add_ln26_50_fu_814_p2;
        add_ln26_51_reg_1727 <= add_ln26_51_fu_819_p2;
        trunc_ln26_15_reg_1732 <= trunc_ln26_15_fu_832_p1;
        trunc_ln26_16_reg_1737 <= trunc_ln26_16_fu_836_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        add_ln26_52_reg_1752 <= add_ln26_52_fu_848_p2;
        add_ln26_53_reg_1757 <= add_ln26_53_fu_853_p2;
        trunc_ln26_19_reg_1762 <= trunc_ln26_19_fu_866_p1;
        trunc_ln26_20_reg_1767 <= trunc_ln26_20_fu_870_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        add_ln26_54_reg_1782 <= add_ln26_54_fu_882_p2;
        add_ln26_55_reg_1787 <= add_ln26_55_fu_887_p2;
        mul_ln26_16_reg_1797 <= grp_fu_760_p2;
        mul_ln26_reg_1792 <= grp_fu_756_p2;
        trunc_ln26_23_reg_1802 <= trunc_ln26_23_fu_900_p1;
        trunc_ln26_24_reg_1807 <= trunc_ln26_24_fu_904_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        add_ln26_56_reg_1822 <= add_ln26_56_fu_916_p2;
        add_ln26_57_reg_1827 <= add_ln26_57_fu_921_p2;
        mul_ln26_30_reg_1842 <= grp_fu_798_p2;
        mul_ln26_31_reg_1847 <= grp_fu_802_p2;
        trunc_ln26_25_reg_1832 <= trunc_ln26_25_fu_934_p1;
        trunc_ln26_26_reg_1837 <= trunc_ln26_26_fu_938_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln23_fu_674_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln26_58_reg_1612 <= add_ln26_58_fu_700_p2;
        add_ln26_59_reg_1617 <= add_ln26_59_fu_706_p2;
        trunc_ln26_reg_1569 <= trunc_ln26_fu_685_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln26_5_reg_2262 <= add_ln26_5_fu_1300_p2;
        mul_ln26_10_reg_2257 <= grp_fu_1196_p2;
        mul_ln26_9_reg_2252 <= grp_fu_1192_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln26_6_reg_2277 <= add_ln26_6_fu_1309_p2;
        add_ln26_7_reg_2282 <= add_ln26_7_fu_1314_p2;
        mul_ln26_11_reg_2267 <= grp_fu_1230_p2;
        mul_ln26_12_reg_2272 <= grp_fu_1234_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln26_8_reg_2297 <= add_ln26_8_fu_1318_p2;
        mul_ln26_13_reg_2287 <= grp_fu_1255_p2;
        mul_ln26_17_reg_2292 <= grp_fu_1259_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        add_ln27_reg_2337 <= add_ln27_fu_1371_p2;
    end
end

always @ (*) begin
    if (((icmp_ln23_reg_1565 == 1'd1) & (1'b0 == ap_block_pp0_stage9_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        ap_condition_exit_pp0_iter0_stage9 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage9 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage9_subdone) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage15_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_1 = zext_ln22_1_cast_fu_662_p1;
    end else begin
        ap_sig_allocacmp_j_1 = j_fu_176;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        cov_ce0 = 1'b1;
    end else begin
        cov_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        cov_we0 = 1'b1;
    end else begin
        cov_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            data_address0 = zext_ln26_20_fu_1226_p1;
        end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            data_address0 = zext_ln26_16_fu_1174_p1;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            data_address0 = zext_ln26_11_fu_1136_p1;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            data_address0 = zext_ln26_9_fu_1098_p1;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            data_address0 = zext_ln26_7_fu_1060_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            data_address0 = zext_ln26_3_fu_1022_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            data_address0 = zext_ln26_1_fu_984_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            data_address0 = zext_ln26_28_fu_956_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            data_address0 = zext_ln26_26_fu_912_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            data_address0 = zext_ln26_24_fu_878_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            data_address0 = zext_ln26_22_fu_844_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            data_address0 = zext_ln26_18_fu_810_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            data_address0 = zext_ln26_14_fu_776_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            data_address0 = zext_ln26_6_fu_742_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            data_address0 = zext_ln26_30_fu_726_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_address0 = zext_ln26_15_fu_695_p1;
        end else begin
            data_address0 = 'bx;
        end
    end else begin
        data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            data_address1 = zext_ln26_19_fu_1222_p1;
        end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            data_address1 = zext_ln26_12_fu_1170_p1;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            data_address1 = zext_ln26_10_fu_1132_p1;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            data_address1 = zext_ln26_8_fu_1094_p1;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            data_address1 = zext_ln26_4_fu_1056_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            data_address1 = zext_ln26_2_fu_1018_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            data_address1 = zext_ln26_fu_980_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            data_address1 = zext_ln26_27_fu_952_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            data_address1 = zext_ln26_25_fu_908_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            data_address1 = zext_ln26_23_fu_874_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            data_address1 = zext_ln26_21_fu_840_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            data_address1 = zext_ln26_17_fu_806_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            data_address1 = zext_ln26_13_fu_772_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            data_address1 = zext_ln26_5_fu_738_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            data_address1 = zext_ln26_29_fu_722_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_address1 = j_2_cast_fu_680_p1;
        end else begin
            data_address1 = 'bx;
        end
    end else begin
        data_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        data_ce0 = 1'b1;
    end else begin
        data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        data_ce1 = 1'b1;
    end else begin
        data_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage9)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln23_fu_1212_p2 = (j_1_reg_1560 + 11'd1);

assign add_ln26_10_fu_1322_p2 = (mul_ln26_12_reg_2272 + mul_ln26_13_reg_2287);

assign add_ln26_11_fu_1052_p2 = (mul_ln26_14_reg_1917 + mul_ln26_15_reg_1922);

assign add_ln26_12_fu_1326_p2 = (add_ln26_11_reg_1982 + add_ln26_10_fu_1322_p2);

assign add_ln26_13_fu_1344_p2 = (add_ln26_12_reg_2312 + add_ln26_9_fu_1340_p2);

assign add_ln26_14_fu_1367_p2 = (add_ln26_13_reg_2322 + add_ln26_6_reg_2277);

assign add_ln26_15_fu_1331_p2 = (mul_ln26_16_reg_1797 + mul_ln26_17_reg_2292);

assign add_ln26_16_fu_1090_p2 = (mul_ln26_18_reg_1972 + mul_ln26_19_reg_1977);

assign add_ln26_17_fu_1335_p2 = (add_ln26_16_reg_2027 + add_ln26_15_fu_1331_p2);

assign add_ln26_18_fu_1349_p2 = (mul_ln26_20_reg_2302 + mul_ln26_21_reg_2307);

assign add_ln26_19_fu_1128_p2 = (mul_ln26_22_reg_2017 + mul_ln26_23_reg_2022);

assign add_ln26_1_fu_1292_p2 = (mul_ln26_2_reg_2187 + mul_ln26_3_reg_2207);

assign add_ln26_20_fu_1353_p2 = (add_ln26_19_reg_2072 + add_ln26_18_fu_1349_p2);

assign add_ln26_21_fu_1358_p2 = (add_ln26_20_reg_2327 + add_ln26_17_reg_2317);

assign add_ln26_22_fu_1166_p2 = (mul_ln26_24_reg_2062 + mul_ln26_25_reg_2067);

assign add_ln26_23_fu_1208_p2 = (mul_ln26_26_reg_2107 + mul_ln26_27_reg_2112);

assign add_ln26_24_fu_1275_p2 = (add_ln26_23_reg_2167 + add_ln26_22_reg_2117);

assign add_ln26_25_fu_1246_p2 = (mul_ln26_28_reg_2157 + mul_ln26_29_reg_2162);

assign add_ln26_26_fu_976_p2 = (mul_ln26_30_reg_1842 + mul_ln26_31_reg_1847);

assign add_ln26_27_fu_1250_p2 = (add_ln26_26_reg_1892 + add_ln26_25_fu_1246_p2);

assign add_ln26_28_fu_1279_p2 = (add_ln26_27_reg_2202 + add_ln26_24_fu_1275_p2);

assign add_ln26_29_fu_1362_p2 = (add_ln26_28_reg_2232 + add_ln26_21_fu_1358_p2);

assign add_ln26_2_fu_1305_p2 = (add_ln26_1_reg_2247 + add_ln26_reg_2227);

assign add_ln26_30_fu_942_p2 = (trunc_ln26_reg_1569 + 10'd32);

assign add_ln26_31_fu_947_p2 = (trunc_ln26_reg_1569 + 10'd64);

assign add_ln26_32_fu_988_p2 = (trunc_ln26_reg_1569 + 10'd96);

assign add_ln26_33_fu_993_p2 = (trunc_ln26_reg_1569 + 10'd128);

assign add_ln26_34_fu_1026_p2 = (trunc_ln26_reg_1569 + 10'd160);

assign add_ln26_35_fu_712_p2 = (trunc_ln26_reg_1569 + 10'd192);

assign add_ln26_36_fu_717_p2 = (trunc_ln26_reg_1569 + 10'd224);

assign add_ln26_37_fu_1031_p2 = (trunc_ln26_reg_1569 + 10'd256);

assign add_ln26_38_fu_1064_p2 = (trunc_ln26_reg_1569 + 10'd288);

assign add_ln26_39_fu_1069_p2 = (trunc_ln26_reg_1569 + 10'd320);

assign add_ln26_3_fu_1296_p2 = (mul_ln26_4_reg_2212 + mul_ln26_5_reg_2237);

assign add_ln26_40_fu_1102_p2 = (trunc_ln26_reg_1569 + 10'd352);

assign add_ln26_41_fu_1107_p2 = (trunc_ln26_reg_1569 + 10'd384);

assign add_ln26_42_fu_1140_p2 = (trunc_ln26_reg_1569 + 10'd416);

assign add_ln26_43_fu_746_p2 = (trunc_ln26_reg_1569 + 10'd448);

assign add_ln26_44_fu_751_p2 = (trunc_ln26_reg_1569 + 10'd480);

assign add_ln26_45_fu_1145_p2 = ($signed(trunc_ln26_reg_1569) + $signed(10'd544));

assign add_ln26_46_fu_780_p2 = ($signed(trunc_ln26_reg_1569) + $signed(10'd576));

assign add_ln26_47_fu_785_p2 = ($signed(trunc_ln26_reg_1569) + $signed(10'd608));

assign add_ln26_48_fu_1178_p2 = ($signed(trunc_ln26_reg_1569) + $signed(10'd640));

assign add_ln26_49_fu_1183_p2 = ($signed(trunc_ln26_reg_1569) + $signed(10'd672));

assign add_ln26_4_fu_1014_p2 = (mul_ln26_6_reg_1872 + mul_ln26_7_reg_1877);

assign add_ln26_50_fu_814_p2 = ($signed(trunc_ln26_reg_1569) + $signed(10'd704));

assign add_ln26_51_fu_819_p2 = ($signed(trunc_ln26_reg_1569) + $signed(10'd736));

assign add_ln26_52_fu_848_p2 = ($signed(trunc_ln26_reg_1569) + $signed(10'd768));

assign add_ln26_53_fu_853_p2 = ($signed(trunc_ln26_reg_1569) + $signed(10'd800));

assign add_ln26_54_fu_882_p2 = ($signed(trunc_ln26_reg_1569) + $signed(10'd832));

assign add_ln26_55_fu_887_p2 = ($signed(trunc_ln26_reg_1569) + $signed(10'd864));

assign add_ln26_56_fu_916_p2 = ($signed(trunc_ln26_reg_1569) + $signed(10'd896));

assign add_ln26_57_fu_921_p2 = ($signed(trunc_ln26_reg_1569) + $signed(10'd928));

assign add_ln26_58_fu_700_p2 = ($signed(trunc_ln26_fu_685_p1) + $signed(10'd960));

assign add_ln26_59_fu_706_p2 = ($signed(trunc_ln26_fu_685_p1) + $signed(10'd992));

assign add_ln26_5_fu_1300_p2 = (add_ln26_4_reg_1937 + add_ln26_3_fu_1296_p2);

assign add_ln26_6_fu_1309_p2 = (add_ln26_5_reg_2262 + add_ln26_2_fu_1305_p2);

assign add_ln26_7_fu_1314_p2 = (mul_ln26_8_reg_2242 + mul_ln26_9_reg_2252);

assign add_ln26_8_fu_1318_p2 = (mul_ln26_10_reg_2257 + mul_ln26_11_reg_2267);

assign add_ln26_9_fu_1340_p2 = (add_ln26_8_reg_2297 + add_ln26_7_reg_2282);

assign add_ln26_fu_1271_p2 = (mul_ln26_1_reg_2182 + mul_ln26_reg_1792);

assign add_ln27_fu_1371_p2 = (add_ln26_29_reg_2332 + add_ln26_14_fu_1367_p2);

assign add_ln28_fu_1188_p2 = (zext_ln28 + trunc_ln26_reg_1569);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage9;

assign cov_address0 = zext_ln28_1_fu_1376_p1;

assign cov_d0 = {{add_ln27_reg_2337}, {1'd0}};

assign icmp_ln23_fu_674_p2 = ((ap_sig_allocacmp_j_1 == 11'd32) ? 1'b1 : 1'b0);

assign j_2_cast_fu_680_p1 = ap_sig_allocacmp_j_1;

assign trunc_ln26_10_fu_1158_p1 = data_q1[30:0];

assign trunc_ln26_11_fu_1162_p1 = data_q0[30:0];

assign trunc_ln26_12_fu_1200_p1 = data_q1[30:0];

assign trunc_ln26_13_fu_1204_p1 = data_q0[30:0];

assign trunc_ln26_14_fu_1238_p1 = data_q1[30:0];

assign trunc_ln26_15_fu_832_p1 = data_q1[30:0];

assign trunc_ln26_16_fu_836_p1 = data_q0[30:0];

assign trunc_ln26_17_fu_734_p1 = data_q0[30:0];

assign trunc_ln26_18_fu_1242_p1 = data_q0[30:0];

assign trunc_ln26_19_fu_866_p1 = data_q1[30:0];

assign trunc_ln26_1_fu_730_p1 = data_q1[30:0];

assign trunc_ln26_20_fu_870_p1 = data_q0[30:0];

assign trunc_ln26_21_fu_1263_p1 = data_q1[30:0];

assign trunc_ln26_22_fu_1267_p1 = data_q0[30:0];

assign trunc_ln26_23_fu_900_p1 = data_q1[30:0];

assign trunc_ln26_24_fu_904_p1 = data_q0[30:0];

assign trunc_ln26_25_fu_934_p1 = data_q1[30:0];

assign trunc_ln26_26_fu_938_p1 = data_q0[30:0];

assign trunc_ln26_27_fu_968_p1 = data_q1[30:0];

assign trunc_ln26_28_fu_972_p1 = data_q0[30:0];

assign trunc_ln26_29_fu_1006_p1 = data_q1[30:0];

assign trunc_ln26_2_fu_1036_p1 = data_q1[30:0];

assign trunc_ln26_30_fu_1010_p1 = data_q0[30:0];

assign trunc_ln26_31_fu_764_p1 = data_q1[30:0];

assign trunc_ln26_32_fu_768_p1 = data_q0[30:0];

assign trunc_ln26_3_fu_1040_p1 = data_q0[30:0];

assign trunc_ln26_4_fu_1082_p1 = data_q1[30:0];

assign trunc_ln26_5_fu_1086_p1 = data_q0[30:0];

assign trunc_ln26_6_fu_1120_p1 = data_q1[30:0];

assign trunc_ln26_7_fu_790_p1 = data_q1[30:0];

assign trunc_ln26_8_fu_794_p1 = data_q0[30:0];

assign trunc_ln26_9_fu_1124_p1 = data_q0[30:0];

assign trunc_ln26_fu_685_p1 = ap_sig_allocacmp_j_1[9:0];

assign xor_ln26_fu_689_p2 = (trunc_ln26_fu_685_p1 ^ 10'd512);

assign zext_ln22_1_cast_fu_662_p1 = zext_ln22_1;

assign zext_ln26_10_fu_1132_p1 = add_ln26_40_reg_2042;

assign zext_ln26_11_fu_1136_p1 = add_ln26_41_reg_2047;

assign zext_ln26_12_fu_1170_p1 = add_ln26_42_reg_2087;

assign zext_ln26_13_fu_772_p1 = add_ln26_43_reg_1662;

assign zext_ln26_14_fu_776_p1 = add_ln26_44_reg_1667;

assign zext_ln26_15_fu_695_p1 = xor_ln26_fu_689_p2;

assign zext_ln26_16_fu_1174_p1 = add_ln26_45_reg_2092;

assign zext_ln26_17_fu_806_p1 = add_ln26_46_reg_1692;

assign zext_ln26_18_fu_810_p1 = add_ln26_47_reg_1697;

assign zext_ln26_19_fu_1222_p1 = add_ln26_48_reg_2132;

assign zext_ln26_1_fu_984_p1 = add_ln26_31_reg_1857;

assign zext_ln26_20_fu_1226_p1 = add_ln26_49_reg_2137;

assign zext_ln26_21_fu_840_p1 = add_ln26_50_reg_1722;

assign zext_ln26_22_fu_844_p1 = add_ln26_51_reg_1727;

assign zext_ln26_23_fu_874_p1 = add_ln26_52_reg_1752;

assign zext_ln26_24_fu_878_p1 = add_ln26_53_reg_1757;

assign zext_ln26_25_fu_908_p1 = add_ln26_54_reg_1782;

assign zext_ln26_26_fu_912_p1 = add_ln26_55_reg_1787;

assign zext_ln26_27_fu_952_p1 = add_ln26_56_reg_1822;

assign zext_ln26_28_fu_956_p1 = add_ln26_57_reg_1827;

assign zext_ln26_29_fu_722_p1 = add_ln26_58_reg_1612;

assign zext_ln26_2_fu_1018_p1 = add_ln26_32_reg_1907;

assign zext_ln26_30_fu_726_p1 = add_ln26_59_reg_1617;

assign zext_ln26_3_fu_1022_p1 = add_ln26_33_reg_1912;

assign zext_ln26_4_fu_1056_p1 = add_ln26_34_reg_1952;

assign zext_ln26_5_fu_738_p1 = add_ln26_35_reg_1622;

assign zext_ln26_6_fu_742_p1 = add_ln26_36_reg_1627;

assign zext_ln26_7_fu_1060_p1 = add_ln26_37_reg_1957;

assign zext_ln26_8_fu_1094_p1 = add_ln26_38_reg_1997;

assign zext_ln26_9_fu_1098_p1 = add_ln26_39_reg_2002;

assign zext_ln26_fu_980_p1 = add_ln26_30_reg_1852;

assign zext_ln28_1_fu_1376_p1 = add_ln28_reg_2142;

endmodule //covariance_covariance_Pipeline_VITIS_LOOP_23_5
