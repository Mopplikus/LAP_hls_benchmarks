// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module covariance_covariance_Pipeline_VITIS_LOOP_17_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        zext_ln16_1,
        data_address0,
        data_ce0,
        data_q0,
        data_address1,
        data_ce1,
        data_q1,
        zext_ln22,
        cov_address0,
        cov_ce0,
        cov_we0,
        cov_d0,
        data_load_32,
        data_load_34,
        data_load_36,
        data_load_38,
        data_load_40,
        data_load_42,
        data_load_44,
        data_load_46,
        data_load_48,
        data_load_50,
        data_load_52,
        data_load_54,
        data_load_56,
        data_load_58,
        data_load_60,
        data_load_62,
        data_load_64,
        data_load_66,
        data_load_68,
        data_load_70,
        data_load_72,
        data_load_74,
        data_load_76,
        data_load_78,
        data_load_80,
        data_load_82,
        data_load_84,
        data_load_86,
        data_load_88,
        data_load_90,
        data_load_92,
        data_load_94
);

parameter    ap_ST_fsm_pp0_stage0 = 16'd1;
parameter    ap_ST_fsm_pp0_stage1 = 16'd2;
parameter    ap_ST_fsm_pp0_stage2 = 16'd4;
parameter    ap_ST_fsm_pp0_stage3 = 16'd8;
parameter    ap_ST_fsm_pp0_stage4 = 16'd16;
parameter    ap_ST_fsm_pp0_stage5 = 16'd32;
parameter    ap_ST_fsm_pp0_stage6 = 16'd64;
parameter    ap_ST_fsm_pp0_stage7 = 16'd128;
parameter    ap_ST_fsm_pp0_stage8 = 16'd256;
parameter    ap_ST_fsm_pp0_stage9 = 16'd512;
parameter    ap_ST_fsm_pp0_stage10 = 16'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 16'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 16'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 16'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 16'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [4:0] zext_ln16_1;
output  [9:0] data_address0;
output   data_ce0;
input  [31:0] data_q0;
output  [9:0] data_address1;
output   data_ce1;
input  [31:0] data_q1;
input  [9:0] zext_ln22;
output  [9:0] cov_address0;
output   cov_ce0;
output   cov_we0;
output  [31:0] cov_d0;
input  [30:0] data_load_32;
input  [30:0] data_load_34;
input  [30:0] data_load_36;
input  [30:0] data_load_38;
input  [30:0] data_load_40;
input  [30:0] data_load_42;
input  [30:0] data_load_44;
input  [30:0] data_load_46;
input  [30:0] data_load_48;
input  [30:0] data_load_50;
input  [30:0] data_load_52;
input  [30:0] data_load_54;
input  [30:0] data_load_56;
input  [30:0] data_load_58;
input  [30:0] data_load_60;
input  [30:0] data_load_62;
input  [30:0] data_load_64;
input  [30:0] data_load_66;
input  [30:0] data_load_68;
input  [30:0] data_load_70;
input  [30:0] data_load_72;
input  [30:0] data_load_74;
input  [30:0] data_load_76;
input  [30:0] data_load_78;
input  [30:0] data_load_80;
input  [30:0] data_load_82;
input  [30:0] data_load_84;
input  [30:0] data_load_86;
input  [30:0] data_load_88;
input  [30:0] data_load_90;
input  [30:0] data_load_92;
input  [30:0] data_load_94;

reg ap_idle;
reg[9:0] data_address0;
reg data_ce0;
reg[9:0] data_address1;
reg data_ce1;
reg cov_ce0;
reg cov_we0;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state19_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_subdone;
reg   [0:0] icmp_ln17_reg_1596;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state17_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln17_fu_674_p2;
wire   [9:0] trunc_ln20_fu_685_p1;
reg   [9:0] trunc_ln20_reg_1600;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state18_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire  signed [30:0] trunc_ln20_1_fu_731_p1;
reg  signed [30:0] trunc_ln20_1_reg_1655;
wire  signed [30:0] trunc_ln20_2_fu_735_p1;
reg  signed [30:0] trunc_ln20_2_reg_1660;
wire    ap_block_pp0_stage2_11001;
wire   [30:0] mul_ln20_fu_759_p2;
reg   [30:0] mul_ln20_reg_1675;
wire   [30:0] mul_ln20_1_fu_763_p2;
reg   [30:0] mul_ln20_1_reg_1680;
wire  signed [30:0] trunc_ln20_3_fu_767_p1;
reg  signed [30:0] trunc_ln20_3_reg_1685;
wire  signed [30:0] trunc_ln20_4_fu_771_p1;
reg  signed [30:0] trunc_ln20_4_reg_1690;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire   [30:0] mul_ln20_2_fu_795_p2;
reg   [30:0] mul_ln20_2_reg_1705;
wire   [30:0] mul_ln20_3_fu_799_p2;
reg   [30:0] mul_ln20_3_reg_1710;
wire  signed [30:0] trunc_ln20_7_fu_803_p1;
reg  signed [30:0] trunc_ln20_7_reg_1715;
wire  signed [30:0] trunc_ln20_8_fu_807_p1;
reg  signed [30:0] trunc_ln20_8_reg_1720;
wire   [30:0] add_ln20_fu_811_p2;
reg   [30:0] add_ln20_reg_1725;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire   [30:0] mul_ln20_6_fu_835_p2;
reg   [30:0] mul_ln20_6_reg_1740;
wire   [30:0] mul_ln20_7_fu_839_p2;
reg   [30:0] mul_ln20_7_reg_1745;
wire  signed [30:0] trunc_ln20_9_fu_843_p1;
reg  signed [30:0] trunc_ln20_9_reg_1750;
wire  signed [30:0] trunc_ln20_10_fu_847_p1;
reg  signed [30:0] trunc_ln20_10_reg_1755;
wire   [30:0] add_ln20_1_fu_851_p2;
reg   [30:0] add_ln20_1_reg_1760;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire   [30:0] mul_ln20_8_fu_875_p2;
reg   [30:0] mul_ln20_8_reg_1775;
wire   [30:0] mul_ln20_9_fu_879_p2;
reg   [30:0] mul_ln20_9_reg_1780;
wire  signed [30:0] trunc_ln20_11_fu_883_p1;
reg  signed [30:0] trunc_ln20_11_reg_1785;
wire  signed [30:0] trunc_ln20_12_fu_887_p1;
reg  signed [30:0] trunc_ln20_12_reg_1790;
wire   [30:0] add_ln20_4_fu_891_p2;
reg   [30:0] add_ln20_4_reg_1795;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire   [30:0] mul_ln20_10_fu_915_p2;
reg   [30:0] mul_ln20_10_reg_1810;
wire   [30:0] mul_ln20_11_fu_919_p2;
reg   [30:0] mul_ln20_11_reg_1815;
wire  signed [30:0] trunc_ln20_15_fu_923_p1;
reg  signed [30:0] trunc_ln20_15_reg_1820;
wire  signed [30:0] trunc_ln20_16_fu_927_p1;
reg  signed [30:0] trunc_ln20_16_reg_1825;
wire   [30:0] add_ln20_7_fu_931_p2;
reg   [30:0] add_ln20_7_reg_1830;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire   [30:0] mul_ln20_14_fu_955_p2;
reg   [30:0] mul_ln20_14_reg_1845;
wire   [30:0] mul_ln20_15_fu_959_p2;
reg   [30:0] mul_ln20_15_reg_1850;
wire  signed [30:0] trunc_ln20_19_fu_963_p1;
reg  signed [30:0] trunc_ln20_19_reg_1855;
wire  signed [30:0] trunc_ln20_20_fu_967_p1;
reg  signed [30:0] trunc_ln20_20_reg_1860;
wire   [30:0] add_ln20_8_fu_971_p2;
reg   [30:0] add_ln20_8_reg_1865;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
wire   [30:0] mul_ln20_18_fu_995_p2;
reg   [30:0] mul_ln20_18_reg_1880;
wire   [30:0] mul_ln20_19_fu_999_p2;
reg   [30:0] mul_ln20_19_reg_1885;
wire  signed [30:0] trunc_ln20_23_fu_1003_p1;
reg  signed [30:0] trunc_ln20_23_reg_1890;
wire  signed [30:0] trunc_ln20_24_fu_1007_p1;
reg  signed [30:0] trunc_ln20_24_reg_1895;
wire   [30:0] add_ln20_11_fu_1011_p2;
reg   [30:0] add_ln20_11_reg_1900;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
wire   [30:0] mul_ln20_22_fu_1035_p2;
reg   [30:0] mul_ln20_22_reg_1915;
wire   [30:0] mul_ln20_23_fu_1039_p2;
reg   [30:0] mul_ln20_23_reg_1920;
wire  signed [30:0] trunc_ln20_25_fu_1043_p1;
reg  signed [30:0] trunc_ln20_25_reg_1925;
wire  signed [30:0] trunc_ln20_26_fu_1047_p1;
reg  signed [30:0] trunc_ln20_26_reg_1930;
wire   [30:0] add_ln20_16_fu_1051_p2;
reg   [30:0] add_ln20_16_reg_1935;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
wire   [30:0] mul_ln20_24_fu_1075_p2;
reg   [30:0] mul_ln20_24_reg_1950;
wire   [30:0] mul_ln20_25_fu_1079_p2;
reg   [30:0] mul_ln20_25_reg_1955;
wire  signed [30:0] trunc_ln20_27_fu_1083_p1;
reg  signed [30:0] trunc_ln20_27_reg_1960;
wire  signed [30:0] trunc_ln20_28_fu_1087_p1;
reg  signed [30:0] trunc_ln20_28_reg_1965;
wire   [30:0] add_ln20_19_fu_1091_p2;
reg   [30:0] add_ln20_19_reg_1970;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_11001;
wire   [30:0] mul_ln20_26_fu_1115_p2;
reg   [30:0] mul_ln20_26_reg_1985;
wire   [30:0] mul_ln20_27_fu_1119_p2;
reg   [30:0] mul_ln20_27_reg_1990;
wire  signed [30:0] trunc_ln20_29_fu_1123_p1;
reg  signed [30:0] trunc_ln20_29_reg_1995;
wire  signed [30:0] trunc_ln20_30_fu_1127_p1;
reg  signed [30:0] trunc_ln20_30_reg_2000;
wire   [30:0] add_ln20_22_fu_1131_p2;
reg   [30:0] add_ln20_22_reg_2005;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_11001;
wire   [30:0] mul_ln20_28_fu_1155_p2;
reg   [30:0] mul_ln20_28_reg_2020;
wire   [30:0] mul_ln20_29_fu_1159_p2;
reg   [30:0] mul_ln20_29_reg_2025;
wire  signed [30:0] trunc_ln20_31_fu_1163_p1;
reg  signed [30:0] trunc_ln20_31_reg_2030;
wire  signed [30:0] trunc_ln20_32_fu_1167_p1;
reg  signed [30:0] trunc_ln20_32_reg_2035;
wire   [30:0] add_ln20_23_fu_1171_p2;
reg   [30:0] add_ln20_23_reg_2040;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_11001;
wire  signed [30:0] trunc_ln20_5_fu_1195_p1;
reg  signed [30:0] trunc_ln20_5_reg_2055;
wire  signed [30:0] trunc_ln20_6_fu_1199_p1;
reg  signed [30:0] trunc_ln20_6_reg_2060;
wire   [30:0] mul_ln20_30_fu_1203_p2;
reg   [30:0] mul_ln20_30_reg_2065;
wire   [30:0] mul_ln20_31_fu_1207_p2;
reg   [30:0] mul_ln20_31_reg_2070;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_11001;
wire   [30:0] mul_ln20_4_fu_1231_p2;
reg   [30:0] mul_ln20_4_reg_2085;
wire   [30:0] mul_ln20_5_fu_1235_p2;
reg   [30:0] mul_ln20_5_reg_2090;
wire  signed [30:0] trunc_ln20_13_fu_1239_p1;
reg  signed [30:0] trunc_ln20_13_reg_2095;
wire  signed [30:0] trunc_ln20_14_fu_1243_p1;
reg  signed [30:0] trunc_ln20_14_reg_2100;
wire   [30:0] add_ln20_28_fu_1265_p2;
reg   [30:0] add_ln20_28_reg_2105;
wire    ap_block_pp0_stage15_11001;
wire   [9:0] add_ln22_fu_1291_p2;
reg   [9:0] add_ln22_reg_2120;
wire   [30:0] mul_ln20_12_fu_1295_p2;
reg   [30:0] mul_ln20_12_reg_2125;
wire   [30:0] mul_ln20_13_fu_1299_p2;
reg   [30:0] mul_ln20_13_reg_2130;
wire  signed [30:0] trunc_ln20_17_fu_1303_p1;
reg  signed [30:0] trunc_ln20_17_reg_2135;
wire  signed [30:0] trunc_ln20_18_fu_1307_p1;
reg  signed [30:0] trunc_ln20_18_reg_2140;
wire   [30:0] add_ln20_6_fu_1324_p2;
reg   [30:0] add_ln20_6_reg_2145;
wire   [30:0] mul_ln20_16_fu_1330_p2;
reg   [30:0] mul_ln20_16_reg_2150;
wire   [30:0] mul_ln20_17_fu_1334_p2;
reg   [30:0] mul_ln20_17_reg_2155;
wire  signed [30:0] trunc_ln20_21_fu_1338_p1;
reg  signed [30:0] trunc_ln20_21_reg_2160;
wire  signed [30:0] trunc_ln20_22_fu_1342_p1;
reg  signed [30:0] trunc_ln20_22_reg_2165;
wire   [30:0] add_ln20_13_fu_1359_p2;
reg   [30:0] add_ln20_13_reg_2170;
wire   [30:0] mul_ln20_20_fu_1365_p2;
reg   [30:0] mul_ln20_20_reg_2175;
wire   [30:0] mul_ln20_21_fu_1369_p2;
reg   [30:0] mul_ln20_21_reg_2180;
wire   [30:0] add_ln20_17_fu_1377_p2;
reg   [30:0] add_ln20_17_reg_2185;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] j_2_cast_fu_680_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln20_fu_695_p1;
wire   [63:0] zext_ln20_1_fu_716_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln20_2_fu_726_p1;
wire   [63:0] zext_ln20_5_fu_744_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln20_6_fu_754_p1;
wire   [63:0] zext_ln20_7_fu_780_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln20_8_fu_790_p1;
wire   [63:0] zext_ln20_9_fu_820_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln20_10_fu_830_p1;
wire   [63:0] zext_ln20_13_fu_860_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln20_14_fu_870_p1;
wire   [63:0] zext_ln20_17_fu_900_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln20_18_fu_910_p1;
wire   [63:0] zext_ln20_21_fu_940_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln20_22_fu_950_p1;
wire   [63:0] zext_ln20_23_fu_980_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln20_24_fu_990_p1;
wire   [63:0] zext_ln20_25_fu_1020_p1;
wire    ap_block_pp0_stage9;
wire   [63:0] zext_ln20_26_fu_1030_p1;
wire   [63:0] zext_ln20_27_fu_1060_p1;
wire    ap_block_pp0_stage10;
wire   [63:0] zext_ln20_28_fu_1070_p1;
wire   [63:0] zext_ln20_29_fu_1100_p1;
wire    ap_block_pp0_stage11;
wire   [63:0] zext_ln20_30_fu_1110_p1;
wire   [63:0] zext_ln20_3_fu_1140_p1;
wire    ap_block_pp0_stage12;
wire   [63:0] zext_ln20_4_fu_1150_p1;
wire   [63:0] zext_ln20_11_fu_1180_p1;
wire    ap_block_pp0_stage13;
wire   [63:0] zext_ln20_12_fu_1190_p1;
wire   [63:0] zext_ln20_15_fu_1216_p1;
wire    ap_block_pp0_stage14;
wire   [63:0] zext_ln20_16_fu_1226_p1;
wire   [63:0] zext_ln20_19_fu_1276_p1;
wire    ap_block_pp0_stage15;
wire   [63:0] zext_ln20_20_fu_1286_p1;
wire   [63:0] zext_ln22_1_fu_1382_p1;
reg   [10:0] j_fu_176;
wire   [10:0] zext_ln16_1_cast_fu_662_p1;
wire   [10:0] add_ln17_fu_700_p2;
wire    ap_loop_init;
reg   [10:0] ap_sig_allocacmp_j_2;
wire   [9:0] add_ln20_30_fu_689_p2;
wire   [9:0] add_ln20_31_fu_711_p2;
wire   [9:0] add_ln20_32_fu_721_p2;
wire   [9:0] add_ln20_35_fu_739_p2;
wire   [9:0] add_ln20_36_fu_749_p2;
wire   [9:0] add_ln20_37_fu_775_p2;
wire   [9:0] add_ln20_38_fu_785_p2;
wire   [9:0] add_ln20_39_fu_815_p2;
wire   [9:0] add_ln20_40_fu_825_p2;
wire   [9:0] add_ln20_43_fu_855_p2;
wire   [9:0] add_ln20_44_fu_865_p2;
wire   [9:0] add_ln20_46_fu_895_p2;
wire   [9:0] add_ln20_47_fu_905_p2;
wire   [9:0] add_ln20_50_fu_935_p2;
wire   [9:0] add_ln20_51_fu_945_p2;
wire   [9:0] add_ln20_52_fu_975_p2;
wire   [9:0] add_ln20_53_fu_985_p2;
wire   [9:0] add_ln20_54_fu_1015_p2;
wire   [9:0] add_ln20_55_fu_1025_p2;
wire   [9:0] add_ln20_56_fu_1055_p2;
wire   [9:0] add_ln20_57_fu_1065_p2;
wire   [9:0] add_ln20_58_fu_1095_p2;
wire   [9:0] add_ln20_59_fu_1105_p2;
wire   [9:0] add_ln20_33_fu_1135_p2;
wire   [9:0] add_ln20_34_fu_1145_p2;
wire   [9:0] add_ln20_41_fu_1175_p2;
wire   [9:0] add_ln20_42_fu_1185_p2;
wire   [9:0] xor_ln20_fu_1211_p2;
wire   [9:0] add_ln20_45_fu_1221_p2;
wire   [30:0] add_ln20_26_fu_1255_p2;
wire   [30:0] add_ln20_25_fu_1251_p2;
wire   [30:0] add_ln20_27_fu_1259_p2;
wire   [30:0] add_ln20_24_fu_1247_p2;
wire   [9:0] add_ln20_48_fu_1271_p2;
wire   [9:0] add_ln20_49_fu_1281_p2;
wire   [30:0] add_ln20_3_fu_1315_p2;
wire   [30:0] add_ln20_5_fu_1319_p2;
wire   [30:0] add_ln20_2_fu_1311_p2;
wire   [30:0] add_ln20_10_fu_1350_p2;
wire   [30:0] add_ln20_12_fu_1354_p2;
wire   [30:0] add_ln20_9_fu_1346_p2;
wire   [30:0] add_ln20_15_fu_1373_p2;
wire   [30:0] add_ln20_18_fu_1390_p2;
wire   [30:0] add_ln20_20_fu_1394_p2;
wire   [30:0] add_ln20_21_fu_1399_p2;
wire   [30:0] add_ln20_29_fu_1404_p2;
wire   [30:0] add_ln20_14_fu_1386_p2;
wire   [30:0] add_ln21_fu_1409_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [15:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U2(
    .din0(trunc_ln20_1_reg_1655),
    .din1(data_load_32),
    .dout(mul_ln20_fu_759_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U3(
    .din0(trunc_ln20_2_reg_1660),
    .din1(data_load_34),
    .dout(mul_ln20_1_fu_763_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U4(
    .din0(trunc_ln20_3_reg_1685),
    .din1(data_load_36),
    .dout(mul_ln20_2_fu_795_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U5(
    .din0(trunc_ln20_4_reg_1690),
    .din1(data_load_38),
    .dout(mul_ln20_3_fu_799_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U6(
    .din0(trunc_ln20_7_reg_1715),
    .din1(data_load_44),
    .dout(mul_ln20_6_fu_835_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U7(
    .din0(trunc_ln20_8_reg_1720),
    .din1(data_load_46),
    .dout(mul_ln20_7_fu_839_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U8(
    .din0(trunc_ln20_9_reg_1750),
    .din1(data_load_48),
    .dout(mul_ln20_8_fu_875_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U9(
    .din0(trunc_ln20_10_reg_1755),
    .din1(data_load_50),
    .dout(mul_ln20_9_fu_879_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U10(
    .din0(trunc_ln20_11_reg_1785),
    .din1(data_load_52),
    .dout(mul_ln20_10_fu_915_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U11(
    .din0(trunc_ln20_12_reg_1790),
    .din1(data_load_54),
    .dout(mul_ln20_11_fu_919_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U12(
    .din0(trunc_ln20_15_reg_1820),
    .din1(data_load_60),
    .dout(mul_ln20_14_fu_955_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U13(
    .din0(trunc_ln20_16_reg_1825),
    .din1(data_load_62),
    .dout(mul_ln20_15_fu_959_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U14(
    .din0(trunc_ln20_19_reg_1855),
    .din1(data_load_68),
    .dout(mul_ln20_18_fu_995_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U15(
    .din0(trunc_ln20_20_reg_1860),
    .din1(data_load_70),
    .dout(mul_ln20_19_fu_999_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U16(
    .din0(trunc_ln20_23_reg_1890),
    .din1(data_load_76),
    .dout(mul_ln20_22_fu_1035_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U17(
    .din0(trunc_ln20_24_reg_1895),
    .din1(data_load_78),
    .dout(mul_ln20_23_fu_1039_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U18(
    .din0(trunc_ln20_25_reg_1925),
    .din1(data_load_80),
    .dout(mul_ln20_24_fu_1075_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U19(
    .din0(trunc_ln20_26_reg_1930),
    .din1(data_load_82),
    .dout(mul_ln20_25_fu_1079_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U20(
    .din0(trunc_ln20_27_reg_1960),
    .din1(data_load_84),
    .dout(mul_ln20_26_fu_1115_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U21(
    .din0(trunc_ln20_28_reg_1965),
    .din1(data_load_86),
    .dout(mul_ln20_27_fu_1119_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U22(
    .din0(trunc_ln20_29_reg_1995),
    .din1(data_load_88),
    .dout(mul_ln20_28_fu_1155_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U23(
    .din0(trunc_ln20_30_reg_2000),
    .din1(data_load_90),
    .dout(mul_ln20_29_fu_1159_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U24(
    .din0(trunc_ln20_31_reg_2030),
    .din1(data_load_92),
    .dout(mul_ln20_30_fu_1203_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U25(
    .din0(trunc_ln20_32_reg_2035),
    .din1(data_load_94),
    .dout(mul_ln20_31_fu_1207_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U26(
    .din0(trunc_ln20_5_reg_2055),
    .din1(data_load_40),
    .dout(mul_ln20_4_fu_1231_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U27(
    .din0(trunc_ln20_6_reg_2060),
    .din1(data_load_42),
    .dout(mul_ln20_5_fu_1235_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U28(
    .din0(trunc_ln20_13_reg_2095),
    .din1(data_load_56),
    .dout(mul_ln20_12_fu_1295_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U29(
    .din0(trunc_ln20_14_reg_2100),
    .din1(data_load_58),
    .dout(mul_ln20_13_fu_1299_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U30(
    .din0(trunc_ln20_17_reg_2135),
    .din1(data_load_64),
    .dout(mul_ln20_16_fu_1330_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U31(
    .din0(trunc_ln20_18_reg_2140),
    .din1(data_load_66),
    .dout(mul_ln20_17_fu_1334_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U32(
    .din0(trunc_ln20_21_reg_2160),
    .din1(data_load_72),
    .dout(mul_ln20_20_fu_1365_p2)
);

covariance_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U33(
    .din0(trunc_ln20_22_reg_2165),
    .din1(data_load_74),
    .dout(mul_ln20_21_fu_1369_p2)
);

covariance_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln17_fu_674_p2 == 1'd0))) begin
            j_fu_176 <= add_ln17_fu_700_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_176 <= zext_ln16_1_cast_fu_662_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1596 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        add_ln20_11_reg_1900 <= add_ln20_11_fu_1011_p2;
        mul_ln20_18_reg_1880 <= mul_ln20_18_fu_995_p2;
        mul_ln20_19_reg_1885 <= mul_ln20_19_fu_999_p2;
        trunc_ln20_23_reg_1890 <= trunc_ln20_23_fu_1003_p1;
        trunc_ln20_24_reg_1895 <= trunc_ln20_24_fu_1007_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln20_13_reg_2170 <= add_ln20_13_fu_1359_p2;
        icmp_ln17_reg_1596 <= icmp_ln17_fu_674_p2;
        mul_ln20_16_reg_2150 <= mul_ln20_16_fu_1330_p2;
        mul_ln20_17_reg_2155 <= mul_ln20_17_fu_1334_p2;
        trunc_ln20_21_reg_2160 <= trunc_ln20_21_fu_1338_p1;
        trunc_ln20_22_reg_2165 <= trunc_ln20_22_fu_1342_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1596 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        add_ln20_16_reg_1935 <= add_ln20_16_fu_1051_p2;
        mul_ln20_22_reg_1915 <= mul_ln20_22_fu_1035_p2;
        mul_ln20_23_reg_1920 <= mul_ln20_23_fu_1039_p2;
        trunc_ln20_25_reg_1925 <= trunc_ln20_25_fu_1043_p1;
        trunc_ln20_26_reg_1930 <= trunc_ln20_26_fu_1047_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln20_17_reg_2185 <= add_ln20_17_fu_1377_p2;
        mul_ln20_20_reg_2175 <= mul_ln20_20_fu_1365_p2;
        mul_ln20_21_reg_2180 <= mul_ln20_21_fu_1369_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1596 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        add_ln20_19_reg_1970 <= add_ln20_19_fu_1091_p2;
        mul_ln20_24_reg_1950 <= mul_ln20_24_fu_1075_p2;
        mul_ln20_25_reg_1955 <= mul_ln20_25_fu_1079_p2;
        trunc_ln20_27_reg_1960 <= trunc_ln20_27_fu_1083_p1;
        trunc_ln20_28_reg_1965 <= trunc_ln20_28_fu_1087_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1596 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln20_1_reg_1760 <= add_ln20_1_fu_851_p2;
        mul_ln20_6_reg_1740 <= mul_ln20_6_fu_835_p2;
        mul_ln20_7_reg_1745 <= mul_ln20_7_fu_839_p2;
        trunc_ln20_10_reg_1755 <= trunc_ln20_10_fu_847_p1;
        trunc_ln20_9_reg_1750 <= trunc_ln20_9_fu_843_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1596 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        add_ln20_22_reg_2005 <= add_ln20_22_fu_1131_p2;
        mul_ln20_26_reg_1985 <= mul_ln20_26_fu_1115_p2;
        mul_ln20_27_reg_1990 <= mul_ln20_27_fu_1119_p2;
        trunc_ln20_29_reg_1995 <= trunc_ln20_29_fu_1123_p1;
        trunc_ln20_30_reg_2000 <= trunc_ln20_30_fu_1127_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1596 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        add_ln20_23_reg_2040 <= add_ln20_23_fu_1171_p2;
        mul_ln20_28_reg_2020 <= mul_ln20_28_fu_1155_p2;
        mul_ln20_29_reg_2025 <= mul_ln20_29_fu_1159_p2;
        trunc_ln20_31_reg_2030 <= trunc_ln20_31_fu_1163_p1;
        trunc_ln20_32_reg_2035 <= trunc_ln20_32_fu_1167_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1596 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        add_ln20_28_reg_2105 <= add_ln20_28_fu_1265_p2;
        mul_ln20_4_reg_2085 <= mul_ln20_4_fu_1231_p2;
        mul_ln20_5_reg_2090 <= mul_ln20_5_fu_1235_p2;
        trunc_ln20_13_reg_2095 <= trunc_ln20_13_fu_1239_p1;
        trunc_ln20_14_reg_2100 <= trunc_ln20_14_fu_1243_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1596 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        add_ln20_4_reg_1795 <= add_ln20_4_fu_891_p2;
        mul_ln20_8_reg_1775 <= mul_ln20_8_fu_875_p2;
        mul_ln20_9_reg_1780 <= mul_ln20_9_fu_879_p2;
        trunc_ln20_11_reg_1785 <= trunc_ln20_11_fu_883_p1;
        trunc_ln20_12_reg_1790 <= trunc_ln20_12_fu_887_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1596 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        add_ln20_6_reg_2145 <= add_ln20_6_fu_1324_p2;
        add_ln22_reg_2120 <= add_ln22_fu_1291_p2;
        mul_ln20_12_reg_2125 <= mul_ln20_12_fu_1295_p2;
        mul_ln20_13_reg_2130 <= mul_ln20_13_fu_1299_p2;
        trunc_ln20_17_reg_2135 <= trunc_ln20_17_fu_1303_p1;
        trunc_ln20_18_reg_2140 <= trunc_ln20_18_fu_1307_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1596 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        add_ln20_7_reg_1830 <= add_ln20_7_fu_931_p2;
        mul_ln20_10_reg_1810 <= mul_ln20_10_fu_915_p2;
        mul_ln20_11_reg_1815 <= mul_ln20_11_fu_919_p2;
        trunc_ln20_15_reg_1820 <= trunc_ln20_15_fu_923_p1;
        trunc_ln20_16_reg_1825 <= trunc_ln20_16_fu_927_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1596 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        add_ln20_8_reg_1865 <= add_ln20_8_fu_971_p2;
        mul_ln20_14_reg_1845 <= mul_ln20_14_fu_955_p2;
        mul_ln20_15_reg_1850 <= mul_ln20_15_fu_959_p2;
        trunc_ln20_19_reg_1855 <= trunc_ln20_19_fu_963_p1;
        trunc_ln20_20_reg_1860 <= trunc_ln20_20_fu_967_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1596 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln20_reg_1725 <= add_ln20_fu_811_p2;
        mul_ln20_2_reg_1705 <= mul_ln20_2_fu_795_p2;
        mul_ln20_3_reg_1710 <= mul_ln20_3_fu_799_p2;
        trunc_ln20_7_reg_1715 <= trunc_ln20_7_fu_803_p1;
        trunc_ln20_8_reg_1720 <= trunc_ln20_8_fu_807_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1596 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_ln20_1_reg_1680 <= mul_ln20_1_fu_763_p2;
        mul_ln20_reg_1675 <= mul_ln20_fu_759_p2;
        trunc_ln20_3_reg_1685 <= trunc_ln20_3_fu_767_p1;
        trunc_ln20_4_reg_1690 <= trunc_ln20_4_fu_771_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1596 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        mul_ln20_30_reg_2065 <= mul_ln20_30_fu_1203_p2;
        mul_ln20_31_reg_2070 <= mul_ln20_31_fu_1207_p2;
        trunc_ln20_5_reg_2055 <= trunc_ln20_5_fu_1195_p1;
        trunc_ln20_6_reg_2060 <= trunc_ln20_6_fu_1199_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1596 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        trunc_ln20_1_reg_1655 <= trunc_ln20_1_fu_731_p1;
        trunc_ln20_2_reg_1660 <= trunc_ln20_2_fu_735_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln17_fu_674_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln20_reg_1600 <= trunc_ln20_fu_685_p1;
    end
end

always @ (*) begin
    if (((icmp_ln17_reg_1596 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage15_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_2 = zext_ln16_1_cast_fu_662_p1;
    end else begin
        ap_sig_allocacmp_j_2 = j_fu_176;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        cov_ce0 = 1'b1;
    end else begin
        cov_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        cov_we0 = 1'b1;
    end else begin
        cov_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            data_address0 = zext_ln20_20_fu_1286_p1;
        end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            data_address0 = zext_ln20_16_fu_1226_p1;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            data_address0 = zext_ln20_12_fu_1190_p1;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            data_address0 = zext_ln20_4_fu_1150_p1;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            data_address0 = zext_ln20_30_fu_1110_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            data_address0 = zext_ln20_28_fu_1070_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            data_address0 = zext_ln20_26_fu_1030_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            data_address0 = zext_ln20_24_fu_990_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            data_address0 = zext_ln20_22_fu_950_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            data_address0 = zext_ln20_18_fu_910_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            data_address0 = zext_ln20_14_fu_870_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            data_address0 = zext_ln20_10_fu_830_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            data_address0 = zext_ln20_8_fu_790_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            data_address0 = zext_ln20_6_fu_754_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            data_address0 = zext_ln20_2_fu_726_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_address0 = zext_ln20_fu_695_p1;
        end else begin
            data_address0 = 'bx;
        end
    end else begin
        data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            data_address1 = zext_ln20_19_fu_1276_p1;
        end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            data_address1 = zext_ln20_15_fu_1216_p1;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            data_address1 = zext_ln20_11_fu_1180_p1;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            data_address1 = zext_ln20_3_fu_1140_p1;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            data_address1 = zext_ln20_29_fu_1100_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            data_address1 = zext_ln20_27_fu_1060_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            data_address1 = zext_ln20_25_fu_1020_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            data_address1 = zext_ln20_23_fu_980_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            data_address1 = zext_ln20_21_fu_940_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            data_address1 = zext_ln20_17_fu_900_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            data_address1 = zext_ln20_13_fu_860_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            data_address1 = zext_ln20_9_fu_820_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            data_address1 = zext_ln20_7_fu_780_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            data_address1 = zext_ln20_5_fu_744_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            data_address1 = zext_ln20_1_fu_716_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_address1 = j_2_cast_fu_680_p1;
        end else begin
            data_address1 = 'bx;
        end
    end else begin
        data_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        data_ce0 = 1'b1;
    end else begin
        data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        data_ce1 = 1'b1;
    end else begin
        data_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln17_fu_700_p2 = (ap_sig_allocacmp_j_2 + 11'd1);

assign add_ln20_10_fu_1350_p2 = (mul_ln20_12_reg_2125 + mul_ln20_13_reg_2130);

assign add_ln20_11_fu_1011_p2 = (mul_ln20_14_reg_1845 + mul_ln20_15_reg_1850);

assign add_ln20_12_fu_1354_p2 = (add_ln20_11_reg_1900 + add_ln20_10_fu_1350_p2);

assign add_ln20_13_fu_1359_p2 = (add_ln20_12_fu_1354_p2 + add_ln20_9_fu_1346_p2);

assign add_ln20_14_fu_1386_p2 = (add_ln20_13_reg_2170 + add_ln20_6_reg_2145);

assign add_ln20_15_fu_1373_p2 = (mul_ln20_16_reg_2150 + mul_ln20_17_reg_2155);

assign add_ln20_16_fu_1051_p2 = (mul_ln20_18_reg_1880 + mul_ln20_19_reg_1885);

assign add_ln20_17_fu_1377_p2 = (add_ln20_16_reg_1935 + add_ln20_15_fu_1373_p2);

assign add_ln20_18_fu_1390_p2 = (mul_ln20_20_reg_2175 + mul_ln20_21_reg_2180);

assign add_ln20_19_fu_1091_p2 = (mul_ln20_22_reg_1915 + mul_ln20_23_reg_1920);

assign add_ln20_1_fu_851_p2 = (mul_ln20_2_reg_1705 + mul_ln20_3_reg_1710);

assign add_ln20_20_fu_1394_p2 = (add_ln20_19_reg_1970 + add_ln20_18_fu_1390_p2);

assign add_ln20_21_fu_1399_p2 = (add_ln20_20_fu_1394_p2 + add_ln20_17_reg_2185);

assign add_ln20_22_fu_1131_p2 = (mul_ln20_24_reg_1950 + mul_ln20_25_reg_1955);

assign add_ln20_23_fu_1171_p2 = (mul_ln20_26_reg_1985 + mul_ln20_27_reg_1990);

assign add_ln20_24_fu_1247_p2 = (add_ln20_23_reg_2040 + add_ln20_22_reg_2005);

assign add_ln20_25_fu_1251_p2 = (mul_ln20_28_reg_2020 + mul_ln20_29_reg_2025);

assign add_ln20_26_fu_1255_p2 = (mul_ln20_30_reg_2065 + mul_ln20_31_reg_2070);

assign add_ln20_27_fu_1259_p2 = (add_ln20_26_fu_1255_p2 + add_ln20_25_fu_1251_p2);

assign add_ln20_28_fu_1265_p2 = (add_ln20_27_fu_1259_p2 + add_ln20_24_fu_1247_p2);

assign add_ln20_29_fu_1404_p2 = (add_ln20_28_reg_2105 + add_ln20_21_fu_1399_p2);

assign add_ln20_2_fu_1311_p2 = (add_ln20_1_reg_1760 + add_ln20_reg_1725);

assign add_ln20_30_fu_689_p2 = (trunc_ln20_fu_685_p1 + 10'd32);

assign add_ln20_31_fu_711_p2 = (trunc_ln20_reg_1600 + 10'd64);

assign add_ln20_32_fu_721_p2 = (trunc_ln20_reg_1600 + 10'd96);

assign add_ln20_33_fu_1135_p2 = (trunc_ln20_reg_1600 + 10'd128);

assign add_ln20_34_fu_1145_p2 = (trunc_ln20_reg_1600 + 10'd160);

assign add_ln20_35_fu_739_p2 = (trunc_ln20_reg_1600 + 10'd192);

assign add_ln20_36_fu_749_p2 = (trunc_ln20_reg_1600 + 10'd224);

assign add_ln20_37_fu_775_p2 = (trunc_ln20_reg_1600 + 10'd256);

assign add_ln20_38_fu_785_p2 = (trunc_ln20_reg_1600 + 10'd288);

assign add_ln20_39_fu_815_p2 = (trunc_ln20_reg_1600 + 10'd320);

assign add_ln20_3_fu_1315_p2 = (mul_ln20_4_reg_2085 + mul_ln20_5_reg_2090);

assign add_ln20_40_fu_825_p2 = (trunc_ln20_reg_1600 + 10'd352);

assign add_ln20_41_fu_1175_p2 = (trunc_ln20_reg_1600 + 10'd384);

assign add_ln20_42_fu_1185_p2 = (trunc_ln20_reg_1600 + 10'd416);

assign add_ln20_43_fu_855_p2 = (trunc_ln20_reg_1600 + 10'd448);

assign add_ln20_44_fu_865_p2 = (trunc_ln20_reg_1600 + 10'd480);

assign add_ln20_45_fu_1221_p2 = ($signed(trunc_ln20_reg_1600) + $signed(10'd544));

assign add_ln20_46_fu_895_p2 = ($signed(trunc_ln20_reg_1600) + $signed(10'd576));

assign add_ln20_47_fu_905_p2 = ($signed(trunc_ln20_reg_1600) + $signed(10'd608));

assign add_ln20_48_fu_1271_p2 = ($signed(trunc_ln20_reg_1600) + $signed(10'd640));

assign add_ln20_49_fu_1281_p2 = ($signed(trunc_ln20_reg_1600) + $signed(10'd672));

assign add_ln20_4_fu_891_p2 = (mul_ln20_6_reg_1740 + mul_ln20_7_reg_1745);

assign add_ln20_50_fu_935_p2 = ($signed(trunc_ln20_reg_1600) + $signed(10'd704));

assign add_ln20_51_fu_945_p2 = ($signed(trunc_ln20_reg_1600) + $signed(10'd736));

assign add_ln20_52_fu_975_p2 = ($signed(trunc_ln20_reg_1600) + $signed(10'd768));

assign add_ln20_53_fu_985_p2 = ($signed(trunc_ln20_reg_1600) + $signed(10'd800));

assign add_ln20_54_fu_1015_p2 = ($signed(trunc_ln20_reg_1600) + $signed(10'd832));

assign add_ln20_55_fu_1025_p2 = ($signed(trunc_ln20_reg_1600) + $signed(10'd864));

assign add_ln20_56_fu_1055_p2 = ($signed(trunc_ln20_reg_1600) + $signed(10'd896));

assign add_ln20_57_fu_1065_p2 = ($signed(trunc_ln20_reg_1600) + $signed(10'd928));

assign add_ln20_58_fu_1095_p2 = ($signed(trunc_ln20_reg_1600) + $signed(10'd960));

assign add_ln20_59_fu_1105_p2 = ($signed(trunc_ln20_reg_1600) + $signed(10'd992));

assign add_ln20_5_fu_1319_p2 = (add_ln20_4_reg_1795 + add_ln20_3_fu_1315_p2);

assign add_ln20_6_fu_1324_p2 = (add_ln20_5_fu_1319_p2 + add_ln20_2_fu_1311_p2);

assign add_ln20_7_fu_931_p2 = (mul_ln20_8_reg_1775 + mul_ln20_9_reg_1780);

assign add_ln20_8_fu_971_p2 = (mul_ln20_10_reg_1810 + mul_ln20_11_reg_1815);

assign add_ln20_9_fu_1346_p2 = (add_ln20_8_reg_1865 + add_ln20_7_reg_1830);

assign add_ln20_fu_811_p2 = (mul_ln20_1_reg_1680 + mul_ln20_reg_1675);

assign add_ln21_fu_1409_p2 = (add_ln20_29_fu_1404_p2 + add_ln20_14_fu_1386_p2);

assign add_ln22_fu_1291_p2 = (zext_ln22 + trunc_ln20_reg_1600);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign cov_address0 = zext_ln22_1_fu_1382_p1;

assign cov_d0 = {{add_ln21_fu_1409_p2}, {1'd0}};

assign icmp_ln17_fu_674_p2 = ((ap_sig_allocacmp_j_2 == 11'd32) ? 1'b1 : 1'b0);

assign j_2_cast_fu_680_p1 = ap_sig_allocacmp_j_2;

assign trunc_ln20_10_fu_847_p1 = data_q0[30:0];

assign trunc_ln20_11_fu_883_p1 = data_q1[30:0];

assign trunc_ln20_12_fu_887_p1 = data_q0[30:0];

assign trunc_ln20_13_fu_1239_p1 = data_q1[30:0];

assign trunc_ln20_14_fu_1243_p1 = data_q0[30:0];

assign trunc_ln20_15_fu_923_p1 = data_q1[30:0];

assign trunc_ln20_16_fu_927_p1 = data_q0[30:0];

assign trunc_ln20_17_fu_1303_p1 = data_q1[30:0];

assign trunc_ln20_18_fu_1307_p1 = data_q0[30:0];

assign trunc_ln20_19_fu_963_p1 = data_q1[30:0];

assign trunc_ln20_1_fu_731_p1 = data_q1[30:0];

assign trunc_ln20_20_fu_967_p1 = data_q0[30:0];

assign trunc_ln20_21_fu_1338_p1 = data_q1[30:0];

assign trunc_ln20_22_fu_1342_p1 = data_q0[30:0];

assign trunc_ln20_23_fu_1003_p1 = data_q1[30:0];

assign trunc_ln20_24_fu_1007_p1 = data_q0[30:0];

assign trunc_ln20_25_fu_1043_p1 = data_q1[30:0];

assign trunc_ln20_26_fu_1047_p1 = data_q0[30:0];

assign trunc_ln20_27_fu_1083_p1 = data_q1[30:0];

assign trunc_ln20_28_fu_1087_p1 = data_q0[30:0];

assign trunc_ln20_29_fu_1123_p1 = data_q1[30:0];

assign trunc_ln20_2_fu_735_p1 = data_q0[30:0];

assign trunc_ln20_30_fu_1127_p1 = data_q0[30:0];

assign trunc_ln20_31_fu_1163_p1 = data_q1[30:0];

assign trunc_ln20_32_fu_1167_p1 = data_q0[30:0];

assign trunc_ln20_3_fu_767_p1 = data_q1[30:0];

assign trunc_ln20_4_fu_771_p1 = data_q0[30:0];

assign trunc_ln20_5_fu_1195_p1 = data_q1[30:0];

assign trunc_ln20_6_fu_1199_p1 = data_q0[30:0];

assign trunc_ln20_7_fu_803_p1 = data_q1[30:0];

assign trunc_ln20_8_fu_807_p1 = data_q0[30:0];

assign trunc_ln20_9_fu_843_p1 = data_q1[30:0];

assign trunc_ln20_fu_685_p1 = ap_sig_allocacmp_j_2[9:0];

assign xor_ln20_fu_1211_p2 = (trunc_ln20_reg_1600 ^ 10'd512);

assign zext_ln16_1_cast_fu_662_p1 = zext_ln16_1;

assign zext_ln20_10_fu_830_p1 = add_ln20_40_fu_825_p2;

assign zext_ln20_11_fu_1180_p1 = add_ln20_41_fu_1175_p2;

assign zext_ln20_12_fu_1190_p1 = add_ln20_42_fu_1185_p2;

assign zext_ln20_13_fu_860_p1 = add_ln20_43_fu_855_p2;

assign zext_ln20_14_fu_870_p1 = add_ln20_44_fu_865_p2;

assign zext_ln20_15_fu_1216_p1 = xor_ln20_fu_1211_p2;

assign zext_ln20_16_fu_1226_p1 = add_ln20_45_fu_1221_p2;

assign zext_ln20_17_fu_900_p1 = add_ln20_46_fu_895_p2;

assign zext_ln20_18_fu_910_p1 = add_ln20_47_fu_905_p2;

assign zext_ln20_19_fu_1276_p1 = add_ln20_48_fu_1271_p2;

assign zext_ln20_1_fu_716_p1 = add_ln20_31_fu_711_p2;

assign zext_ln20_20_fu_1286_p1 = add_ln20_49_fu_1281_p2;

assign zext_ln20_21_fu_940_p1 = add_ln20_50_fu_935_p2;

assign zext_ln20_22_fu_950_p1 = add_ln20_51_fu_945_p2;

assign zext_ln20_23_fu_980_p1 = add_ln20_52_fu_975_p2;

assign zext_ln20_24_fu_990_p1 = add_ln20_53_fu_985_p2;

assign zext_ln20_25_fu_1020_p1 = add_ln20_54_fu_1015_p2;

assign zext_ln20_26_fu_1030_p1 = add_ln20_55_fu_1025_p2;

assign zext_ln20_27_fu_1060_p1 = add_ln20_56_fu_1055_p2;

assign zext_ln20_28_fu_1070_p1 = add_ln20_57_fu_1065_p2;

assign zext_ln20_29_fu_1100_p1 = add_ln20_58_fu_1095_p2;

assign zext_ln20_2_fu_726_p1 = add_ln20_32_fu_721_p2;

assign zext_ln20_30_fu_1110_p1 = add_ln20_59_fu_1105_p2;

assign zext_ln20_3_fu_1140_p1 = add_ln20_33_fu_1135_p2;

assign zext_ln20_4_fu_1150_p1 = add_ln20_34_fu_1145_p2;

assign zext_ln20_5_fu_744_p1 = add_ln20_35_fu_739_p2;

assign zext_ln20_6_fu_754_p1 = add_ln20_36_fu_749_p2;

assign zext_ln20_7_fu_780_p1 = add_ln20_37_fu_775_p2;

assign zext_ln20_8_fu_790_p1 = add_ln20_38_fu_785_p2;

assign zext_ln20_9_fu_820_p1 = add_ln20_39_fu_815_p2;

assign zext_ln20_fu_695_p1 = add_ln20_30_fu_689_p2;

assign zext_ln22_1_fu_1382_p1 = add_ln22_reg_2120;

endmodule //covariance_covariance_Pipeline_VITIS_LOOP_17_5
