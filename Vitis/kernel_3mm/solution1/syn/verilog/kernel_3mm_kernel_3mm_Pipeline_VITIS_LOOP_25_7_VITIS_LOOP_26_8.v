// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kernel_3mm_kernel_3mm_Pipeline_VITIS_LOOP_25_7_VITIS_LOOP_26_8 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        E_address0,
        E_ce0,
        E_q0,
        E_address1,
        E_ce1,
        E_q1,
        F_address0,
        F_ce0,
        F_q0,
        F_address1,
        F_ce1,
        F_q1,
        G_address0,
        G_ce0,
        G_we0,
        G_d0,
        G_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 5'd1;
parameter    ap_ST_fsm_pp0_stage1 = 5'd2;
parameter    ap_ST_fsm_pp0_stage2 = 5'd4;
parameter    ap_ST_fsm_pp0_stage3 = 5'd8;
parameter    ap_ST_fsm_pp0_stage4 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] E_address0;
output   E_ce0;
input  [31:0] E_q0;
output  [6:0] E_address1;
output   E_ce1;
input  [31:0] E_q1;
output  [6:0] F_address0;
output   F_ce0;
input  [31:0] F_q0;
output  [6:0] F_address1;
output   F_ce1;
input  [31:0] F_q1;
output  [6:0] G_address0;
output   G_ce0;
output   G_we0;
output  [31:0] G_d0;
input  [31:0] G_q0;

reg ap_idle;
reg[6:0] E_address0;
reg E_ce0;
reg[6:0] E_address1;
reg E_ce1;
reg[6:0] F_address0;
reg F_ce0;
reg[6:0] F_address1;
reg F_ce1;
reg[6:0] G_address0;
reg G_ce0;
reg G_we0;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state9_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_subdone;
reg   [0:0] icmp_ln25_reg_839;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_subdone;
reg  signed [31:0] reg_293;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire    ap_block_pp0_stage4_11001;
reg  signed [31:0] reg_297;
reg  signed [31:0] reg_301;
wire    ap_block_pp0_stage3_11001;
reg  signed [31:0] reg_305;
reg  signed [31:0] reg_309;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg  signed [31:0] reg_313;
reg  signed [31:0] reg_317;
reg  signed [31:0] reg_321;
wire   [31:0] grp_fu_325_p2;
reg   [31:0] reg_349;
wire   [31:0] grp_fu_331_p2;
reg   [31:0] reg_353;
wire   [31:0] grp_fu_337_p2;
reg   [31:0] reg_357;
wire   [31:0] grp_fu_343_p2;
reg   [31:0] reg_361;
reg   [3:0] i_2_reg_834;
wire   [0:0] icmp_ln25_fu_412_p2;
wire   [3:0] add_ln25_fu_427_p2;
reg   [3:0] add_ln25_reg_843;
wire   [0:0] icmp_ln26_fu_433_p2;
reg   [0:0] icmp_ln26_reg_848;
wire   [3:0] select_ln25_fu_439_p3;
reg   [3:0] select_ln25_reg_853;
wire   [6:0] select_ln25_2_fu_473_p3;
reg   [6:0] select_ln25_2_reg_862;
wire   [6:0] zext_ln30_12_fu_497_p1;
reg   [6:0] zext_ln30_12_reg_884;
wire   [5:0] zext_ln30_13_fu_586_p1;
reg   [5:0] zext_ln30_13_reg_931;
wire   [3:0] select_ln25_1_fu_651_p3;
reg   [3:0] select_ln25_1_reg_966;
wire   [31:0] add_ln30_4_fu_698_p2;
reg   [31:0] add_ln30_4_reg_992;
reg   [6:0] G_addr_reg_997;
reg  signed [31:0] F_load_8_reg_1002;
reg  signed [31:0] F_load_9_reg_1007;
wire   [31:0] add_ln30_fu_753_p2;
reg   [31:0] add_ln30_reg_1012;
wire   [31:0] add_ln30_2_fu_765_p2;
reg   [31:0] add_ln30_2_reg_1017;
wire   [31:0] mul_ln30_8_fu_771_p2;
reg   [31:0] mul_ln30_8_reg_1022;
wire   [31:0] mul_ln30_9_fu_776_p2;
reg   [31:0] mul_ln30_9_reg_1027;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln30_2_fu_481_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln30_3_fu_492_p1;
wire   [63:0] zext_ln30_19_fu_507_p1;
wire   [63:0] zext_ln30_20_fu_518_p1;
wire   [63:0] zext_ln30_7_fu_533_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln30_8_fu_543_p1;
wire   [63:0] j_2_cast_fu_548_p1;
wire   [63:0] zext_ln30_15_fu_561_p1;
wire   [63:0] zext_ln30_4_fu_571_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln30_5_fu_581_p1;
wire   [63:0] zext_ln30_16_fu_595_p1;
wire   [63:0] zext_ln30_17_fu_606_p1;
wire   [63:0] zext_ln30_6_fu_616_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln30_9_fu_626_p1;
wire   [63:0] zext_ln30_18_fu_636_p1;
wire   [63:0] zext_ln30_21_fu_646_p1;
wire   [63:0] zext_ln30_10_fu_661_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln30_11_fu_671_p1;
wire   [63:0] zext_ln30_22_fu_683_p1;
wire   [63:0] zext_ln30_23_fu_693_p1;
wire   [63:0] zext_ln28_1_fu_748_p1;
reg   [3:0] j_fu_90;
wire   [3:0] add_ln26_fu_704_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_j_load;
reg   [3:0] i_fu_94;
reg   [3:0] ap_sig_allocacmp_i_2;
reg   [6:0] indvar_flatten43_fu_98;
wire   [6:0] add_ln25_9_fu_418_p2;
reg   [6:0] ap_sig_allocacmp_indvar_flatten43_load;
wire   [4:0] tmp_1_fu_394_p3;
wire   [6:0] tmp_s_fu_386_p3;
wire   [6:0] zext_ln30_fu_402_p1;
wire   [4:0] tmp_3_fu_455_p3;
wire   [6:0] tmp_2_fu_447_p3;
wire   [6:0] zext_ln30_1_fu_463_p1;
wire   [6:0] add_ln30_11_fu_467_p2;
wire   [6:0] add_ln30_10_fu_406_p2;
wire   [6:0] or_ln25_fu_486_p2;
wire   [6:0] add_ln30_16_fu_501_p2;
wire   [6:0] add_ln30_17_fu_512_p2;
wire   [6:0] add_ln25_4_fu_528_p2;
wire   [6:0] add_ln25_5_fu_538_p2;
wire   [4:0] zext_ln30_14_fu_552_p1;
wire   [4:0] add_ln30_12_fu_555_p2;
wire   [6:0] add_ln25_1_fu_566_p2;
wire   [6:0] add_ln25_2_fu_576_p2;
wire   [5:0] add_ln30_13_fu_589_p2;
wire   [5:0] add_ln30_14_fu_600_p2;
wire   [6:0] add_ln25_3_fu_611_p2;
wire   [6:0] add_ln25_6_fu_621_p2;
wire   [5:0] add_ln30_15_fu_631_p2;
wire   [6:0] add_ln30_18_fu_641_p2;
wire   [6:0] add_ln25_7_fu_656_p2;
wire   [6:0] add_ln25_8_fu_666_p2;
wire   [6:0] tmp_24_cast_fu_676_p3;
wire   [6:0] add_ln30_19_fu_688_p2;
wire   [4:0] tmp_5_fu_726_p3;
wire   [6:0] tmp_4_fu_719_p3;
wire   [6:0] zext_ln28_fu_733_p1;
wire   [6:0] add_ln28_fu_737_p2;
wire   [6:0] add_ln28_1_fu_743_p2;
wire   [31:0] add_ln30_1_fu_759_p2;
wire   [31:0] add_ln30_6_fu_790_p2;
wire   [31:0] add_ln30_7_fu_794_p2;
wire   [31:0] add_ln30_5_fu_785_p2;
wire   [31:0] add_ln30_8_fu_800_p2;
wire   [31:0] add_ln30_3_fu_781_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [4:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

kernel_3mm_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U20(
    .din0(reg_301),
    .din1(reg_309),
    .dout(grp_fu_325_p2)
);

kernel_3mm_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U21(
    .din0(reg_305),
    .din1(reg_313),
    .dout(grp_fu_331_p2)
);

kernel_3mm_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U22(
    .din0(reg_317),
    .din1(reg_293),
    .dout(grp_fu_337_p2)
);

kernel_3mm_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U23(
    .din0(reg_321),
    .din1(reg_297),
    .dout(grp_fu_343_p2)
);

kernel_3mm_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U24(
    .din0(F_load_8_reg_1002),
    .din1(reg_309),
    .dout(mul_ln30_8_fu_771_p2)
);

kernel_3mm_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U25(
    .din0(F_load_9_reg_1007),
    .din1(reg_313),
    .dout(mul_ln30_9_fu_776_p2)
);

kernel_3mm_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_94 <= 4'd0;
    end else if (((icmp_ln25_reg_839 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        i_fu_94 <= select_ln25_1_fu_651_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln25_fu_412_p2 == 1'd0))) begin
            indvar_flatten43_fu_98 <= add_ln25_9_fu_418_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten43_fu_98 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_90 <= 4'd0;
    end else if (((icmp_ln25_reg_839 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        j_fu_90 <= add_ln26_fu_704_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        F_load_8_reg_1002 <= F_q1;
        F_load_9_reg_1007 <= F_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        G_addr_reg_997 <= zext_ln28_1_fu_748_p1;
        i_2_reg_834 <= ap_sig_allocacmp_i_2;
        icmp_ln25_reg_839 <= icmp_ln25_fu_412_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln25_fu_412_p2 == 1'd0))) begin
        add_ln25_reg_843 <= add_ln25_fu_427_p2;
        icmp_ln26_reg_848 <= icmp_ln26_fu_433_p2;
        select_ln25_2_reg_862[6 : 1] <= select_ln25_2_fu_473_p3[6 : 1];
        select_ln25_reg_853 <= select_ln25_fu_439_p3;
        zext_ln30_12_reg_884[3 : 0] <= zext_ln30_12_fu_497_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln30_2_reg_1017 <= add_ln30_2_fu_765_p2;
        add_ln30_reg_1012 <= add_ln30_fu_753_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_reg_839 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln30_4_reg_992 <= add_ln30_4_fu_698_p2;
        select_ln25_1_reg_966 <= select_ln25_1_fu_651_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_ln30_8_reg_1022 <= mul_ln30_8_fu_771_p2;
        mul_ln30_9_reg_1027 <= mul_ln30_9_fu_776_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln25_reg_839 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln25_reg_839 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_293 <= E_q1;
        reg_297 <= E_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln25_reg_839 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln25_reg_839 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_301 <= F_q1;
        reg_305 <= F_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln25_reg_839 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln25_reg_839 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_309 <= E_q1;
        reg_313 <= E_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln25_reg_839 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln25_reg_839 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        reg_317 <= F_q1;
        reg_321 <= F_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln25_reg_839 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_349 <= grp_fu_325_p2;
        reg_353 <= grp_fu_331_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln25_reg_839 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_357 <= grp_fu_337_p2;
        reg_361 <= grp_fu_343_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_reg_839 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        zext_ln30_13_reg_931[3 : 0] <= zext_ln30_13_fu_586_p1[3 : 0];
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            E_address0 = zext_ln30_11_fu_671_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            E_address0 = zext_ln30_9_fu_626_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            E_address0 = zext_ln30_5_fu_581_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            E_address0 = zext_ln30_8_fu_543_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            E_address0 = zext_ln30_3_fu_492_p1;
        end else begin
            E_address0 = 'bx;
        end
    end else begin
        E_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            E_address1 = zext_ln30_10_fu_661_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            E_address1 = zext_ln30_6_fu_616_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            E_address1 = zext_ln30_4_fu_571_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            E_address1 = zext_ln30_7_fu_533_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            E_address1 = zext_ln30_2_fu_481_p1;
        end else begin
            E_address1 = 'bx;
        end
    end else begin
        E_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        E_ce0 = 1'b1;
    end else begin
        E_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        E_ce1 = 1'b1;
    end else begin
        E_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            F_address0 = zext_ln30_23_fu_693_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            F_address0 = zext_ln30_21_fu_646_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            F_address0 = zext_ln30_17_fu_606_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            F_address0 = zext_ln30_15_fu_561_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            F_address0 = zext_ln30_20_fu_518_p1;
        end else begin
            F_address0 = 'bx;
        end
    end else begin
        F_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            F_address1 = zext_ln30_22_fu_683_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            F_address1 = zext_ln30_18_fu_636_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            F_address1 = zext_ln30_16_fu_595_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            F_address1 = j_2_cast_fu_548_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            F_address1 = zext_ln30_19_fu_507_p1;
        end else begin
            F_address1 = 'bx;
        end
    end else begin
        F_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        F_ce0 = 1'b1;
    end else begin
        F_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        F_ce1 = 1'b1;
    end else begin
        F_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            G_address0 = G_addr_reg_997;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            G_address0 = zext_ln28_1_fu_748_p1;
        end else begin
            G_address0 = 'bx;
        end
    end else begin
        G_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        G_ce0 = 1'b1;
    end else begin
        G_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        G_we0 = 1'b1;
    end else begin
        G_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln25_reg_839 == 1'd1) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_2 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_2 = i_fu_94;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten43_load = 7'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten43_load = indvar_flatten43_fu_98;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 4'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_90;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign G_d0 = (add_ln30_8_fu_800_p2 + add_ln30_3_fu_781_p2);

assign add_ln25_1_fu_566_p2 = (select_ln25_2_reg_862 + 7'd2);

assign add_ln25_2_fu_576_p2 = (select_ln25_2_reg_862 + 7'd3);

assign add_ln25_3_fu_611_p2 = (select_ln25_2_reg_862 + 7'd4);

assign add_ln25_4_fu_528_p2 = (select_ln25_2_reg_862 + 7'd5);

assign add_ln25_5_fu_538_p2 = (select_ln25_2_reg_862 + 7'd6);

assign add_ln25_6_fu_621_p2 = (select_ln25_2_reg_862 + 7'd7);

assign add_ln25_7_fu_656_p2 = (select_ln25_2_reg_862 + 7'd8);

assign add_ln25_8_fu_666_p2 = (select_ln25_2_reg_862 + 7'd9);

assign add_ln25_9_fu_418_p2 = (ap_sig_allocacmp_indvar_flatten43_load + 7'd1);

assign add_ln25_fu_427_p2 = (ap_sig_allocacmp_i_2 + 4'd1);

assign add_ln26_fu_704_p2 = (select_ln25_reg_853 + 4'd1);

assign add_ln28_1_fu_743_p2 = (add_ln28_fu_737_p2 + zext_ln30_12_reg_884);

assign add_ln28_fu_737_p2 = (tmp_4_fu_719_p3 + zext_ln28_fu_733_p1);

assign add_ln30_10_fu_406_p2 = (tmp_s_fu_386_p3 + zext_ln30_fu_402_p1);

assign add_ln30_11_fu_467_p2 = (tmp_2_fu_447_p3 + zext_ln30_1_fu_463_p1);

assign add_ln30_12_fu_555_p2 = (zext_ln30_14_fu_552_p1 + 5'd10);

assign add_ln30_13_fu_589_p2 = (zext_ln30_13_fu_586_p1 + 6'd20);

assign add_ln30_14_fu_600_p2 = (zext_ln30_13_fu_586_p1 + 6'd30);

assign add_ln30_15_fu_631_p2 = ($signed(zext_ln30_13_reg_931) + $signed(6'd40));

assign add_ln30_16_fu_501_p2 = (zext_ln30_12_fu_497_p1 + 7'd50);

assign add_ln30_17_fu_512_p2 = (zext_ln30_12_fu_497_p1 + 7'd60);

assign add_ln30_18_fu_641_p2 = ($signed(zext_ln30_12_reg_884) + $signed(7'd70));

assign add_ln30_19_fu_688_p2 = ($signed(zext_ln30_12_reg_884) + $signed(7'd90));

assign add_ln30_1_fu_759_p2 = (reg_349 + reg_353);

assign add_ln30_2_fu_765_p2 = (add_ln30_1_fu_759_p2 + reg_361);

assign add_ln30_3_fu_781_p2 = (add_ln30_2_reg_1017 + add_ln30_reg_1012);

assign add_ln30_4_fu_698_p2 = (reg_349 + reg_353);

assign add_ln30_5_fu_785_p2 = (add_ln30_4_reg_992 + reg_357);

assign add_ln30_6_fu_790_p2 = (mul_ln30_8_reg_1022 + mul_ln30_9_reg_1027);

assign add_ln30_7_fu_794_p2 = (add_ln30_6_fu_790_p2 + reg_361);

assign add_ln30_8_fu_800_p2 = (add_ln30_7_fu_794_p2 + add_ln30_5_fu_785_p2);

assign add_ln30_fu_753_p2 = (G_q0 + reg_357);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign icmp_ln25_fu_412_p2 = ((ap_sig_allocacmp_indvar_flatten43_load == 7'd100) ? 1'b1 : 1'b0);

assign icmp_ln26_fu_433_p2 = ((ap_sig_allocacmp_j_load == 4'd10) ? 1'b1 : 1'b0);

assign j_2_cast_fu_548_p1 = select_ln25_reg_853;

assign or_ln25_fu_486_p2 = (select_ln25_2_fu_473_p3 | 7'd1);

assign select_ln25_1_fu_651_p3 = ((icmp_ln26_reg_848[0:0] == 1'b1) ? add_ln25_reg_843 : i_2_reg_834);

assign select_ln25_2_fu_473_p3 = ((icmp_ln26_fu_433_p2[0:0] == 1'b1) ? add_ln30_11_fu_467_p2 : add_ln30_10_fu_406_p2);

assign select_ln25_fu_439_p3 = ((icmp_ln26_fu_433_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_j_load);

assign tmp_1_fu_394_p3 = {{ap_sig_allocacmp_i_2}, {1'd0}};

assign tmp_24_cast_fu_676_p3 = {{3'd5}, {select_ln25_reg_853}};

assign tmp_2_fu_447_p3 = {{add_ln25_fu_427_p2}, {3'd0}};

assign tmp_3_fu_455_p3 = {{add_ln25_fu_427_p2}, {1'd0}};

assign tmp_4_fu_719_p3 = {{select_ln25_1_reg_966}, {3'd0}};

assign tmp_5_fu_726_p3 = {{select_ln25_1_reg_966}, {1'd0}};

assign tmp_s_fu_386_p3 = {{ap_sig_allocacmp_i_2}, {3'd0}};

assign zext_ln28_1_fu_748_p1 = add_ln28_1_fu_743_p2;

assign zext_ln28_fu_733_p1 = tmp_5_fu_726_p3;

assign zext_ln30_10_fu_661_p1 = add_ln25_7_fu_656_p2;

assign zext_ln30_11_fu_671_p1 = add_ln25_8_fu_666_p2;

assign zext_ln30_12_fu_497_p1 = select_ln25_fu_439_p3;

assign zext_ln30_13_fu_586_p1 = select_ln25_reg_853;

assign zext_ln30_14_fu_552_p1 = select_ln25_reg_853;

assign zext_ln30_15_fu_561_p1 = add_ln30_12_fu_555_p2;

assign zext_ln30_16_fu_595_p1 = add_ln30_13_fu_589_p2;

assign zext_ln30_17_fu_606_p1 = add_ln30_14_fu_600_p2;

assign zext_ln30_18_fu_636_p1 = add_ln30_15_fu_631_p2;

assign zext_ln30_19_fu_507_p1 = add_ln30_16_fu_501_p2;

assign zext_ln30_1_fu_463_p1 = tmp_3_fu_455_p3;

assign zext_ln30_20_fu_518_p1 = add_ln30_17_fu_512_p2;

assign zext_ln30_21_fu_646_p1 = add_ln30_18_fu_641_p2;

assign zext_ln30_22_fu_683_p1 = tmp_24_cast_fu_676_p3;

assign zext_ln30_23_fu_693_p1 = add_ln30_19_fu_688_p2;

assign zext_ln30_2_fu_481_p1 = select_ln25_2_fu_473_p3;

assign zext_ln30_3_fu_492_p1 = or_ln25_fu_486_p2;

assign zext_ln30_4_fu_571_p1 = add_ln25_1_fu_566_p2;

assign zext_ln30_5_fu_581_p1 = add_ln25_2_fu_576_p2;

assign zext_ln30_6_fu_616_p1 = add_ln25_3_fu_611_p2;

assign zext_ln30_7_fu_533_p1 = add_ln25_4_fu_528_p2;

assign zext_ln30_8_fu_543_p1 = add_ln25_5_fu_538_p2;

assign zext_ln30_9_fu_626_p1 = add_ln25_6_fu_621_p2;

assign zext_ln30_fu_402_p1 = tmp_1_fu_394_p3;

always @ (posedge ap_clk) begin
    select_ln25_2_reg_862[0] <= 1'b0;
    zext_ln30_12_reg_884[6:4] <= 3'b000;
    zext_ln30_13_reg_931[5:4] <= 2'b00;
end

endmodule //kernel_3mm_kernel_3mm_Pipeline_VITIS_LOOP_25_7_VITIS_LOOP_26_8
