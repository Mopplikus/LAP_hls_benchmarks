// kernel_3mm.v

// Generated using ACDS version 21.4 67

`timescale 1 ps / 1 ps
module kernel_3mm (
		input  wire        clock,  //  clock.clk
		input  wire        resetn, //  reset.reset_n
		input  wire        start,  //   call.valid
		output wire        busy,   //       .stall
		output wire        done,   // return.valid
		input  wire        stall,  //       .stall
		input  wire [63:0] A,      //      A.data
		input  wire [63:0] B,      //      B.data
		input  wire [63:0] C,      //      C.data
		input  wire [63:0] D,      //      D.data
		input  wire [63:0] E,      //      E.data
		input  wire [63:0] F,      //      F.data
		input  wire [63:0] G       //      G.data
	);

	kernel_3mm_internal kernel_3mm_internal_inst (
		.clock  (clock),  //   input,   width = 1,  clock.clk
		.resetn (resetn), //   input,   width = 1,  reset.reset_n
		.start  (start),  //   input,   width = 1,   call.valid
		.busy   (busy),   //  output,   width = 1,       .stall
		.done   (done),   //  output,   width = 1, return.valid
		.stall  (stall),  //   input,   width = 1,       .stall
		.A      (A),      //   input,  width = 64,      A.data
		.B      (B),      //   input,  width = 64,      B.data
		.C      (C),      //   input,  width = 64,      C.data
		.D      (D),      //   input,  width = 64,      D.data
		.E      (E),      //   input,  width = 64,      E.data
		.F      (F),      //   input,  width = 64,      F.data
		.G      (G)       //   input,  width = 64,      G.data
	);

endmodule
