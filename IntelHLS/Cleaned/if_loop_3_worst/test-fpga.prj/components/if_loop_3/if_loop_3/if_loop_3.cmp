	component if_loop_3 is
		port (
			clock                : in  std_logic                      := 'X';             -- clk
			resetn               : in  std_logic                      := 'X';             -- reset_n
			start                : in  std_logic                      := 'X';             -- valid
			busy                 : out std_logic;                                         -- stall
			done                 : out std_logic;                                         -- valid
			stall                : in  std_logic                      := 'X';             -- stall
			returndata           : out std_logic_vector(31 downto 0);                     -- data
			a                    : in  std_logic_vector(63 downto 0)  := (others => 'X'); -- data
			b                    : in  std_logic_vector(63 downto 0)  := (others => 'X'); -- data
			n                    : in  std_logic_vector(31 downto 0)  := (others => 'X'); -- data
			avmm_1_rw_address    : out std_logic_vector(31 downto 0);                     -- address
			avmm_1_rw_byteenable : out std_logic_vector(31 downto 0);                     -- byteenable
			avmm_1_rw_read       : out std_logic;                                         -- read
			avmm_1_rw_readdata   : in  std_logic_vector(255 downto 0) := (others => 'X'); -- readdata
			avmm_1_rw_write      : out std_logic;                                         -- write
			avmm_1_rw_writedata  : out std_logic_vector(255 downto 0);                    -- writedata
			avmm_4_rw_address    : out std_logic_vector(31 downto 0);                     -- address
			avmm_4_rw_byteenable : out std_logic_vector(31 downto 0);                     -- byteenable
			avmm_4_rw_read       : out std_logic;                                         -- read
			avmm_4_rw_readdata   : in  std_logic_vector(255 downto 0) := (others => 'X'); -- readdata
			avmm_4_rw_write      : out std_logic;                                         -- write
			avmm_4_rw_writedata  : out std_logic_vector(255 downto 0)                     -- writedata
		);
	end component if_loop_3;

